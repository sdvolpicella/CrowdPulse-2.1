[{"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\index.js":"1","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\App.js":"2","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\script.js":"3","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\SentimentCharts.js":"4","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Maps.js":"5","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TimeLines.js":"6","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\WordCloud.js":"7","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TweetList.js":"8","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\SearchFilters.js":"9","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TweetsTable.js":"10","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\BarChart.js":"11","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\TimeLineChart.js":"12","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\LineChart.js":"13","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\RadarChart.js":"14","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\PieChart.js":"15","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\data\\countries.js":"16","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Table\\index.jsx":"17","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\hooks\\useTable.js":"18","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Table\\TableFooter\\index.jsx":"19"},{"size":199,"mtime":1635625108488,"results":"20","hashOfConfig":"21"},{"size":7210,"mtime":1638210363838,"results":"22","hashOfConfig":"21"},{"size":9795,"mtime":1635948122569,"results":"23","hashOfConfig":"21"},{"size":14435,"mtime":1637967520858,"results":"24","hashOfConfig":"21"},{"size":9079,"mtime":1638210443344,"results":"25","hashOfConfig":"21"},{"size":9116,"mtime":1638188286742,"results":"26","hashOfConfig":"21"},{"size":0,"mtime":1637696415671,"results":"27","hashOfConfig":"21"},{"size":8615,"mtime":1638030469723,"results":"28","hashOfConfig":"21"},{"size":2053,"mtime":1637951822666,"results":"29","hashOfConfig":"21"},{"size":453,"mtime":1638005983371,"results":"30","hashOfConfig":"21"},{"size":942,"mtime":1637696423388,"results":"31","hashOfConfig":"21"},{"size":781,"mtime":1638188286741,"results":"32","hashOfConfig":"21"},{"size":663,"mtime":1637696427991,"results":"33","hashOfConfig":"21"},{"size":1239,"mtime":1637696438195,"results":"34","hashOfConfig":"21"},{"size":723,"mtime":1637696433255,"results":"35","hashOfConfig":"21"},{"size":678,"mtime":1637951822675,"results":"36","hashOfConfig":"21"},{"size":1465,"mtime":1638024635448,"results":"37","hashOfConfig":"21"},{"size":849,"mtime":1637951822676,"results":"38","hashOfConfig":"21"},{"size":637,"mtime":1638023405248,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h81js9",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\index.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\App.js",["87","88"],"import './style.css';\r\nimport './script.js'\r\nimport SentimentCharts from './components/SentimentCharts';\r\nimport TweetList from './components/TweetList';\r\nimport WordCloud from './components/WordCloud';\r\nimport TimeLines from './components/TimeLines';\r\nimport Maps from './components/Maps';\r\n\r\n\r\nimport React from 'react';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  \r\n\r\n  state = {\r\n    content:0,\r\n    db_selected:\"db1\"  };\r\n\r\n  handleDbChange = (db) => {\r\n    this.setState({db_selected:db})\r\n  }\r\n\r\n  displaySentimentCharts = () => {\r\n    this.setState({content:1})\r\n  }\r\n \r\n  displayWordCloud = () => {\r\n    this.setState({content:2})\r\n  }\r\n \r\n  displayTimeLines = () => {\r\n    this.setState({content:3})\r\n  }\r\n \r\n  displayTweetList = () => {\r\n    this.setState({content:4})\r\n  }\r\n\r\n  displayMaps = () => {\r\n    this.setState({content:5})\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const renderContent = () => {\r\n      switch(this.state.content){\r\n        case(1): \r\n          return <SentimentCharts db={this.state.db_selected}/>;\r\n        case(2): \r\n          return <WordCloud/>;\r\n        case(3): \r\n          return <TimeLines db={this.state.db_selected}/>;\r\n        case(4):\r\n          return <TweetList db={this.state.db_selected}/>;\r\n        case(5): \r\n          return <Maps db={this.state.db_selected}/>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <meta charSet=\"UTF-8\" />\r\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>CrowdPulse</title>\r\n        {/* Favicon */}\r\n        {/* Custom styles */}\r\n        <link rel=\"stylesheet\" href=\"./css/style.css\" />\r\n        <div className=\"layer\" />\r\n        {/* ! Body */}\r\n        <a className=\"skip-link sr-only\" href=\"#skip-target\">Skip to content</a>\r\n        <div className=\"page-flex\" style={{ backgroundImage: 'url(img/connection.png)' }}>\r\n          {/* ! Sidebar */}\r\n          <aside className=\"sidebar\">\r\n            <div className=\"sidebar-start\">\r\n              <div className=\"sidebar-head\">\r\n                <button className=\"sidebar-toggle transparent-btn\" title=\"Menu\" type=\"button\">\r\n                  <span className=\"sr-only\">Toggle menu</span>\r\n                  <span className=\"icon menu-toggle\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"sidebar-body\">\r\n                <ul className=\"sidebar-body-menu\">\r\n                  <li>\r\n                    <a className=\"active\" href=\"/\"><span className=\"icon home\" aria-hidden=\"true\" />Dashboard</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#export\"><span className=\"icon edit\" aria-hidden=\"true\" />Export</a>\r\n                  </li>\r\n                  <li>\r\n                    <a class=\"show-cat-btn\" href=\"##\">\r\n                        <span class=\"icon document\" aria-hidden=\"true\"></span>Data Visualization\r\n                        <span class=\"category__btn transparent-btn\" title=\"Open list\">\r\n                            <span class=\"sr-only\">Open list</span>\r\n                            <span class=\"icon arrow-down\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </a>\r\n                    <ul class=\"cat-sub-menu\">\r\n                        <li>\r\n                            <a href=\"#sentiment\"  onClick={() => {this.displaySentimentCharts()}}>Sentiment</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#word\" onClick={() => {this.displayWordCloud()}}>Word</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#timeLines\" onClick={() => {this.displayTimeLines()}}>Timelines</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#tweetlist\" onClick={() => {this.displayTweetList()}}>Tweet List</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#maps\" onClick={() => {this.displayMaps()}}>Tweet List</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <a class=\"show-cat-btn\" href=\"##\">\r\n                        <span class=\"icon folder\" aria-hidden=\"true\"></span>Database\r\n                        <span class=\"category__btn transparent-btn\" title=\"Open list\">\r\n                            <span class=\"sr-only\">Open list</span>\r\n                            <span class=\"icon arrow-down\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </a>\r\n                    <ul class=\"cat-sub-menu\">\r\n                        <li>\r\n                            <a href=\"#\" onClick={() => {this.handleDbChange(\"Db1\")}}>Db1</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"##\" onClick={() => {this.handleDbChange(\"Db2\")}}>Db2</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                  \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"sidebar-footer\">\r\n              <ul className=\"sidebar-body-menu\">\r\n                <li>\r\n                  <button className=\"theme-switcher gray-circle-btn\" type=\"button\" title=\"Switch theme\">\r\n                    <span className=\"sr-only\">Switch theme</span>\r\n                    <i className=\"sun-icon\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-brightness-high-fill\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                    </svg></i>\r\n                    <i className=\"moon-icon \" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-moon-fill\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\" />\r\n                    </svg></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </aside>\r\n          {renderContent()}\r\n        \r\n\r\n        </div>\r\n        {/* Chart library */}\r\n        {/* Icons library */}\r\n        {/* Custom scripts */}\r\n        {/* partial */}\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\script.js",["89","90","91","92"],"\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n  (function () {\n    var sidebar = document.querySelector('.sidebar'),\n        catSubMenu = document.querySelector('.cat-sub-menu'),\n        sidebarBtns = document.querySelectorAll('.sidebar-toggle');\n\n    var _iterator = _createForOfIteratorHelper(sidebarBtns),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var sidebarBtn = _step.value;\n\n        if (sidebarBtn && catSubMenu && sidebarBtn) {\n          sidebarBtn.addEventListener('click', function () {\n            var _iterator2 = _createForOfIteratorHelper(sidebarBtns),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var sdbrBtn = _step2.value;\n                sdbrBtn.classList.toggle('rotated');\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            sidebar.classList.toggle('hidden');\n            catSubMenu.classList.remove('visible');\n          });\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  })();\n\n  (function () {\n    var showCatBtns = document.querySelectorAll('.show-cat-btn');\n\n    if (showCatBtns) {\n      showCatBtns.forEach(function (showCatBtn) {\n        var catSubMenu = showCatBtn.nextElementSibling;\n        showCatBtn.addEventListener('click', function (e) {\n          e.preventDefault();\n          catSubMenu.classList.toggle('visible');\n          var catBtnToRotate = document.querySelector('.category__btn');\n          catBtnToRotate.classList.toggle('rotated');\n        });\n      });\n    }\n  })();\n\n  (function () {\n    var showMenu = document.querySelector('.lang-switcher');\n    var langMenu = document.querySelector('.lang-menu');\n    var layer = document.querySelector('.layer');\n\n    if (showMenu) {\n      showMenu.addEventListener('click', function () {\n        langMenu.classList.add('active');\n        layer.classList.add('active');\n      });\n\n      if (layer) {\n        layer.addEventListener('click', function (e) {\n          if (langMenu.classList.contains('active')) {\n            langMenu.classList.remove('active');\n            layer.classList.remove('active');\n          }\n        });\n      }\n    }\n  })();\n\n  (function () {\n    var userDdBtnList = document.querySelectorAll('.dropdown-btn');\n    var userDdList = document.querySelectorAll('.users-item-dropdown');\n    var layer = document.querySelector('.layer');\n\n    if (userDdList && userDdBtnList) {\n      var _iterator3 = _createForOfIteratorHelper(userDdBtnList),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var userDdBtn = _step3.value;\n          userDdBtn.addEventListener('click', function (e) {\n            layer.classList.add('active');\n\n            var _iterator4 = _createForOfIteratorHelper(userDdList),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var userDd = _step4.value;\n\n                if (e.currentTarget.nextElementSibling == userDd) {\n                  if (userDd.classList.contains('active')) {\n                    userDd.classList.remove('active');\n                  } else {\n                    userDd.classList.add('active');\n                  }\n                } else {\n                  userDd.classList.remove('active');\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    if (layer) {\n      layer.addEventListener('click', function (e) {\n        var _iterator5 = _createForOfIteratorHelper(userDdList),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var userDd = _step5.value;\n\n            if (userDd.classList.contains('active')) {\n              userDd.classList.remove('active');\n              layer.classList.remove('active');\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      });\n    }\n  })();\n\n  (function () {\n    //Chart.defaults.backgroundColor = '#000';\n    var darkMode = localStorage.getItem('darkMode');\n    var darkModeToggle = document.querySelector('.theme-switcher');\n\n    var enableDarkMode = function enableDarkMode() {\n      document.body.classList.add('darkmode');\n      localStorage.setItem('darkMode', 'enabled');\n    };\n\n    var disableDarkMode = function disableDarkMode() {\n      document.body.classList.remove('darkmode');\n      localStorage.setItem('darkMode', null);\n    };\n\n    if (darkMode === 'enabled') {\n      enableDarkMode();\n    }\n\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', function () {\n        darkMode = localStorage.getItem('darkMode');\n\n        if (darkMode !== 'enabled') {\n          enableDarkMode();\n        } else {\n          disableDarkMode();\n        }\n\n      \n      });\n    }\n  })();\n\n  (function () {\n    var checkAll = document.querySelector('.check-all');\n    var checkers = document.querySelectorAll('.check');\n\n    if (checkAll && checkers) {\n      checkAll.addEventListener('change', function (e) {\n        var _iterator6 = _createForOfIteratorHelper(checkers),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var checker = _step6.value;\n\n            if (checkAll.checked) {\n              checker.checked = true;\n              checker.parentElement.parentElement.parentElement.classList.add('active');\n            } else {\n              checker.checked = false;\n              checker.parentElement.parentElement.parentElement.classList.remove('active');\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      });\n\n      var _iterator7 = _createForOfIteratorHelper(checkers),\n          _step7;\n\n      try {\n        var _loop = function _loop() {\n          var checker = _step7.value;\n          checker.addEventListener('change', function (e) {\n            checker.parentElement.parentElement.parentElement.classList.toggle('active');\n\n            if (!checker.checked) {\n              checkAll.checked = false;\n            }\n\n            var totalCheckbox = document.querySelectorAll('.users-table .check');\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\n\n            if (totalCheckbox && totalChecked) {\n              if (totalCheckbox.length == totalChecked.length) {\n                checkAll.checked = true;\n              } else {\n                checkAll.checked = false;\n              }\n            }\n          });\n        };\n\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  })();\n\n  (function () {\n    var checkAll = document.querySelector('.check-all');\n    var checkers = document.querySelectorAll('.check');\n    var checkedSum = document.querySelector('.checked-sum');\n\n    if (checkedSum && checkAll && checkers) {\n      checkAll.addEventListener('change', function (e) {\n        var totalChecked = document.querySelectorAll('.users-table .check:checked');\n        checkedSum.textContent = totalChecked.length;\n      });\n\n      var _iterator8 = _createForOfIteratorHelper(checkers),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var checker = _step8.value;\n          checker.addEventListener('change', function (e) {\n            var totalChecked = document.querySelectorAll('.users-table .check:checked');\n            checkedSum.textContent = totalChecked.length;\n          });\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  })();\n\n});","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\SentimentCharts.js",["93","94","95","96","97","98","99","100","101","102","103","104"],"import axios from 'axios';\r\nimport BarChart from './Charts/BarChart';\r\nimport LineChart from './Charts/LineChart';\r\nimport PieChart from './Charts/PieChart';\r\nimport RadarChart from './Charts/RadarChart';\r\nimport SearchFilters from '../components/SearchFilters';\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nclass SentimentCharts extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            totalTweets: 0,\r\n            flagType: 0,\r\n            counter : [],\r\n            oldData : [],\r\n            data: [],\r\n            fromDate: null,\r\n            toDate : null,\r\n\r\n        }\r\n        \r\n        this.getSentimentData(this.props.db)\r\n    }\r\n\r\n    getSentimentData = (db) => {\r\n\r\n      //TODO selezione db\r\n        axios.get('/tweet/getAnalyzedData')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          var negative = 0\r\n          var positive = 0\r\n          var neutral = 0\r\n          var i=0\r\n          this.state.totalTweets = data.length\r\n          while(i<data.length){\r\n              if (data[i].sentiment['sent-it'].sentiment==='negative')\r\n                  negative++\r\n              else if (data[i].sentiment['sent-it'].sentiment==='positive')\r\n                  positive ++\r\n              else\r\n                  neutral ++\r\n    \r\n              i++\r\n          }\r\n          i=0\r\n          while(i<data.length){\r\n            if (data[i].sentiment['feel-it'].sentiment==='negative')\r\n                negative++\r\n            else if (data[i].sentiment['feel-it'].sentiment==='positive')\r\n                positive ++\r\n            else\r\n                neutral ++\r\n    \r\n            i++\r\n        }\r\n    \r\n          var tempCounter = {\r\n              positive: positive,\r\n              negative: negative,\r\n              neutral: neutral,\r\n           }\r\n    \r\n    \r\n          this.setState({ counter: tempCounter })\r\n          this.setState({data : data})\r\n          this.setState({oldData : data})\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.state.data = tempData//set Data\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.state.data = tempData //save filtered datas\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n         this.state.data = tempData //set Data\r\n    \r\n          }\r\n\r\n          this.handleQuery()\r\n    \r\n    \r\n      }\r\n    \r\n      handleCategory = (event) => {\r\n        this.state.flagType = event.target.value\r\n        this.handleQuery()\r\n      }\r\n\r\n      handleQuery = () => {\r\n        if(this.state.data.length===0){\r\n          \r\n          var tempCounter = {\r\n            positive:0,\r\n            negative:0,\r\n            neutral:0\r\n          }\r\n          this.state.totalTweets=0\r\n          this.setState({counter : tempCounter})//reset counters        \r\n          this.setState({data: this.state.oldData}) //save last data state\r\n          \r\n          \r\n        }else{\r\n          this.state.totalTweets=this.state.data.length\r\n          this.query()\r\n        }\r\n      }\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>0){\r\n          \r\n          this.filterByTags(tags)\r\n        }else{\r\n          \r\n          this.state.data= this.state.oldData\r\n          console.log(this.state.data)\r\n          this.handleQuery()\r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n\r\n        //this.setState({oldData: this.state.data}) //save last data state\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          while(j<this.state.data[i].tags.tag_me.length){\r\n            temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n            while(k<tags.length){\r\n              if(temp.some(a => a.includes(tags[k].name))===true){\r\n                flag = true               \r\n              }else{\r\n                flag = false\r\n              }\r\n              k++\r\n            }\r\n\r\n            if(flag===true){\r\n              tempData[z]= this.state.data[i]\r\n              z++\r\n            }\r\n            k=0\r\n            j++\r\n          }\r\n          i++\r\n        }\r\n\r\n        this.state.data = tempData //set Data\r\n        console.log(this.state.data)\r\n        this.handleQuery()\r\n        \r\n      }\r\n\r\n    \r\n      query = () => {\r\n       \r\n        var negative = 0\r\n        var positive = 0\r\n        var neutral = 0\r\n        var i=0\r\n        var tempCounter \r\n\r\n\r\n        if (this.state.flagType===0) {\r\n          \r\n         \r\n          while(i<this.state.data.length){\r\n            \r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            i++\r\n          }\r\n          i=0\r\n          while(i<this.state.data.length){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            i++\r\n          }\r\n    \r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n\r\n        }else if(this.state.flagType===1){\r\n          while(i<this.state.data.length){\r\n            if (this.state.data[i].sentiment['sent-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['sent-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n         \r\n        }else{\r\n          while(i<this.state.data.length){\r\n            if (this.state.data[i].sentiment['feel-it'].sentiment==='negative')\r\n              negative++\r\n            else if (this.state.data[i].sentiment['feel-it'].sentiment==='positive')\r\n              positive ++\r\n            else\r\n              neutral ++\r\n            i++\r\n          }\r\n          tempCounter = {\r\n            positive: positive,\r\n            negative: negative,\r\n            neutral: neutral,\r\n         }\r\n        }    \r\n        \r\n        this.setState({counter : tempCounter})\r\n        //this.state.counter = tempCounter\r\n        \r\n      }\r\n\r\n    \r\n      prova = () => {\r\n       alert(\"ciao\")\r\n      }\r\n\r\n      \r\n    \r\n      render () {\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Sentiment - {this.props.db} </h3>\r\n            <br/>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-3 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Category</h4><br />\r\n                          <select id=\"sel1\" onChange={this.handleCategory} >\r\n                            <option value=\"0\">All</option>\r\n                            <option value=\"1\">Sent-it</option>\r\n                            <option value=\"2\">Feel-it</option>\r\n\r\n                          </select>\r\n\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Tags</h4><br />\r\n                        <SearchFilters parentCallback = {this.handleTags.bind(this)}/>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-3 col-xl-4\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-3 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-9\">\r\n                <div className=\"chart\">\r\n                  <BarChart  negative={this.state.counter.negative}\r\n                   neutral={this.state.counter.neutral}\r\n                   positive={this.state.counter.positive}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"chart\">\r\n                  <PieChart\r\n                  negative={this.state.counter.negative}\r\n                  neutral={this.state.counter.neutral}\r\n                  positive={this.state.counter.positive} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                <LineChart />\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                <RadarChart />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default SentimentCharts","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Maps.js",["105","106","107","108","109","110","111","112"],"//https://react-leaflet.js.org/docs/start-installation/\r\n\r\nimport axios from 'axios';\r\n\r\nimport SearchFilters from '../components/SearchFilters';\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n      \r\n      this.getSentimentData(this.props.db)\r\n    }\r\n\r\n\r\n    getSentimentData = (db) => {\r\n\r\n      //TODO selezione db\r\n        axios.get('/tweet/getAnalyzedData')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({data : data})\r\n          this.setState({oldData : data})\r\n          this.setState({totalTweets : data.length})\r\n\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.setState({data:tempData})\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n        \r\n    \r\n    \r\n      }\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>0){\r\n          \r\n          this.filterByTags(tags)\r\n        }else{\r\n          this.setState({data:this.state.oldData})\r\n          this.state.totalTweets=this.state.oldData.length\r\n          \r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          while(j<this.state.data[i].tags.tag_me.length){\r\n            temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n            while(k<tags.length){\r\n              if(temp.some(a => a.includes(tags[k].name))===true){\r\n                flag = true               \r\n              }else{\r\n                flag = false\r\n              }\r\n              k++\r\n            }\r\n\r\n            if(flag===true){\r\n              tempData[z]= this.state.data[i]\r\n              z++\r\n            }\r\n            k=0\r\n            j++\r\n          }\r\n          i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Tweet List - {this.props.db} </h3>\r\n            <br/>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Tags</h4><br />\r\n                        <SearchFilters parentCallback = {this.handleTags.bind(this)}/>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n  <TileLayer\r\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n  />\r\n  <Marker position={[51.505, -0.09]}>\r\n    <Popup>\r\n      A pretty CSS3 popup. <br /> Easily customizable.\r\n    </Popup>\r\n  </Marker>\r\n</MapContainer>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TimeLines.js",["113","114","115","116","117","118","119","120","121"],"import axios from 'axios';\r\n\r\nimport SearchFilters from '../components/SearchFilters';\r\nimport React from 'react';\r\nimport TimeLineChart from './Charts/TimeLineChart';\r\n\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          dataGroupByDates:[],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n      \r\n      this.getData(this.props.db)\r\n    }\r\n\r\n\r\n    getData = (db) => {\r\n\r\n      //TODO selezione db\r\n        axios.get('/tweet/getDataSortByDate')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          var dataGroupByDates=[{\r\n            id:null,\r\n            counter:0\r\n          }]\r\n          var i = 0\r\n          var j = 0\r\n\r\n          var dt = data[0].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n          \r\n          while(i<data.length){\r\n\r\n            if(dataGroupByDates[j].id===data[i].created_at.substring(0, 10)){\r\n              dataGroupByDates[j].counter++\r\n            }else{\r\n              j++\r\n              dataGroupByDates[j].id=data[i].created_at.substring(0, 10)\r\n              dataGroupByDates[j].counter++\r\n            }\r\n            i++\r\n          }\r\n\r\n          this.setState({dataGroupByDates : dataGroupByDates})\r\n          \r\n\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.setState({data:tempData})\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n        \r\n    \r\n    \r\n      }\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>0){\r\n          \r\n          this.filterByTags(tags)\r\n        }else{\r\n          this.setState({data:this.state.oldData})\r\n          this.state.totalTweets=this.state.oldData.length\r\n          \r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          while(j<this.state.data[i].tags.tag_me.length){\r\n            temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n            while(k<tags.length){\r\n              if(temp.some(a => a.includes(tags[k].name))===true){\r\n                flag = true               \r\n              }else{\r\n                flag = false\r\n              }\r\n              k++\r\n            }\r\n\r\n            if(flag===true){\r\n              tempData[z]= this.state.data[i]\r\n              z++\r\n            }\r\n            k=0\r\n            j++\r\n          }\r\n          i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Tweet List - {this.props.db} </h3>\r\n            <br/>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Tags</h4><br />\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                  <TimeLineChart data={this.state.dataGroupByDates}/>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\WordCloud.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TweetList.js",["122","123","124","125","126","127","128","129"],"import axios from 'axios';\r\n\r\nimport SearchFilters from '../components/SearchFilters';\r\nimport React from 'react';\r\nimport DisplayTable from './TweetsTable';\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          oldData : [],\r\n          data: [],\r\n          fromDate: null,\r\n          toDate : null,\r\n\r\n      }\r\n      \r\n      this.getSentimentData(this.props.db)\r\n    }\r\n\r\n\r\n    getSentimentData = (db) => {\r\n\r\n      //TODO selezione db\r\n        axios.get('/tweet/getAnalyzedData')\r\n        .then((response) => {\r\n          const data = response.data;\r\n          this.setState({data : data})\r\n          this.setState({oldData : data})\r\n          this.setState({totalTweets : data.length})\r\n\r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      }\r\n    \r\n      \r\n      handleFromDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.fromDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n      }\r\n    \r\n      handleToDatesChanges = (event) => {\r\n        if(event.target.value!==\"\"){\r\n          this.state.toDate = event.target.value\r\n          this.filterDataByDates()\r\n        }\r\n    \r\n      }\r\n    \r\n    \r\n      filterDataByDates = () => {\r\n       \r\n\r\n          var tempData = []\r\n          var i=0\r\n          var j=0\r\n          this.setState({oldData: this.state.data}) //save last data state\r\n    \r\n          if(this.state.fromDate===null){\r\n           //fromdate Null\r\n    \r\n    \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }else if (this.state.data[i].created_at<this.state.toDate ){\r\n              tempData[j]= this.state.data[i]\r\n              j++\r\n            }            \r\n    \r\n            i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.toDate===null){\r\n            //todate Null                           \r\n                                      \r\n           while(i<this.state.data.length){\r\n            if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }else if (this.state.data[i].created_at>this.state.fromDate ){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n            }\r\n                   \r\n            i++\r\n        }\r\n    \r\n    \r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n    \r\n          }else if(this.state.fromDate!==null && this.state.fromDate!==null){\r\n                   \r\n            while(i<this.state.data.length){\r\n              if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n              && this.state.data[i].created_at<this.state.toDate){\r\n                tempData[j]= this.state.data[i]\r\n                j++\r\n              }else if (this.state.data[i].created_at>this.state.fromDate\r\n                  && this.state.data[i].created_at<this.state.toDate){\r\n                    tempData[j]= this.state.data[i]\r\n                    j++\r\n                  }\r\n               \r\n    \r\n              i++\r\n          }\r\n    \r\n          this.setState({data:tempData})\r\n          this.state.totalTweets=tempData.length\r\n          }\r\n        \r\n    \r\n    \r\n      }\r\n\r\n      handleTags = (tags) => {\r\n        if(tags.length>0){\r\n          \r\n          this.filterByTags(tags)\r\n        }else{\r\n          this.setState({data:this.state.oldData})\r\n          this.state.totalTweets=this.state.oldData.length\r\n          \r\n        }\r\n      }\r\n      \r\n      filterByTags = (tags) => {\r\n        \r\n        var i =0\r\n        var j =0\r\n        var k = 0\r\n        var z = 0\r\n        var temp\r\n        var tempData = []\r\n        var flag = false\r\n        \r\n        while(i<this.state.data.length){\r\n          j=0\r\n          while(j<this.state.data[i].tags.tag_me.length){\r\n            temp=this.state.data[i].tags.tag_me[j].split(\" : \")\r\n            \r\n            while(k<tags.length){\r\n              if(temp.some(a => a.includes(tags[k].name))===true){\r\n                flag = true               \r\n              }else{\r\n                flag = false\r\n              }\r\n              k++\r\n            }\r\n\r\n            if(flag===true){\r\n              tempData[z]= this.state.data[i]\r\n              z++\r\n            }\r\n            k=0\r\n            j++\r\n          }\r\n          i++\r\n        }\r\n\r\n        this.setState({data:tempData})\r\n        this.state.totalTweets=tempData.length\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Tweet List - {this.props.db} </h3>\r\n            <br/>\r\n            <div className=\"row stat-cards\">\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Tags</h4><br />\r\n                        <SearchFilters parentCallback = {this.handleTags.bind(this)}/>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-5\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>From </h4><br />\r\n                          <input type=\"date\" \r\n                          name=\"startDate\"\r\n                          onBlur={this.handleFromDatesChanges}/>\r\n\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>To </h4><br />\r\n                          <input type=\"date\"\r\n                          id=\"toDate\"\r\n                          onBlur={this.handleToDatesChanges} />\r\n                        </center>\r\n                      </div>\r\n                    </div> \r\n                \r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n              <div className=\"col-md-4 col-xl-2\">\r\n                <article className=\"stat-cards-item\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 col-xl-12\">\r\n                      <div className=\"stat-cards-info\">\r\n                        <center><h4>Total Tweets</h4><br />\r\n                           <h1> {this.state.totalTweets} </h1>\r\n                          \r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                </article>\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"chart\">\r\n                  <DisplayTable data={this.state.data}/>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\SearchFilters.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\TweetsTable.js",["130"],"import React, { useState } from \"react\";\r\n\r\nimport countriesData from \"../data/countries\";\r\nimport \"./Table/table.css\";\r\nimport Table from \"./Table\";\r\n\r\nconst DisplayTable = (props) => {\r\n  const [countries] = useState([...countriesData]);\r\n  return (\r\n    <main className=\"container_table\">\r\n      <div className=\"wrapper_table\">\r\n        <Table data={props.data} rowsPerPage={10} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DisplayTable;","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\BarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\TimeLineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\LineChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\RadarChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Charts\\PieChart.js",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\data\\countries.js",["131"],"export default [\r\n    {\r\n      id: 1,\r\n      name: \"Poland\",\r\n      language: \"Polish\",\r\n      capital: \"Warsaw\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Bulgaria\",\r\n      language: \"Bulgarian\",\r\n      capital: \"Sofia\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Hungary\",\r\n      language: \"Hungarian\",\r\n      capital: \"Budapest\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Moldova\",\r\n      language: \"Moldovan\",\r\n      capital: \"Chișinău\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Austria\",\r\n      language: \"German\",\r\n      capital: \"Vienna\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Lithuania\",\r\n      language: \"Lithuanian\",\r\n      capital: \"Vilnius\",\r\n    },\r\n  ];","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Table\\index.jsx",[],"C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\hooks\\useTable.js",["132","133"],"import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;","C:\\Users\\giovt\\Desktop\\crowdpulse\\crowdpulse\\src\\components\\Table\\TableFooter\\index.jsx",[],{"ruleId":"134","severity":1,"message":"135","line":50,"column":7,"nodeType":"136","messageId":"137","endLine":61,"endColumn":8},{"ruleId":"138","severity":1,"message":"139","line":132,"column":29,"nodeType":"140","endLine":132,"endColumn":86},{"ruleId":"141","severity":1,"message":"142","line":3,"column":195,"nodeType":"143","messageId":"144","endLine":3,"endColumn":197},{"ruleId":"141","severity":1,"message":"142","line":3,"column":218,"nodeType":"143","messageId":"144","endLine":3,"endColumn":220},{"ruleId":"145","severity":1,"message":"146","line":111,"column":56,"nodeType":"147","messageId":"148","endLine":111,"endColumn":58},{"ruleId":"145","severity":1,"message":"146","line":237,"column":40,"nodeType":"147","messageId":"148","endLine":237,"endColumn":42},{"ruleId":"149","severity":1,"message":"150","line":39,"column":11,"nodeType":"151","messageId":"152","endLine":39,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":82,"column":11,"nodeType":"151","messageId":"152","endLine":82,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":89,"column":11,"nodeType":"151","messageId":"152","endLine":89,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":123,"column":9,"nodeType":"151","messageId":"152","endLine":123,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":144,"column":9,"nodeType":"151","messageId":"152","endLine":144,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":167,"column":10,"nodeType":"151","messageId":"152","endLine":167,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":177,"column":9,"nodeType":"151","messageId":"152","endLine":177,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":189,"column":11,"nodeType":"151","messageId":"152","endLine":189,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":195,"column":11,"nodeType":"151","messageId":"152","endLine":195,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":206,"column":11,"nodeType":"151","messageId":"152","endLine":206,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":230,"column":28,"nodeType":"155","messageId":"156","endLine":230,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":248,"column":9,"nodeType":"151","messageId":"152","endLine":248,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":48,"column":11,"nodeType":"151","messageId":"152","endLine":48,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":55,"column":11,"nodeType":"151","messageId":"152","endLine":55,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":90,"column":9,"nodeType":"151","messageId":"152","endLine":90,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":112,"column":9,"nodeType":"151","messageId":"152","endLine":112,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":136,"column":11,"nodeType":"151","messageId":"152","endLine":136,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":149,"column":11,"nodeType":"151","messageId":"152","endLine":149,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":170,"column":28,"nodeType":"155","messageId":"156","endLine":170,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":189,"column":9,"nodeType":"151","messageId":"152","endLine":189,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":68,"column":11,"nodeType":"151","messageId":"152","endLine":68,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":75,"column":11,"nodeType":"151","messageId":"152","endLine":75,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":110,"column":9,"nodeType":"151","messageId":"152","endLine":110,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":132,"column":9,"nodeType":"151","messageId":"152","endLine":132,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":156,"column":11,"nodeType":"151","messageId":"152","endLine":156,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":169,"column":11,"nodeType":"151","messageId":"152","endLine":169,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":190,"column":28,"nodeType":"155","messageId":"156","endLine":190,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":209,"column":9,"nodeType":"151","messageId":"152","endLine":209,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":45,"column":11,"nodeType":"151","messageId":"152","endLine":45,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":52,"column":11,"nodeType":"151","messageId":"152","endLine":52,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":87,"column":9,"nodeType":"151","messageId":"152","endLine":87,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":109,"column":9,"nodeType":"151","messageId":"152","endLine":109,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":133,"column":11,"nodeType":"151","messageId":"152","endLine":133,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":146,"column":11,"nodeType":"151","messageId":"152","endLine":146,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":167,"column":28,"nodeType":"155","messageId":"156","endLine":167,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":186,"column":9,"nodeType":"151","messageId":"152","endLine":186,"endColumn":19},{"ruleId":"157","severity":1,"message":"161","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":1,"column":1,"nodeType":"164","endLine":38,"endColumn":5},{"ruleId":"157","severity":1,"message":"165","line":6,"column":7,"nodeType":"159","messageId":"160","endLine":6,"endColumn":8},{"ruleId":"166","severity":1,"message":"167","line":27,"column":6,"nodeType":"168","endLine":27,"endColumn":43,"suggestions":"169"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'k'.","ArrowFunctionExpression","unsafeRefs","no-unused-vars","'SearchFilters' is defined but never used.","Identifier","unusedVar","'countries' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rowsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["170"],{"desc":"171","fix":"172"},"Update the dependencies array to be: [data, setTableRange, page, setSlice, rowsPerPage]",{"range":"173","text":"174"},[736,773],"[data, setTableRange, page, setSlice, rowsPerPage]"]