{"ast":null,"code":"import _classCallCheck from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchHashtag.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport axios from 'axios'; //https://www.npmjs.com/package/react-tag-autocomplete\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchHashtag = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchHashtag, _React$Component);\n\n  var _super = _createSuper(SearchHashtag);\n\n  function SearchHashtag(props) {\n    var _this;\n\n    _classCallCheck(this, SearchHashtag);\n\n    _this = _super.call(this, props);\n\n    _this.sendData = function (hashtags) {\n      _this.props.parentCallback(hashtags);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      hashtags: [],\n      suggestions: []\n    };\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var data = _this.props.allHashtags.data;\n    var strings = [];\n    var tempSuggestion = []; //console.log(\"hashtags\"+data[0])\n\n    while (i < data.length) {\n      j = 0;\n\n      if (data[i]._id.hashtags !== undefined) {\n        while (j < data[i]._id.hashtags.length) {\n          if (strings.indexOf(data[i]._id.hashtags[j]) == -1) {\n            tempSuggestion.push({\n              id: 0,\n              name: data[i]._id.hashtags[j]\n            });\n            strings.push(data[i]._id.hashtags[j]);\n          } //console.log(tempSuggestion)\n\n\n          j++;\n        }\n      }\n\n      i++;\n    }\n\n    _this.state.suggestions = tempSuggestion;\n\n    _this.setState({\n      suggestions: tempSuggestion\n    });\n\n    _this.reactTags = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(SearchHashtag, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.db !== this.props.db) {\n        axios.get('/tweet/getHashtags', {\n          params: {\n            db: this.props.db\n          }\n        }).then(function (response) {\n          var i = 0;\n          var j = 0;\n          var k = 0;\n          var data = response.data;\n          var tempSuggestion = [];\n          var strings = [];\n\n          while (i < data.length) {\n            j = 0;\n\n            if (data[i]._id.hashtags !== undefined) {\n              while (j < data[i]._id.hashtags.length) {\n                if (strings.indexOf(data[i]._id.hashtags[j]) == -1) {\n                  tempSuggestion.push({\n                    id: 0,\n                    name: data[i]._id.hashtags[j]\n                  });\n                  strings.push(data[i]._id.hashtags[j]);\n                } //console.log(tempSuggestion)\n\n\n                j++;\n              }\n            }\n\n            i++;\n          } //this.state.suggestions = tempSuggestion\n\n\n          _this2.setState({\n            suggestions: tempSuggestion\n          });\n        }).catch(function (error) {\n          console.log('error: ', error);\n        });\n        this.reactTags = /*#__PURE__*/React.createRef();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var hashtags = this.state.hashtags.slice(0);\n      hashtags.splice(i, 1);\n      this.setState({\n        hashtags: hashtags\n      });\n      this.sendData(hashtags);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(hashtag) {\n      var hashtags = [].concat(this.state.hashtags, hashtag);\n      this.setState({\n        hashtags: hashtags\n      });\n      this.sendData(hashtags);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        placeholderText: \"Add new Hashtag\",\n        ref: this.reactTags,\n        tags: this.state.hashtags,\n        suggestions: this.state.suggestions,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchHashtag;\n}(React.Component);\n\nexport default SearchHashtag;","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/src/components/Filters/SearchHashtag.js"],"names":["React","ReactTags","axios","SearchHashtag","props","sendData","hashtags","parentCallback","bind","state","suggestions","i","j","k","data","allHashtags","strings","tempSuggestion","length","_id","undefined","indexOf","push","id","name","setState","reactTags","createRef","prevProps","db","get","params","then","response","catch","error","console","log","slice","splice","hashtag","concat","onDelete","onAddition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchHashtag extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      hashtags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n          var i = 0;\r\n          var j = 0;\r\n          var k =0;\r\n          const data = this.props.allHashtags.data;\r\n          var strings = [];\r\n         \r\n          var tempSuggestion = []\r\n          //console.log(\"hashtags\"+data[0])\r\n          while(i<data.length){\r\n            \r\n            j=0\r\n            if(data[i]._id.hashtags!==undefined){\r\n              while(j<data[i]._id.hashtags.length){ \r\n                if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n                  tempSuggestion.push(\r\n                    {\r\n                      id:0,\r\n                      name: data[i]._id.hashtags[j]\r\n                    }\r\n                  )\r\n                  strings.push(data[i]._id.hashtags[j]);\r\n                }    \r\n\r\n                //console.log(tempSuggestion)\r\n                j++\r\n              }\r\n            }\r\n\r\n\r\n              i++\r\n          }\r\n\r\n          this.state.suggestions = tempSuggestion\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n     \r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getHashtags',{\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0\r\n            var j = 0\r\n            var k =0\r\n            const data = response.data\r\n           \r\n            var tempSuggestion = []\r\n            var strings = []\r\n          \r\n            while(i<data.length){\r\n              \r\n              j=0\r\n              if(data[i]._id.hashtags!==undefined){\r\n                while(j<data[i]._id.hashtags.length){  \r\n                  if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n                    tempSuggestion.push(\r\n                      {\r\n                        id:0,\r\n                        name: data[i]._id.hashtags[j]\r\n                      }\r\n                    )\r\n                    strings.push(data[i]._id.hashtags[j]);\r\n                  }    \r\n                  //console.log(tempSuggestion)\r\n                  j++\r\n                }\r\n              }\r\n  \r\n  \r\n                i++\r\n            }\r\n  \r\n            //this.state.suggestions = tempSuggestion\r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  sendData = (hashtags) =>{\r\n    this.props.parentCallback(hashtags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const hashtags = this.state.hashtags.slice(0)\r\n    hashtags.splice(i, 1)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  onAddition (hashtag) {\r\n    const hashtags = [].concat(this.state.hashtags, hashtag)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Hashtag\"\r\n        ref={this.reactTags}\r\n        tags={this.state.hashtags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchHashtag"]},"metadata":{},"sourceType":"module"}