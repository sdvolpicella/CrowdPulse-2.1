{"ast":null,"code":"import _classCallCheck from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactTags from'react-tag-autocomplete';import'./css/searchbar.css';import axios from'axios';//https://www.npmjs.com/package/react-tag-autocomplete\nimport{jsx as _jsx}from\"react/jsx-runtime\";var SearchText=/*#__PURE__*/function(_React$Component){_inherits(SearchText,_React$Component);var _super=_createSuper(SearchText);function SearchText(props){var _this;_classCallCheck(this,SearchText);_this=_super.call(this,props);_this.getText=function(){var i=1;var j=0;var temp;var strings=[];/*\n    const data = this.props.allText.data;\n    //var temp =data[0]._id.processed_text[0].split(\" \")\n    \n    var tempSuggestion = []\n \n    while(i<data.length){\n      j=0;\n      \n      if(data[i]._id!==undefined&&data[i]._id!==null){\n       \n      while(j<data[i]._id.processed_text.length){\n        \n        temp=data[i]._id.processed_text[j].split(\" \")\n\n        if(strings.indexOf(temp[0])==-1){\n          tempSuggestion.push({\n            id:0,\n            name: temp[0]      \n          });\n          strings.push(temp[0]);\n        }\n\n\n        j++;\n      }\n    }\n\n        i++;\n    }\n    \n   \n    this.state.suggestions = tempSuggestion\n    this.setState({suggestions: tempSuggestion})        \n           */_this.reactTags=/*#__PURE__*/React.createRef();};_this.sendData=function(text){_this.props.parentCallback(text);};_this.sendData=_this.sendData.bind(_assertThisInitialized(_this));_this.state={text:[],suggestions:[]};_this.getText();return _this;}_createClass(SearchText,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.mongodb!==this.props.mongodb){this.getText();}}},{key:\"onDelete\",value:function onDelete(i){var text=this.state.text.slice(0);text.splice(i,1);this.setState({text:text});this.sendData(text);}},{key:\"onAddition\",value:function onAddition(tag){var text=[].concat(this.state.text,tag);this.setState({text:text});this.sendData(text);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(ReactTags,{placeholderText:\"Add new Text\",ref:this.reactTags,tags:this.state.text,suggestions:this.state.suggestions,onDelete:this.onDelete.bind(this),onAddition:this.onAddition.bind(this),allowNew:true,classNames:\"search\"});}}]);return SearchText;}(React.Component);export default SearchText;","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Filters/SearchText.js"],"names":["React","ReactTags","axios","SearchText","props","getText","i","j","temp","strings","reactTags","createRef","sendData","text","parentCallback","bind","state","suggestions","prevProps","mongodb","slice","splice","setState","tag","concat","onDelete","onAddition","Component"],"mappings":"60BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA;8CACMC,CAAAA,U,oHACJ,oBAAaC,KAAb,CAAoB,4CAClB,uBAAMA,KAAN,EADkB,MAepBC,OAfoB,CAeV,UAAM,CACd,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,IAAJ,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAEA,MAAKC,SAAL,cAAiBV,KAAK,CAACW,SAAN,EAAjB,CACG,CAzDmB,OAkEpBC,QAlEoB,CAkET,SAACC,IAAD,CAAS,CAClB,MAAKT,KAAL,CAAWU,cAAX,CAA0BD,IAA1B,EACD,CApEmB,CAElB,MAAKD,QAAL,CAAgB,MAAKA,QAAL,CAAcG,IAAd,+BAAhB,CACA,MAAKC,KAAL,CAAa,CACXH,IAAI,CAAE,EADK,CAGXI,WAAW,CAAE,EAHF,CAAb,CAQA,MAAKZ,OAAL,GAXkB,aAanB,C,yDA8CD,4BAAmBa,SAAnB,CAA8B,CAC5B,GAAGA,SAAS,CAACC,OAAV,GAAoB,KAAKf,KAAL,CAAWe,OAAlC,CAA0C,CACxC,KAAKd,OAAL,GACD,CAEF,C,wBAMD,kBAAUC,CAAV,CAAa,CACX,GAAMO,CAAAA,IAAI,CAAG,KAAKG,KAAL,CAAWH,IAAX,CAAgBO,KAAhB,CAAsB,CAAtB,CAAb,CACAP,IAAI,CAACQ,MAAL,CAAYf,CAAZ,CAAe,CAAf,EACA,KAAKgB,QAAL,CAAc,CAAET,IAAI,CAAJA,IAAF,CAAd,EACA,KAAKD,QAAL,CAAcC,IAAd,EACD,C,0BAED,oBAAYU,GAAZ,CAAiB,CACf,GAAMV,CAAAA,IAAI,CAAG,GAAGW,MAAH,CAAU,KAAKR,KAAL,CAAWH,IAArB,CAA2BU,GAA3B,CAAb,CACA,KAAKD,QAAL,CAAc,CAAET,IAAI,CAAJA,IAAF,CAAd,EACA,KAAKD,QAAL,CAAcC,IAAd,EACD,C,sBAED,iBAAU,CACR,mBAEE,KAAC,SAAD,EACE,eAAe,CAAC,cADlB,CAEE,GAAG,CAAE,KAAKH,SAFZ,CAGE,IAAI,CAAE,KAAKM,KAAL,CAAWH,IAHnB,CAIE,WAAW,CAAE,KAAKG,KAAL,CAAWC,WAJ1B,CAKE,QAAQ,CAAE,KAAKQ,QAAL,CAAcV,IAAd,CAAmB,IAAnB,CALZ,CAME,UAAU,CAAE,KAAKW,UAAL,CAAgBX,IAAhB,CAAqB,IAArB,CANd,CAOE,QAAQ,CAAE,IAPZ,CAQE,UAAU,CAAC,QARb,EAFF,CAeD,C,wBApGsBf,KAAK,CAAC2B,S,EAwG/B,cAAexB,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport ReactTags from 'react-tag-autocomplete'\nimport './css/searchbar.css';\nimport axios from 'axios';\n\n\n//https://www.npmjs.com/package/react-tag-autocomplete\nclass SearchText extends React.Component {\n  constructor (props) {\n    super(props)\n    this.sendData = this.sendData.bind(this)\n    this.state = {\n      text: [     \n      ],\n      suggestions: [\n       \n      ]\n    }\n  \n    this.getText();\n\n  }\n\n  getText = () => {\n    var i = 1;\n    var j = 0;\n    var temp;\n    var strings = [];\n    /*\n    const data = this.props.allText.data;\n    //var temp =data[0]._id.processed_text[0].split(\" \")\n    \n    var tempSuggestion = []\n \n    while(i<data.length){\n      j=0;\n      \n      if(data[i]._id!==undefined&&data[i]._id!==null){\n       \n      while(j<data[i]._id.processed_text.length){\n        \n        temp=data[i]._id.processed_text[j].split(\" \")\n\n        if(strings.indexOf(temp[0])==-1){\n          tempSuggestion.push({\n            id:0,\n            name: temp[0]      \n          });\n          strings.push(temp[0]);\n        }\n\n\n        j++;\n      }\n    }\n\n        i++;\n    }\n    \n   \n    this.state.suggestions = tempSuggestion\n    this.setState({suggestions: tempSuggestion})        \n           */\n\nthis.reactTags = React.createRef()\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.mongodb!==this.props.mongodb){\n      this.getText();\n    }\n    \n  }\n\n  sendData = (text) =>{\n    this.props.parentCallback(text);\n  }\n\n  onDelete (i) {\n    const text = this.state.text.slice(0)\n    text.splice(i, 1)\n    this.setState({ text })\n    this.sendData(text)\n  }\n\n  onAddition (tag) {\n    const text = [].concat(this.state.text, tag)\n    this.setState({ text })\n    this.sendData(text)\n  }\n\n  render () {\n    return (\n     \n      <ReactTags\n        placeholderText=\"Add new Text\"\n        ref={this.reactTags}\n        tags={this.state.text}\n        suggestions={this.state.suggestions}\n        onDelete={this.onDelete.bind(this)}\n        onAddition={this.onAddition.bind(this)} \n        allowNew={true}\n        classNames=\"search\"\n        />\n     \n\n    )\n  }\n}\n\n\nexport default SearchText"]},"metadata":{},"sourceType":"module"}