{"ast":null,"code":"import _slicedToArray from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Table\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useTable from \"../../hooks/useTable.js\";\nimport \"./table.css\";\nimport TableFooter from \"./TableFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar printTags = function printTags(data) {\n  var i = 0;\n  var temp;\n  var tags = [];\n\n  if (data.tags !== undefined) {\n    while (i < data.tags.tag_me.length) {\n      temp = data.tags.tag_me[i].split(\" : \");\n      tags[i] = {\n        name: temp[0],\n        link: temp[3]\n      };\n      i++;\n    }\n\n    return tags.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.link,\n        className: \"tag\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, _this);\n    });\n  } else {\n    return \"\";\n  }\n};\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var data = _ref.data,\n      rowsPerPage = _ref.rowsPerPage;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableRowHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slice.map(function (data) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRowItems\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.author_username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.raw_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printTags(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TableFooter, {\n      range: range,\n      slice: slice,\n      setPage: setPage,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Table, \"1n21uMJxVMDgLTYAULtYHIATWSk=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/src/components/Table/index.jsx"],"names":["React","useState","useTable","TableFooter","printTags","data","i","temp","tags","undefined","tag_me","length","split","name","link","map","item","Table","rowsPerPage","page","setPage","slice","range","author_username","raw_text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport useTable from \"../../hooks/useTable.js\";\r\nimport \"./table.css\";\r\nimport TableFooter from \"./TableFooter\";\r\n\r\n\r\nconst printTags = (data) =>{\r\n  var i = 0\r\n  var temp \r\n   const tags = []\r\n  \r\n   if(data.tags!==undefined){\r\n    while(i<data.tags.tag_me.length){\r\n      temp = data.tags.tag_me[i].split(\" : \")\r\n      tags[i] = {\r\n        name : temp[0],\r\n        link : temp[3]\r\n      }\r\n      i++\r\n  }\r\n\r\n  return(\r\n    tags.map(item=>(<a href={item.link} className=\"tag\">{item.name}</a>))\r\n   \r\n    )\r\n   }else{\r\n     return(\r\n       \"\"\r\n     )\r\n   }\r\n\r\n  \r\n}\r\n\r\nconst Table = ({ data, rowsPerPage }) => {\r\n  const [page, setPage] = useState(1);\r\n  const { slice, range } = useTable(data, page, rowsPerPage);\r\n  \r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead className=\"tableRowHeader\">\r\n          <tr>\r\n            <th className=\"tableHeader\">Username</th>\r\n            <th className=\"tableHeader\">Text</th>\r\n            <th className=\"tableHeader\">Tags</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slice.map((data) => (\r\n            <tr className=\"tableRowItems\" >\r\n              <td className=\"tableCell\">{data.author_username}</td>\r\n              <td className=\"tableCell\">{data.raw_text}</td>\r\n              <td className=\"tableCell\">{printTags(data)} </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}