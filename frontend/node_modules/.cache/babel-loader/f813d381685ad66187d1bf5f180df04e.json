{"ast":null,"code":"import _slicedToArray from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\Desktop\\\\CrowdPulse2.0-main\\\\frontend\\\\src\\\\components\\\\Table\\\\Captions\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useTable from \"../../../hooks/useTable.js\";\nimport \"../table.css\";\nimport TableFooter from \"../TableFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar printMediaUrls = function printMediaUrls(data) {\n  if (data.media_urls !== undefined) {\n    return data.media_urls.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item,\n                target: \"_blank\",\n                className: \"\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 11,\n                columnNumber: 53\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 50\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 46\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 42\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 36\n      }, _this);\n    });\n  } else {\n    return \"\";\n  }\n};\n\nvar printImageToText = function printImageToText(data) {\n  if (data.image_to_text !== undefined) {\n    return data.image_to_text.image_captioning.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"tag\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 59\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 56\n      }, _this);\n    });\n  } else {\n    return \"\";\n  }\n};\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var data = _ref.data,\n      rowsPerPage = _ref.rowsPerPage;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"tabella\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableRowHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slice.map(function (data) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRowItems\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.author_username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printMediaUrls(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printImageToText(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TableFooter, {\n      range: range,\n      slice: slice,\n      setPage: setPage,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Table, \"1n21uMJxVMDgLTYAULtYHIATWSk=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Table/Captions/index.jsx"],"names":["React","useState","useTable","TableFooter","printMediaUrls","data","media_urls","undefined","map","item","printImageToText","image_to_text","image_captioning","Table","rowsPerPage","page","setPage","slice","range","author_username"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport useTable from \"../../../hooks/useTable.js\";\nimport \"../table.css\";\nimport TableFooter from \"../TableFooter\";\n\n\nconst printMediaUrls = (data) =>{\n   if(data.media_urls!==undefined){\n      return(\n        data.media_urls.map(item=>(<body><ol><li><p><a href={item} target=\"_blank\" className=\"\">{item}</a></p></li></ol></body>))\n        )\n    }else{\n       return(\"\")\n   }\n}\n\nconst printImageToText = (data) =>{\n   if(data.image_to_text!==undefined){\n       return(\n        data.image_to_text.image_captioning.map(item=>(<p><a target=\"_blank\" className=\"tag\">{item}</a></p>))\n       )\n       \n   }else{\n       return(\"\")\n   }\n}\n\nconst Table = ({ data, rowsPerPage }) => {\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(data, page, rowsPerPage);\n  \n  return (\n    <>\n      <table className=\"table\" id=\"tabella\">\n        <thead className=\"tableRowHeader\">\n          <tr>\n            <th className=\"tableHeader\">Username</th>\n            <th className=\"tableHeader\">Image</th>\n            <th className=\"tableHeader\">Caption</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slice.map((data) => (\n            <tr className=\"tableRowItems\" >\n              <td className=\"tableCell\">{data.author_username}</td>\n              <td className=\"tableCell\">{printMediaUrls(data)} </td>\n              <td className=\"tableCell\">{printImageToText(data)} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\n    </>\n  );\n};\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}