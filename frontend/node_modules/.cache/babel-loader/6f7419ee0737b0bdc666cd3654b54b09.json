{"ast":null,"code":"import _slicedToArray from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\Desktop\\\\CrowdPulse2.0-main\\\\frontend\\\\src\\\\components\\\\Table\\\\Tweets\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useTable from \"../../hooks/useTable.js\";\nimport \"./table.css\";\nimport TableFooter from \"./TableFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar printGenre = function printGenre(data) {\n  var genre;\n\n  if (data.genre_classification !== undefined) {\n    genre = data.genre_classification.roberta.genre;\n    return genre;\n  } else {\n    return \"\";\n  }\n};\n\nvar printTags = function printTags(data) {\n  var i = 0;\n  var temp;\n  var tags = [];\n\n  if (data.tags !== undefined) {\n    while (i < data.tags.tag_me.length) {\n      temp = data.tags.tag_me[i].split(\" : \");\n      tags[i] = {\n        name: temp[0],\n        link: temp[3]\n      };\n      i++;\n    }\n\n    return tags.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.link,\n        target: \"_blank\",\n        className: \"tag\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, _this);\n    });\n  } else {\n    return \"\";\n  }\n};\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var data = _ref.data,\n      rowsPerPage = _ref.rowsPerPage;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"tabella\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableRowHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slice.map(function (data) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRowItems\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.author_username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.raw_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printGenre(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printTags(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TableFooter, {\n      range: range,\n      slice: slice,\n      setPage: setPage,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Table, \"1n21uMJxVMDgLTYAULtYHIATWSk=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Table/Tweets/index.jsx"],"names":["React","useState","useTable","TableFooter","printGenre","data","genre","genre_classification","undefined","roberta","printTags","i","temp","tags","tag_me","length","split","name","link","map","item","Table","rowsPerPage","page","setPage","slice","range","author_username","raw_text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport useTable from \"../../hooks/useTable.js\";\nimport \"./table.css\";\nimport TableFooter from \"./TableFooter\";\n\n\nconst printGenre = (data) =>{\n\n  var genre\n  \n  if(data.genre_classification!==undefined){\n      \n    genre = data.genre_classification.roberta.genre\n    return genre\n\n  }else{\n    return(\"\")\n  }\n\n}\n\nconst printTags = (data) =>{\n  var i = 0\n  var temp \n   const tags = []\n  \n   if(data.tags!==undefined){\n    while(i<data.tags.tag_me.length){\n      temp = data.tags.tag_me[i].split(\" : \")\n      tags[i] = {\n        name : temp[0],\n        link : temp[3]\n      }\n      i++\n  }\n\n  return(\n    tags.map(item=>(<a href={item.link} target=\"_blank\" className=\"tag\">{item.name}</a>))\n   \n    )\n   }else{\n     return(\n       \"\"\n     )\n   }\n\n  \n}\n\nconst Table = ({ data, rowsPerPage }) => {\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(data, page, rowsPerPage);\n  \n  return (\n    <>\n      <table className=\"table\" id=\"tabella\">\n        <thead className=\"tableRowHeader\">\n          <tr>\n            <th className=\"tableHeader\">Username</th>\n            <th className=\"tableHeader\">Text</th>\n            <th className=\"tableHeader\">Genre</th>\n            <th className=\"tableHeader\">Tags</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slice.map((data) => (\n            <tr className=\"tableRowItems\" >\n              <td className=\"tableCell\">{data.author_username}</td>\n              <td className=\"tableCell\">{data.raw_text}</td>\n              <td className=\"tableCell\">{printGenre(data)} </td>\n              <td className=\"tableCell\">{printTags(data)} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\n    </>\n  );\n};\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}