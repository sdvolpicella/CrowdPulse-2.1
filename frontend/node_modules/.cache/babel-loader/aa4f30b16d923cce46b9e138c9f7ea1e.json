{"ast":null,"code":"import _classCallCheck from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Giovanni\\\\wa\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchText.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport axios from 'axios'; //https://www.npmjs.com/package/react-tag-autocomplete\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchText = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchText, _React$Component);\n\n  var _super = _createSuper(SearchText);\n\n  function SearchText(props) {\n    var _this;\n\n    _classCallCheck(this, SearchText);\n\n    _this = _super.call(this, props);\n\n    _this.sendData = function (text) {\n      _this.props.parentCallback(text);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      text: [],\n      suggestions: []\n    };\n    axios.get('/tweet/getText', {\n      params: {\n        db: _this.props.db\n      }\n    }).then(function (response) {\n      var i = 1;\n      var j = 0;\n      var temp;\n      var strings = [];\n      var data = response.data; //var temp =data[0]._id.processed_text[0].split(\" \")\n\n      var tempSuggestion = [];\n\n      while (i < data.length) {\n        j = 0;\n\n        if (data[i]._id !== undefined && data[i]._id !== null) {\n          while (j < data[i]._id.processed_text.length) {\n            temp = data[i]._id.processed_text[j].split(\" \");\n\n            if (strings.indexOf(temp[0]) == -1) {\n              tempSuggestion.push({\n                id: 0,\n                name: temp[0]\n              });\n              strings.push(temp[0]);\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.setState({\n        suggestions: tempSuggestion\n      });\n    }).catch(function (error) {\n      console.log('error: ', error);\n    });\n    _this.reactTags = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(SearchText, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.db !== this.props.db) {\n        axios.get('/tweet/getText', {\n          params: {\n            db: this.props.db\n          }\n        }).then(function (response) {\n          var i = 0;\n          var j = 0;\n          var temp;\n          var data = response.data; //var temp =data[0]._id.processed_text[0].split(\" \")\n\n          var tempSuggestion = [];\n          var strings = [];\n\n          while (i < data.length) {\n            j = 0;\n\n            if (data[i]._id !== undefined && data[i]._id !== null) {\n              while (j < data[i]._id.processed_text.length) {\n                temp = data[i]._id.processed_text[j].split(\" \");\n\n                if (strings.indexOf(temp[0]) == -1) {\n                  tempSuggestion.push({\n                    id: 0,\n                    name: temp[0]\n                  });\n                  strings.push(temp[0]);\n                }\n\n                j++;\n              }\n            }\n\n            i++;\n          }\n\n          _this2.setState({\n            suggestions: tempSuggestion\n          });\n        }).catch(function (error) {\n          console.log('error: ', error);\n        });\n        this.reactTags = /*#__PURE__*/React.createRef();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var text = this.state.text.slice(0);\n      text.splice(i, 1);\n      this.setState({\n        text: text\n      });\n      this.sendData(text);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(tag) {\n      var text = [].concat(this.state.text, tag);\n      this.setState({\n        text: text\n      });\n      this.sendData(text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        placeholderText: \"Add new Text\",\n        ref: this.reactTags,\n        tags: this.state.text,\n        suggestions: this.state.suggestions,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        onKeyPress: alert(\"ciao\"),\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchText;\n}(React.Component);\n\nexport default SearchText;","map":{"version":3,"sources":["C:/Users/Giovanni/wa/CrowdPulse/frontend/src/components/Filters/SearchText.js"],"names":["React","ReactTags","axios","SearchText","props","sendData","text","parentCallback","bind","state","suggestions","get","params","db","then","response","i","j","temp","strings","data","tempSuggestion","length","_id","undefined","processed_text","split","indexOf","push","id","name","setState","catch","error","console","log","reactTags","createRef","prevProps","slice","splice","tag","concat","onDelete","onAddition","alert","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;;;IACMC,U;;;;;AACJ,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAuHpBC,QAvHoB,GAuHT,UAACC,IAAD,EAAS;AAClB,YAAKF,KAAL,CAAWG,cAAX,CAA0BD,IAA1B;AACD,KAzHmB;;AAElB,UAAKD,QAAL,GAAgB,MAAKA,QAAL,CAAcG,IAAd,+BAAhB;AACA,UAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,EADK;AAGXI,MAAAA,WAAW,EAAE;AAHF,KAAb;AAUAR,IAAAA,KAAK,CAACS,GAAN,CAAU,gBAAV,EAA2B;AACzBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE,MAAKT,KAAL,CAAWS;AADT;AADiB,KAA3B,EAKKC,IALL,CAKU,UAACC,QAAD,EAAc;AAClB,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,IAAJ;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAtB,CALkB,CAMlB;;AAEA,UAAIC,cAAc,GAAG,EAArB;;AAEA,aAAML,CAAC,GAACI,IAAI,CAACE,MAAb,EAAoB;AAClBL,QAAAA,CAAC,GAAC,CAAF;;AAEA,YAAGG,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,KAAcC,SAAd,IAAyBJ,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,KAAc,IAA1C,EAA+C;AAE/C,iBAAMN,CAAC,GAACG,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,CAAYE,cAAZ,CAA2BH,MAAnC,EAA0C;AAExCJ,YAAAA,IAAI,GAACE,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,CAAYE,cAAZ,CAA2BR,CAA3B,EAA8BS,KAA9B,CAAoC,GAApC,CAAL;;AAEA,gBAAGP,OAAO,CAACQ,OAAR,CAAgBT,IAAI,CAAC,CAAD,CAApB,KAA0B,CAAC,CAA9B,EAAgC;AAC9BG,cAAAA,cAAc,CAACO,IAAf,CAAoB;AAClBC,gBAAAA,EAAE,EAAC,CADe;AAElBC,gBAAAA,IAAI,EAAEZ,IAAI,CAAC,CAAD;AAFQ,eAApB;AAIAC,cAAAA,OAAO,CAACS,IAAR,CAAaV,IAAI,CAAC,CAAD,CAAjB;AACD;;AAGDD,YAAAA,CAAC;AACF;AACF;;AAEGD,QAAAA,CAAC;AACJ;;AAID,YAAKe,QAAL,CAAc;AAACrB,QAAAA,WAAW,EAAEW;AAAd,OAAd;AAGH,KA7CH,EA8CGW,KA9CH,CA8CS,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACH,KAhDH;AAoDA,UAAKG,SAAL,gBAAiBpC,KAAK,CAACqC,SAAN,EAAjB;AAjEkB;AAkEnB;;;;WAED,4BAAmBC,SAAnB,EAA8B;AAAA;;AAC5B,UAAGA,SAAS,CAACzB,EAAV,KAAe,KAAKT,KAAL,CAAWS,EAA7B,EAAgC;AAC9BX,QAAAA,KAAK,CAACS,GAAN,CAAU,gBAAV,EAA2B;AACzBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS;AADT;AADiB,SAA3B,EAKKC,IALL,CAKU,UAACC,QAAD,EAAc;AAClB,cAAIC,CAAC,GAAG,CAAR;AACA,cAAIC,CAAC,GAAG,CAAR;AACA,cAAIC,IAAJ;AACA,cAAME,IAAI,GAAGL,QAAQ,CAACK,IAAtB,CAJkB,CAKlB;;AACA,cAAIC,cAAc,GAAG,EAArB;AACA,cAAIF,OAAO,GAAG,EAAd;;AACA,iBAAMH,CAAC,GAACI,IAAI,CAACE,MAAb,EAAoB;AAClBL,YAAAA,CAAC,GAAC,CAAF;;AACA,gBAAGG,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,KAAcC,SAAd,IAAyBJ,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,KAAc,IAA1C,EAA+C;AAC/C,qBAAMN,CAAC,GAACG,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,CAAYE,cAAZ,CAA2BH,MAAnC,EAA0C;AACxCJ,gBAAAA,IAAI,GAACE,IAAI,CAACJ,CAAD,CAAJ,CAAQO,GAAR,CAAYE,cAAZ,CAA2BR,CAA3B,EAA8BS,KAA9B,CAAoC,GAApC,CAAL;;AAEA,oBAAGP,OAAO,CAACQ,OAAR,CAAgBT,IAAI,CAAC,CAAD,CAApB,KAA0B,CAAC,CAA9B,EAAgC;AAC9BG,kBAAAA,cAAc,CAACO,IAAf,CAAoB;AAClBC,oBAAAA,EAAE,EAAC,CADe;AAElBC,oBAAAA,IAAI,EAAEZ,IAAI,CAAC,CAAD;AAFQ,mBAApB;AAIAC,kBAAAA,OAAO,CAACS,IAAR,CAAaV,IAAI,CAAC,CAAD,CAAjB;AACD;;AACDD,gBAAAA,CAAC;AACF;AACF;;AAEGD,YAAAA,CAAC;AACJ;;AAID,UAAA,MAAI,CAACe,QAAL,CAAc;AAACrB,YAAAA,WAAW,EAAEW;AAAd,WAAd;AAGH,SAtCH,EAuCGW,KAvCH,CAuCS,UAACC,KAAD,EAAW;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACH,SAzCH;AA6CA,aAAKG,SAAL,gBAAiBpC,KAAK,CAACqC,SAAN,EAAjB;AACD;AACF;;;WAMD,kBAAUrB,CAAV,EAAa;AACX,UAAMV,IAAI,GAAG,KAAKG,KAAL,CAAWH,IAAX,CAAgBiC,KAAhB,CAAsB,CAAtB,CAAb;AACAjC,MAAAA,IAAI,CAACkC,MAAL,CAAYxB,CAAZ,EAAe,CAAf;AACA,WAAKe,QAAL,CAAc;AAAEzB,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACA,WAAKD,QAAL,CAAcC,IAAd;AACD;;;WAED,oBAAYmC,GAAZ,EAAiB;AACf,UAAMnC,IAAI,GAAG,GAAGoC,MAAH,CAAU,KAAKjC,KAAL,CAAWH,IAArB,EAA2BmC,GAA3B,CAAb;AACA,WAAKV,QAAL,CAAc;AAAEzB,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACA,WAAKD,QAAL,CAAcC,IAAd;AACD;;;WAED,kBAAU;AACR,0BAEE,QAAC,SAAD;AACE,QAAA,eAAe,EAAC,cADlB;AAEE,QAAA,GAAG,EAAE,KAAK8B,SAFZ;AAGE,QAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWH,IAHnB;AAIE,QAAA,WAAW,EAAE,KAAKG,KAAL,CAAWC,WAJ1B;AAKE,QAAA,QAAQ,EAAE,KAAKiC,QAAL,CAAcnC,IAAd,CAAmB,IAAnB,CALZ;AAME,QAAA,UAAU,EAAE,KAAKoC,UAAL,CAAgBpC,IAAhB,CAAqB,IAArB,CANd;AAQE,QAAA,UAAU,EAAEqC,KAAK,CAAC,MAAD,CARnB;AASE,QAAA,UAAU,EAAC;AATb;AAAA;AAAA;AAAA;AAAA,cAFF;AAgBD;;;;EA1JsB7C,KAAK,CAAC8C,S;;AA8J/B,eAAe3C,UAAf","sourcesContent":["import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchText extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      text: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n\r\n\r\n    axios.get('/tweet/getText',{\r\n      params: {\r\n        db: this.props.db\r\n      }\r\n    })\r\n        .then((response) => {\r\n          var i = 1;\r\n          var j = 0;\r\n          var temp;\r\n          var strings = [];\r\n          const data = response.data\r\n          //var temp =data[0]._id.processed_text[0].split(\" \")\r\n          \r\n          var tempSuggestion = []\r\n       \r\n          while(i<data.length){\r\n            j=0;\r\n            \r\n            if(data[i]._id!==undefined&&data[i]._id!==null){\r\n             \r\n            while(j<data[i]._id.processed_text.length){\r\n              \r\n              temp=data[i]._id.processed_text[j].split(\" \")\r\n\r\n              if(strings.indexOf(temp[0])==-1){\r\n                tempSuggestion.push({\r\n                  id:0,\r\n                  name: temp[0]      \r\n                });\r\n                strings.push(temp[0]);\r\n              }\r\n\r\n\r\n              j++;\r\n            }\r\n          }\r\n\r\n              i++;\r\n          }\r\n          \r\n         \r\n\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n           \r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getText',{\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0;\r\n            var j = 0;\r\n            var temp;\r\n            const data = response.data;\r\n            //var temp =data[0]._id.processed_text[0].split(\" \")\r\n            var tempSuggestion = [];\r\n            var strings = [];\r\n            while(i<data.length){\r\n              j=0\r\n              if(data[i]._id!==undefined&&data[i]._id!==null){\r\n              while(j<data[i]._id.processed_text.length){\r\n                temp=data[i]._id.processed_text[j].split(\" \")\r\n                \r\n                if(strings.indexOf(temp[0])==-1){\r\n                  tempSuggestion.push({\r\n                    id:0,\r\n                    name: temp[0]      \r\n                  });\r\n                  strings.push(temp[0]);\r\n                }\r\n                j++\r\n              }\r\n            }\r\n  \r\n                i++\r\n            }\r\n            \r\n           \r\n  \r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n  }\r\n\r\n  sendData = (text) =>{\r\n    this.props.parentCallback(text);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const text = this.state.text.slice(0)\r\n    text.splice(i, 1)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const text = [].concat(this.state.text, tag)\r\n    this.setState({ text })\r\n    this.sendData(text)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Text\"\r\n        ref={this.reactTags}\r\n        tags={this.state.text}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)}\r\n         \r\n        onKeyPress={alert(\"ciao\")}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchText"]},"metadata":{},"sourceType":"module"}