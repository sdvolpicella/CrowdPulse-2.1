{"ast":null,"code":"import _classCallCheck from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\Desktop\\\\CrowdPulse2.0-main\\\\frontend\\\\src\\\\components\\\\Maps.js\";\nimport Filters from './Filters/Filters';\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport PreLoader from \"./preloader\";\nimport HeatmapLayer from '../HeatmapLayer';\nimport citta from \"../it.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Maps = /*#__PURE__*/function (_React$Component) {\n  _inherits(Maps, _React$Component);\n\n  var _super = _createSuper(Maps);\n\n  function Maps(props) {\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    _this = _super.call(this, props);\n\n    _this.handleQuery = function (data) {\n      _this.setState({\n        data: data\n      });\n\n      _this.state.data = data;\n\n      _this.query();\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.query = function () {\n      var i = 0;\n      var j = 0;\n      var markers = [];\n      var heatPoints = [];\n      var flag = false;\n      _this.state.counter = 0;\n\n      while (i < _this.state.data.length) {\n        if (_this.state.data[i].geo !== undefined) {\n          _this.state.counter++;\n\n          if (_this.state.data[i].geo.coordinates !== undefined) {\n            markers.push({\n              lat: _this.state.data[i].geo.coordinates.latitude,\n              lng: _this.state.data[i].geo.coordinates.longitude,\n              text: _this.state.data[i].raw_text,\n              author: _this.state.data[i].author_username\n            });\n            heatPoints.push([_this.state.data[i].geo.coordinates.latitude, _this.state.data[i].geo.coordinates.longitude, 100]);\n          } else {\n            j = 0;\n            flag = false; //Get coordinates from city name\n            //Tollegno is the last city of the file \"it.json\"\n\n            while (citta[j].city !== 'Tollegno') {\n              if (citta[j].city === _this.state.data[i].geo.user_location) {\n                flag = true;\n                break;\n              }\n\n              j++;\n            }\n\n            if (flag === true) {\n              markers.push({\n                lat: citta[j].lat,\n                lng: citta[j].lng,\n                text: _this.state.data[i].raw_text,\n                author: _this.state.data[i].author_username\n              });\n              heatPoints.push([citta[j].lat, citta[j].lng, 100]);\n            }\n          }\n\n          i++;\n        } else {\n          i++;\n        }\n      }\n\n      _this.setState({\n        markers: markers\n      });\n\n      _this.state.markers = markers;\n\n      _this.setState({\n        heatPoints: heatPoints\n      });\n\n      _this.state.heatPoints = heatPoints;\n    };\n\n    _this.displayMap = function () {\n      _this.state.content = 0;\n\n      _this.setState({\n        content: 0\n      });\n    };\n\n    _this.displayHeatMap = function () {\n      _this.state.content = 1;\n\n      _this.setState({\n        content: 1\n      });\n    };\n\n    _this.state = {\n      data: [],\n      markers: [],\n      flag: 0,\n      heatPoints: [],\n      content: 0,\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.db !== this.props.db) {\n        this.setState({\n          flag: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var body;\n\n      if (this.state.flag > 0) {\n        if (this.state.content === 0) {\n          body = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chart\",\n                  id: \"mapCanvas\",\n                  children: /*#__PURE__*/_jsxDEV(Map, {\n                    center: [41.29246, 13.5736108],\n                    zoom: 5,\n                    scrollWheelZoom: false,\n                    children: [this.state.markers.map(function (city, idx) {\n                      return /*#__PURE__*/_jsxDEV(Marker, {\n                        position: [city.lat, city.lng],\n                        children: /*#__PURE__*/_jsxDEV(Popup, {\n                          children: /*#__PURE__*/_jsxDEV(\"b\", {\n                            children: [city.author, \", \", city.text]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 148,\n                            columnNumber: 19\n                          }, _this2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 17\n                        }, _this2)\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 15\n                      }, _this2);\n                    }), /*#__PURE__*/_jsxDEV(TileLayer, {\n                      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n                      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)\n          }, void 0, false);\n        } else {\n          body = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chart\",\n                  id: \"mapCanvas\",\n                  children: /*#__PURE__*/_jsxDEV(Map, {\n                    center: [41.29246, 13.5736108],\n                    zoom: 5,\n                    children: [/*#__PURE__*/_jsxDEV(HeatmapLayer, {\n                      points: this.state.heatPoints,\n                      longitudeExtractor: function longitudeExtractor(m) {\n                        return m[1];\n                      },\n                      latitudeExtractor: function latitudeExtractor(m) {\n                        return m[0];\n                      },\n                      intensityExtractor: function intensityExtractor(m) {\n                        return parseFloat(m[2]);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n                      url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n                      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 10\n            }, this)\n          }, void 0, false);\n        }\n      } else {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main users chart-page\",\n          id: \"skip-target\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CrowdPulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Maps - \", this.props.mongodb, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Filters, {\n              parentCallback: this.handleQuery.bind(this),\n              db: this.props.db,\n              tweetsData: this.props.allTweetsData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button activeButton\",\n              onClick: function onClick() {\n                _this2.displayMap();\n              },\n              children: \" Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button activeButton\",\n              onClick: function onClick() {\n                _this2.displayHeatMap();\n              },\n              children: \" Heat Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"Tweet Geolocalizzati : \", this.state.counter]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this), body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"footer\",\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container footer--flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-start\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2021 \\xA9 Giovanni Tempesta \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Maps;\n}(React.Component);\n\nexport default Maps;","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Maps.js"],"names":["Filters","React","Map","TileLayer","Marker","Popup","PreLoader","HeatmapLayer","citta","Maps","props","handleQuery","data","setState","state","query","flag","i","j","markers","heatPoints","counter","length","geo","undefined","coordinates","push","lat","latitude","lng","longitude","text","raw_text","author","author_username","city","user_location","displayMap","content","displayHeatMap","prevProps","db","body","map","idx","m","parseFloat","mongodb","bind","allTweetsData","background","Component"],"mappings":"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","sourcesContent":["import Filters from './Filters/Filters'\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport PreLoader from \"./preloader\";\nimport HeatmapLayer from '../HeatmapLayer';\n\nimport citta from \"../it.json\" \n\n \n\n\nclass Maps extends React.Component {\n  constructor(props){\n    super(props)\n    \n\n    this.state = {\n      data:[],\n      markers : [],\n      flag:0,\n      heatPoints:[],\n      content:0,\n      counter:0,\n\n    }\n    \n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.db!==this.props.db){\n      this.setState({flag:0})\n    }\n    \n  }\n\n  handleQuery = (data) => {\n    \n    this.setState({data:data})\n    this.state.data = data\n    this.query()\n    this.setState({flag:1})\n  \n  }\n\n      query = () => {\n        var i = 0;\n        var j =0;\n        var markers = [];\n        var heatPoints = [];\n        var flag=false;\n        this.state.counter=0;\n        \n        while(i<this.state.data.length){\n          if(this.state.data[i].geo!==undefined){\n            \n            this.state.counter++;\n\n            if(this.state.data[i].geo.coordinates!==undefined){\n\n              markers.push({\n                lat:this.state.data[i].geo.coordinates.latitude,\n                lng:this.state.data[i].geo.coordinates.longitude,\n                text:this.state.data[i].raw_text,\n                author:this.state.data[i].author_username\n              })\n\n              heatPoints.push([this.state.data[i].geo.coordinates.latitude,this.state.data[i].geo.coordinates.longitude,100]);\n             \n            }else{\n\n              \n              j=0;\n              flag=false;\n              //Get coordinates from city name\n              //Tollegno is the last city of the file \"it.json\"\n              while(citta[j].city!=='Tollegno'){\n                if(citta[j].city === this.state.data[i].geo.user_location){\n                  flag=true;\n                  break;\n                }\n                j++;\n              }\n              \n              if(flag===true){\n                markers.push({\n                  lat:citta[j].lat,\n                  lng:citta[j].lng,\n                  text:this.state.data[i].raw_text,\n                  author:this.state.data[i].author_username\n                })\n  \n                heatPoints.push([citta[j].lat,citta[j].lng,100]);\n              }\n\n   \n\n            }\n            \n            i++\n          }else{\n            i++\n          }\n        }\n        \n        this.setState({markers:markers})\n        this.state.markers=markers\n        this.setState({heatPoints:heatPoints});\n        this.state.heatPoints=heatPoints;\n\n      \n        \n        \n        \n      }\n\n    displayMap = () =>{\n      this.state.content=0;\n      this.setState({content:0});\n    }\n\n    displayHeatMap = () =>{\n      this.state.content=1;\n      this.setState({content:1});\n    }\n    \n      render () {\n        var body;\n\n        if(this.state.flag>0){\n\n          if(this.state.content===0){\n            body=\n            <>\n \n \n            \n            <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"chart\" id=\"mapCanvas\">\n              <Map center={[41.29246 ,13.5736108]} zoom={5} scrollWheelZoom={false}>\n              {this.state.markers.map((city, idx) => (\n              <Marker\n                position={[city.lat, city.lng]}\n                \n                key={idx}\n              >\n                <Popup>\n                  <b>\n                    {city.author}, {city.text}\n                  </b>\n                </Popup>\n              </Marker>))}\n                  <TileLayer\n                      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n \n              </Map>\n              </div>\n            </div>\n \n          </div>\n\n          </>\n          }else{\n            body=\n            <>\n \n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"chart\" id=\"mapCanvas\">\n              <Map center={[41.29246 ,13.5736108]} zoom={5}>\n           <HeatmapLayer\n             points={this.state.heatPoints}\n             longitudeExtractor={m => m[1]}\n             latitudeExtractor={m => m[0]}\n             intensityExtractor={m => parseFloat(m[2])} />\n           <TileLayer\n             url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n           />\n         </Map>\n              </div>\n            </div>\n \n          </div>\n          </>\n          }\n\n\n        }else{\n          body=\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <div className=\"chart\"> <PreLoader/></div>\n          </div>\n          </div>\n        }\n          return(\n        <div className=\"main-wrapper\">\n        {/* ! Main */}\n        <main className=\"main users chart-page\" id=\"skip-target\">\n          <div className=\"container\">\n            <h1>CrowdPulse</h1>\n            <br/>\n            <h3>Maps - {this.props.mongodb} </h3>\n            <br/>\n            <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>\n            <br/>\n            <button className='button activeButton' onClick={() => {this.displayMap()}} > Map</button>\n            <button className='button activeButton' onClick={() => {this.displayHeatMap()}} > Heat Map</button>\n            <b>Tweet Geolocalizzati : {this.state.counter}</b>\n            <br/><br/><br/>\n            {body}\n\n          </div>\n        </main>\n        {/* ! Footer */}\n        <footer className=\"footer\" style={{ background: 'blue' }}>\n          <div className=\"container footer--flex\">\n            <div className=\"footer-start\">\n              <p>2021 © Giovanni Tempesta </p>\n            </div>\n          </div>\n        </footer>\n      </div>\n      )\n      }\n\n}\nexport default Maps"]},"metadata":{},"sourceType":"module"}