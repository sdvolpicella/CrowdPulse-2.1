{"ast":null,"code":"import _slicedToArray from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\Desktop\\\\CrowdPulse2.0-main\\\\frontend\\\\src\\\\components\\\\Table\\\\Captions\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useTable from \"../../../hooks/useTable.js\";\nimport \"../table.css\";\nimport TableFooter from \"../TableFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar printMediaUrls = function printMediaUrls(data) {\n  var image;\n\n  if (data.media_urls !== undefined) {\n    image = data.media_urls;\n    return image;\n  } else {\n    return \"\";\n  }\n};\n\nvar printImageToText = function printImageToText(data) {\n  var caption;\n\n  if (data.image_to_text !== undefined) {\n    caption = data.image_to_text;\n    return caption;\n  } else {\n    return \"\";\n  }\n};\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var data = _ref.data,\n      rowsPerPage = _ref.rowsPerPage;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"tabella\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableRowHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"tableHeader\",\n            children: \"Caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slice.map(function (data) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRowItems\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: data.author_username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printMediaUrls(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"tableCell\",\n              children: [printImageToText(data), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TableFooter, {\n      range: range,\n      slice: slice,\n      setPage: setPage,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Table, \"1n21uMJxVMDgLTYAULtYHIATWSk=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Table/Captions/index.jsx"],"names":["React","useState","useTable","TableFooter","printMediaUrls","data","image","media_urls","undefined","printImageToText","caption","image_to_text","Table","rowsPerPage","page","setPage","slice","range","map","author_username"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAS;AAC9B,MAAIC,KAAJ;;AAEC,MAAGD,IAAI,CAACE,UAAL,KAAkBC,SAArB,EAA+B;AAC3BF,IAAAA,KAAK,GAAGD,IAAI,CAACE,UAAb;AACA,WAAOD,KAAP;AACH,GAHD,MAGK;AACD,WAAO,EAAP;AACH;AACH,CATD;;AAWA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,IAAD,EAAS;AAC/B,MAAIK,OAAJ;;AAEA,MAAGL,IAAI,CAACM,aAAL,KAAqBH,SAAxB,EAAkC;AAC9BE,IAAAA,OAAO,GAAGL,IAAI,CAACM,aAAf;AACA,WAAOD,OAAP;AACH,GAHD,MAGK;AACD,WAAO,EAAP;AACH;AACH,CATD;;AAWA,IAAME,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA;;AAAA,MAAxBP,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBQ,WAAkB,QAAlBA,WAAkB;;AACvC,kBAAwBZ,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AACA,kBAAyBb,QAAQ,CAACG,IAAD,EAAOS,IAAP,EAAaD,WAAb,CAAjC;AAAA,MAAQG,KAAR,aAAQA,KAAR;AAAA,MAAeC,KAAf,aAAeA,KAAf;;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,EAAE,EAAC,SAA5B;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAQE;AAAA,kBACGD,KAAK,CAACE,GAAN,CAAU,UAACb,IAAD;AAAA,8BACT;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,wBAA2BA,IAAI,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,yBAA2Bf,cAAc,CAACC,IAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,yBAA2BI,gBAAgB,CAACJ,IAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADS;AAAA,SAAV;AADH;AAAA;AAAA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAoBE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEY,KAApB;AAA2B,MAAA,KAAK,EAAED,KAAlC;AAAyC,MAAA,OAAO,EAAED,OAAlD;AAA2D,MAAA,IAAI,EAAED;AAAjE;AAAA;AAAA;AAAA;AAAA,aApBF;AAAA,kBADF;AAwBD,CA5BD;;GAAMF,K;UAEqBV,Q;;;KAFrBU,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport useTable from \"../../../hooks/useTable.js\";\nimport \"../table.css\";\nimport TableFooter from \"../TableFooter\";\n\n\nconst printMediaUrls = (data) =>{\n  var image\n\n   if(data.media_urls!==undefined){\n       image = data.media_urls\n       return image\n   }else{\n       return(\"\")\n   }\n}\n\nconst printImageToText = (data) =>{\n   var caption\n\n   if(data.image_to_text!==undefined){\n       caption = data.image_to_text\n       return caption\n   }else{\n       return(\"\")\n   }\n}\n\nconst Table = ({ data, rowsPerPage }) => {\n  const [page, setPage] = useState(1);\n  const { slice, range } = useTable(data, page, rowsPerPage);\n  \n  return (\n    <>\n      <table className=\"table\" id=\"tabella\">\n        <thead className=\"tableRowHeader\">\n          <tr>\n            <th className=\"tableHeader\">Username</th>\n            <th className=\"tableHeader\">Image</th>\n            <th className=\"tableHeader\">Caption</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slice.map((data) => (\n            <tr className=\"tableRowItems\" >\n              <td className=\"tableCell\">{data.author_username}</td>\n              <td className=\"tableCell\">{printMediaUrls(data)} </td>\n              <td className=\"tableCell\">{printImageToText(data)} </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\n    </>\n  );\n};\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}