{"ast":null,"code":"import _classCallCheck from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\Desktop\\\\CrowdPulse2.0-main\\\\frontend\\\\src\\\\components\\\\WordCloud.js\";\nimport React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport Filters from './Filters/WordChartFilters';\nimport PreLoader from \"./preloader\";\nimport stopWords from \"../stopwords.json\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar WordCloud = /*#__PURE__*/function (_React$Component) {\n  _inherits(WordCloud, _React$Component);\n\n  var _super = _createSuper(WordCloud);\n\n  function WordCloud(props) {\n    var _this;\n\n    _classCallCheck(this, WordCloud);\n\n    _this = _super.call(this, props);\n\n    _this.handleQuery = function (temp) {\n      _this.setState({\n        data: temp.data\n      });\n\n      _this.state.data = temp.data;\n      _this.state.flagWord = temp.typeWord;\n\n      if (_this.state.flagWord === 0 || _this.state.flagWord === '0') {\n        _this.queryText();\n      } else if (_this.state.flagWord === 1 || _this.state.flagWord === '1') {\n        _this.queryTag();\n      } else if (_this.state.flagWord === 2 || _this.state.flagWord === '2') {\n        _this.queryHashtag();\n      } else {\n        _this.queryCaptioning();\n      }\n\n      _this.state.flag = 1;\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryTag = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var flag = false;\n\n      while (i < _this.state.data.length) {\n        j = 0;\n\n        if (_this.state.data[i].tags !== undefined) {\n          while (j < _this.state.data[i].tags.tag_me.length) {\n            temp = _this.state.data[i].tags.tag_me[j].split(' : ')[0];\n            k = 0;\n            flag = false;\n\n            while (k < arrayWords.length) {\n              if (arrayWords[k] === temp) {\n                flag = true;\n                break;\n              }\n\n              k++;\n            }\n\n            if (flag === true) {\n              words[k].value++;\n            } else {\n              arrayWords.push(temp);\n              words.push({\n                text: temp,\n                value: 1\n              });\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryHashtag = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var flag = false;\n\n      while (i < _this.state.data.length) {\n        j = 0;\n\n        if (_this.state.data[i].twitter_entities.hashtags !== undefined) {\n          while (j < _this.state.data[i].twitter_entities.hashtags.length) {\n            temp = _this.state.data[i].twitter_entities.hashtags[j];\n            k = 0;\n            flag = false;\n\n            while (k < arrayWords.length) {\n              if (arrayWords[k] === temp) {\n                flag = true;\n                break;\n              }\n\n              k++;\n            }\n\n            if (flag === true) {\n              words[k].value++;\n            } else {\n              arrayWords.push(temp);\n              words.push({\n                text: temp,\n                value: 1\n              });\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryText = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var index = 1;\n\n      while (i < _this.state.data.length) {\n        j = 0; //check spacy not null\n\n        if (_this.state.data[i].spacy !== undefined) {\n          while (j < _this.state.data[i].spacy.processed_text.length) {\n            temp = _this.state.data[i].spacy.processed_text[j].split(\" \")[0]; //check word\n\n            if (_this.checkWord(temp) === false && _this.state.data[i].spacy.processed_text[j].split(\" \")[3] !== 'CCONJ') {\n              //check if the word has already been counted  \n              if (arrayWords[temp] === undefined) {\n                words.push({\n                  text: temp,\n                  value: 1\n                });\n                arrayWords[temp] = index;\n                index++;\n              } else {\n                try {\n                  words[arrayWords[temp]].value++;\n                } catch (error) {}\n              }\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.checkWord = function (temp) {\n      //check if is a character\n      if (temp.length === 1) {\n        return true;\n      } //check if string is a tag \n\n\n      if (temp[0] === '@') {\n        return true;\n      } //check if string is a number\n\n\n      if (!isNaN(temp)) {\n        return true;\n      } //chek if word is a stopword\n\n\n      var i = 0; //'zr' is the last word of stopwords.json\n\n      /*\n      while(stopWords[i]!=='zr'){\n        if(temp===stopWords[i]){\n          return true;\n        }\n        i++;\n      }\n      */\n      //Check if word startsm with https\n\n      var pattern = new RegExp('^(https?|ftp)://');\n\n      if (pattern.test(temp)) {\n        return true;\n      } //Check if word is an emoji\n\n\n      var regexExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\n      if (regexExp.test(temp)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.queryCaptioning = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var index = 1;\n\n      while (i < _this.state.data.length) {\n        j = 0; //check image to text not null\n\n        if (_this.state.data[i].image_to_text !== undefined) {\n          while (j < _this.state.data[i].image_to_text.image_captioning.length) {\n            temp = _this.state.data[i].image_to_text.image_captioning[j]; //check word\n\n            if (_this.checkWord(temp) === false) {\n              //check if the word has already been counted  \n              if (arrayWords[temp] === undefined) {\n                words.push({\n                  text: temp,\n                  value: 1\n                });\n                arrayWords[temp] = index;\n                index++;\n              } else {\n                try {\n                  words[arrayWords[temp]].value++;\n                } catch (error) {}\n              }\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.state = {\n      data: [],\n      words: [{\n        text: null,\n        value: null\n      }],\n      flag: 0,\n      flagWord: 0\n    };\n    return _this;\n  }\n\n  _createClass(WordCloud, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.db !== this.props.db) {\n        this.setState({\n          flag: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var renderContent = function renderContent() {\n        return /*#__PURE__*/_jsxDEV(Filters, {\n          parentCallback: _this2.handleQuery.bind(_this2),\n          db: _this2.props.db,\n          tweetsData: _this2.props.allTweetsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 19\n        }, _this2);\n      };\n\n      var body;\n      var temp = renderContent();\n      var filters;\n\n      if (temp !== null) {\n        filters = temp;\n      } else {\n        filters = /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 19\n        }, this);\n      }\n\n      if (this.state.flag > 0) {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CloudChart\",\n              id: \"wordChart\",\n              children: /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n                words: this.state.words,\n                options: {\n                  fontFamily: 'monospace',\n                  rotations: 1,\n                  rotationAngles: [0],\n                  fontSizes: [20, 60]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }, this);\n      } else {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main users chart-page\",\n          id: \"skip-target\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CrowdPulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Word Cloud - \", this.props.mongodb, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 13\n            }, this), filters, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 13\n            }, this), body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"footer\",\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container footer--flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-start\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2021 \\xA9 Giovanni Tempesta \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return WordCloud;\n}(React.Component);\n\nexport default WordCloud;","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/WordCloud.js"],"names":["React","ReactWordcloud","Filters","PreLoader","stopWords","_","WordCloud","props","handleQuery","temp","setState","data","state","flagWord","typeWord","queryText","queryTag","queryHashtag","queryCaptioning","flag","i","j","k","words","text","value","arrayWords","length","tags","undefined","tag_me","split","push","twitter_entities","hashtags","index","spacy","processed_text","checkWord","error","isNaN","pattern","RegExp","test","regexExp","image_to_text","image_captioning","prevProps","db","renderContent","bind","allTweetsData","body","filters","fontFamily","rotations","rotationAngles","fontSizes","mongodb","background","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport Filters from './Filters/WordChartFilters'\nimport PreLoader from \"./preloader\";\nimport stopWords from \"../stopwords.json\"\nimport _ from \"lodash\"; \n\nclass WordCloud extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n          data:[],\n          words:[{\n            text:null,\n            value:null\n          }],\n          flag:0,\n          flagWord:0\n\n      }\n\n    }\n    componentDidUpdate(prevProps) {\n      if(prevProps.db!==this.props.db){\n        this.setState({flag:0})\n      }\n      \n    }\n    \n  handleQuery = (temp) =>{\n\n    this.setState({data:temp.data})\n    this.state.data = temp.data\n    this.state.flagWord = temp.typeWord;\n    \n    if(this.state.flagWord===0||this.state.flagWord==='0'){\n      this.queryText();\n    }else if(this.state.flagWord===1||this.state.flagWord==='1'){\n      this.queryTag();\n    }else if(this.state.flagWord===2||this.state.flagWord==='2'){\n      this.queryHashtag();\n    }else{\n      this.queryCaptioning();\n    }\n    this.state.flag=1;\n    this.setState({flag:1});\n    \n\n\n  }\n\n  queryTag = () =>{\n\n    var i = 0\n    var j = 0\n    var k = 0\n   \n    var words=[{\n        text:null,\n        value:0\n    }]\n\n    var temp = null\n\n    var arrayWords = []\n\n    var flag = false\n\n    \n    \n    while(i<this.state.data.length){\n      j=0;\n      if(this.state.data[i].tags!==undefined){\n        \n        while(j<this.state.data[i].tags.tag_me.length){\n          \n          temp=this.state.data[i].tags.tag_me[j].split(' : ')[0]\n          k=0;\n          flag=false;\n          while(k<arrayWords.length){\n            if(arrayWords[k]===temp){\n              flag=true;\n              break\n            }\n            k++\n          }\n    \n          if(flag===true){\n            words[k].value++\n          }else{\n            arrayWords.push(temp)\n            words.push({\n              text:temp,\n              value:1\n            })            \n      \n\n            \n          }    \n          j++;\n      \n        }\n      }\n\n    i++\n    }\n    \n    \n    this.state.words=words\n    this.setState({words:words})\n    \n    this.setState({flag:1})\n    \n\n  }\n\n  queryHashtag = () =>{\n\n    var i = 0\n    var j = 0\n    var k = 0\n   \n    var words=[{\n        text:null,\n        value:0\n    }]\n\n    var temp = null;\n\n    var arrayWords = [];\n\n    var flag = false;\n\n    \n\n    \n     \n    while(i<this.state.data.length){\n      j=0;\n\n      if(this.state.data[i].twitter_entities.hashtags!==undefined){\n        \n        while(j<this.state.data[i].twitter_entities.hashtags.length){\n          \n          temp=this.state.data[i].twitter_entities.hashtags[j]\n          k=0;\n          flag=false;\n          while(k<arrayWords.length){\n            if(arrayWords[k]===temp){\n              flag=true\n              break\n            }\n            k++\n          }\n    \n          if(flag===true){\n            words[k].value++\n          }else{\n            arrayWords.push(temp)\n            words.push({\n              text:temp,\n              value:1\n            })            \n\n            \n          }    \n          j++;\n      \n        }\n      }\n     \n     i++\n     \n    }\n    \n    this.state.words=words\n    this.setState({words:words})\n    \n    this.setState({flag:1})\n\n  }\n\n\n \n      queryText = () =>{\n\n        var i = 0\n        var j = 0\n        var k = 0\n       \n        var words=[{\n            text:null,\n            value:0\n        }]\n\n        var temp = null\n\n        var arrayWords = []\n\n        \n        var index = 1;\n\n        \n\n       \n        while(i<this.state.data.length){\n          j=0;\n          //check spacy not null\n          if(this.state.data[i].spacy!==undefined){\n            while(j<this.state.data[i].spacy.processed_text.length){\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")[0];\n              //check word\n             if(this.checkWord(temp)===false&&this.state.data[i].spacy.processed_text[j].split(\" \")[3]!=='CCONJ'\n              ){\n                \n                //check if the word has already been counted  \n                if(arrayWords[temp]===undefined){\n                  words.push({\n                    text:temp,\n                    value:1\n                  })\n                  arrayWords[temp] = index;\n                  index++;\n                  \n                }else{\n                  try {\n                    words[arrayWords[temp]].value++;\n                  } catch (error) {\n                    \n                  }\n                  \n                }\n\n  \n\n                \n\n              }               \n               \n              j++;\n            }\n          }\n\n         i++\n         \n        }\n        \n        \n        this.state.words=words;\n        this.setState({words:words});\n        \n        this.setState({flag:1});\n\n      }\n   \n      checkWord = (temp) => {\n        \n        //check if is a character\n        if(temp.length===1){\n          return true;\n        }\n        //check if string is a tag \n        if(temp[0]==='@'){\n          return true\n        }\n    \n        //check if string is a number\n        if(!isNaN(temp)){         \n          return true\n        }\n\n        //chek if word is a stopword\n        var i =0;\n        //'zr' is the last word of stopwords.json\n        /*\n        while(stopWords[i]!=='zr'){\n          if(temp===stopWords[i]){\n            return true;\n          }\n          i++;\n        }\n        */\n\n        //Check if word startsm with https\n        \n        var pattern = new RegExp('^(https?|ftp)://');\n          if(pattern.test(temp)){\n          return true;\n        }\n\n        //Check if word is an emoji\n\n        const regexExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\n        if(regexExp.test(temp)){\n          return true;\n        }\n\n        return false;\n        \n      }\n\n\n      queryCaptioning = () =>{\n\n        var i = 0\n        var j = 0\n        var k = 0\n       \n        var words=[{\n            text:null,\n            value:0\n        }]\n\n        var temp = null\n\n        var arrayWords = []\n\n        \n        var index = 1;\n\n        \n\n       \n        while(i<this.state.data.length){\n          j=0;\n          //check image to text not null\n          if(this.state.data[i].image_to_text!==undefined){\n            while(j<this.state.data[i].image_to_text.image_captioning.length){\n              temp=this.state.data[i].image_to_text.image_captioning[j];\n              //check word\n             if(this.checkWord(temp)===false\n              ){\n                \n                //check if the word has already been counted  \n                if(arrayWords[temp]===undefined){\n                  words.push({\n                    text:temp,\n                    value:1\n                  })\n                  arrayWords[temp] = index;\n                  index++;\n                  \n                }else{\n                  try {\n                    words[arrayWords[temp]].value++;\n                  } catch (error) {\n                    \n                  }\n                  \n                }\n\n  \n\n                \n\n              }               \n               \n              j++;\n            }\n          }\n\n         i++\n         \n        }\n        \n        \n        this.state.words=words;\n        this.setState({words:words});\n        \n        this.setState({flag:1});\n\n      }\n\n    \n      render () {\n        const renderContent = () => {\n          \n           return <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>;\n         \n          }\n        \n        var body;      \n        var temp = renderContent();\n        var filters;\n        \n        if(temp!==null){\n          filters=temp;\n        }else{\n          filters=<PreLoader/>\n        }\n        if(this.state.flag>0){\n          body =<div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"CloudChart\" id=\"wordChart\">\n            <ReactWordcloud words={this.state.words}       options={{\n              fontFamily: 'monospace',\n              rotations: 1,\n              rotationAngles: [0],\n              fontSizes: [20, 60],\n            }} />\n            </div>\n          </div>\n\n        </div>\n        }else{\n          body=\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <div className=\"chart\"> <PreLoader/></div>\n          </div>\n          </div>\n        }\n          return(\n        <div className=\"main-wrapper\">\n        {/* ! Main */}\n        <main className=\"main users chart-page\" id=\"skip-target\">\n          <div className=\"container\">\n            <h1>CrowdPulse</h1>\n            <br/>\n            <h3>Word Cloud - {this.props.mongodb} </h3>\n            <br/>\n            {filters}\n            \n            <br/>\n\n            {body}\n          </div>\n        </main>\n        {/* ! Footer */}\n        <footer className=\"footer\" style={{ background: 'blue' }}>\n          <div className=\"container footer--flex\">\n            <div className=\"footer-start\">\n              <p>2021 © Giovanni Tempesta </p>\n            </div>\n          </div>\n        </footer>\n      </div>\n      )\n      }\n\n}\nexport default WordCloud"]},"metadata":{},"sourceType":"module"}