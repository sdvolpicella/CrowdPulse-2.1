{"ast":null,"code":"import _classCallCheck from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\LoadingData.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.getAllData = function (db) {\n      var config = {\n        onDownloadProgress: function onDownloadProgress(progressEvent) {\n          var percentCompleted = Math.floor(progressEvent.loaded * 100 / progressEvent.total); // do whatever you like with the percentage complete\n          // maybe dispatch an action that will update a progress bar or something\n\n          alert(percentCompleted);\n        }\n      };\n      axios.all([axios.get('/tweet/getAnalyzedData', {\n        params: {\n          db: db\n        },\n        onDownloadProgress: function onDownloadProgress(progressEvent) {\n          var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          alert(percentCompleted);\n        }\n      }), axios.get('/tweet/getDataSortByDate', {\n        params: {\n          db: db\n        }\n      }), axios.get('/tweet/getHashtags', {\n        params: {\n          db: db\n        }\n      }), axios.get('/tweet/getText', {\n        params: {\n          db: db\n        }\n      }), axios.get('/tweet/getTags', {\n        params: {\n          db: db\n        }\n      })]).then(axios.spread(function (obj1, obj2, obj3, obj4, obj5) {\n        // Both requests are now complete\n        _this.state.dataTweet = obj1;\n        _this.state.dataSortByDate = obj2;\n        _this.state.dataHashtags = obj3;\n        _this.state.dataText = obj4;\n        _this.state.dataTags = obj5;\n\n        _this.sendData();\n      }));\n    };\n\n    _this.sendData = function () {\n      _this.props.parentCallback(_this.state);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dataTags: [],\n      dataText: [],\n      dataHashtags: [],\n      dataTweet: [],\n      dataSortByDate: []\n    };\n\n    _this.getAllData(_this.props.db);\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main users chart-page\",\n          id: \"skip-target\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"homeTitle\",\n              children: \"CrowdPulse Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Hai selezionato  il db : \", this.props.mongodb, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: \"LOADING DATA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"footer\",\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container footer--flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-start\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2021 \\xA9 Giovanni Tempesta \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/src/components/LoadingData.js"],"names":["React","axios","Home","props","getAllData","db","config","onDownloadProgress","progressEvent","percentCompleted","Math","floor","loaded","total","alert","all","get","params","round","then","spread","obj1","obj2","obj3","obj4","obj5","state","dataTweet","dataSortByDate","dataHashtags","dataText","dataTags","sendData","parentCallback","bind","mongodb","background","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.sendData = this.sendData.bind(this)        \r\n        this.state = {\r\n          dataTags : [],\r\n          dataText : [],\r\n          dataHashtags : [],\r\n          dataTweet : [],\r\n          dataSortByDate : [],\r\n          \r\n      }\r\n      \r\n      this.getAllData(this.props.db)\r\n    }\r\n\r\n    \r\n   \r\n\r\n\r\n    getAllData = (db) => {\r\n\r\n      let config = {\r\n        onDownloadProgress: progressEvent => {\r\n          let percentCompleted = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n          // do whatever you like with the percentage complete\r\n          // maybe dispatch an action that will update a progress bar or something\r\n          alert(percentCompleted)\r\n        }\r\n      }\r\n      \r\n\r\n      axios.all([\r\n        axios.get('/tweet/getAnalyzedData', {\r\n          params: {\r\n            db: db\r\n          },\r\n\r\n          onDownloadProgress: (progressEvent) => {\r\n                       let percentCompleted = Math.round(\r\n              (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n              alert(percentCompleted)\r\n          },\r\n          \r\n        }),\r\n        axios.get('/tweet/getDataSortByDate',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getHashtags',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getText',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n        axios.get('/tweet/getTags',{\r\n          params: {\r\n            db: db\r\n          }\r\n        }),\r\n      ])\r\n      .then(axios.spread((obj1, obj2, obj3, obj4, obj5,) => {\r\n        // Both requests are now complete\r\n        this.state.dataTweet = obj1;\r\n        this.state.dataSortByDate = obj2;\r\n        this.state.dataHashtags = obj3;\r\n        this.state.dataText = obj4;\r\n        this.state.dataTags = obj5;    \r\n        this.sendData()    \r\n        \r\n\r\n      }));\r\n\r\n    }\r\n\r\n    sendData = () =>{\r\n      this.props.parentCallback(this.state);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n\r\n                        \r\n        <div className=\"main-wrapper\">\r\n\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1 className=\"homeTitle\">CrowdPulse Dashboard</h1>\r\n            <br/><br/><br/><br/><br/><br/><br/>\r\n            <h3>Hai selezionato  il db : {this.props.mongodb} </h3><br/><br/><br/>\r\n            <div className=\"row\">\r\n\r\n               LOADING DATA\r\n\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n\r\n\r\n      \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}