{"ast":null,"code":"import _classCallCheck from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Giovanni\\\\wa\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchHashtag.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport axios from 'axios'; //https://www.npmjs.com/package/react-tag-autocomplete\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchHashtag = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchHashtag, _React$Component);\n\n  var _super = _createSuper(SearchHashtag);\n\n  function SearchHashtag(props) {\n    var _this;\n\n    _classCallCheck(this, SearchHashtag);\n\n    _this = _super.call(this, props);\n\n    _this.getHashtags = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var data = _this.props.allHashtags.data;\n      var strings = [];\n      var tempSuggestion = []; //console.log(\"hashtags\"+data[0])\n\n      while (i < data.length) {\n        j = 0;\n\n        if (data[i]._id.hashtags !== undefined) {\n          while (j < data[i]._id.hashtags.length) {\n            if (strings.indexOf(data[i]._id.hashtags[j]) == -1) {\n              tempSuggestion.push({\n                id: 0,\n                name: data[i]._id.hashtags[j]\n              });\n              strings.push(data[i]._id.hashtags[j]);\n            } //console.log(tempSuggestion)\n\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.suggestions = tempSuggestion;\n\n      _this.setState({\n        suggestions: tempSuggestion\n      });\n\n      _this.reactTags = /*#__PURE__*/React.createRef();\n    };\n\n    _this.sendData = function (hashtags) {\n      _this.props.parentCallback(hashtags);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      hashtags: [],\n      suggestions: []\n    };\n\n    _this.getHashtags();\n\n    return _this;\n  }\n\n  _createClass(SearchHashtag, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.mongodb !== this.props.mongodb) {\n        this.getHashtags();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var hashtags = this.state.hashtags.slice(0);\n      hashtags.splice(i, 1);\n      this.setState({\n        hashtags: hashtags\n      });\n      this.sendData(hashtags);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(hashtag) {\n      var hashtags = [].concat(this.state.hashtags, hashtag);\n      this.setState({\n        hashtags: hashtags\n      });\n      this.sendData(hashtags);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        placeholderText: \"Add new Hashtag\",\n        ref: this.reactTags,\n        tags: this.state.hashtags,\n        suggestions: this.state.suggestions,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchHashtag;\n}(React.Component);\n\nexport default SearchHashtag;","map":{"version":3,"sources":["C:/Users/Giovanni/wa/CrowdPulse/frontend/src/components/Filters/SearchHashtag.js"],"names":["React","ReactTags","axios","SearchHashtag","props","getHashtags","i","j","k","data","allHashtags","strings","tempSuggestion","length","_id","hashtags","undefined","indexOf","push","id","name","state","suggestions","setState","reactTags","createRef","sendData","parentCallback","bind","prevProps","mongodb","slice","splice","hashtag","concat","onDelete","onAddition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchHashtag extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      hashtags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n    this.getHashtags();\r\n  }\r\n\r\n  getHashtags = () => {\r\n    var i = 0;\r\n    var j = 0;\r\n    var k =0;\r\n    const data = this.props.allHashtags.data;\r\n    var strings = [];\r\n   \r\n    var tempSuggestion = []\r\n    //console.log(\"hashtags\"+data[0])\r\n    while(i<data.length){\r\n      \r\n      j=0\r\n      if(data[i]._id.hashtags!==undefined){\r\n        while(j<data[i]._id.hashtags.length){ \r\n          if(strings.indexOf(data[i]._id.hashtags[j])==-1){\r\n            tempSuggestion.push(\r\n              {\r\n                id:0,\r\n                name: data[i]._id.hashtags[j]\r\n              }\r\n            )\r\n            strings.push(data[i]._id.hashtags[j]);\r\n          }    \r\n\r\n          //console.log(tempSuggestion)\r\n          j++\r\n        }\r\n      }\r\n\r\n\r\n        i++\r\n    }\r\n\r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n   \r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getHashtags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  sendData = (hashtags) =>{\r\n    this.props.parentCallback(hashtags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const hashtags = this.state.hashtags.slice(0)\r\n    hashtags.splice(i, 1)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  onAddition (hashtag) {\r\n    const hashtags = [].concat(this.state.hashtags, hashtag)\r\n    this.setState({ hashtags })\r\n    this.sendData(hashtags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Hashtag\"\r\n        ref={this.reactTags}\r\n        tags={this.state.hashtags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchHashtag"]},"metadata":{},"sourceType":"module"}