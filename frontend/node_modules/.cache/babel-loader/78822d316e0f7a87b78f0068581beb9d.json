{"ast":null,"code":"import _classCallCheck from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _class,_temp;import React from'react';import map from'lodash.map';import reduce from'lodash.reduce';import filter from'lodash.filter';import min from'lodash.min';import max from'lodash.max';import isNumber from'lodash.isnumber';import L from'leaflet';import{MapLayer,withLeaflet}from'react-leaflet';import simpleheat from'simpleheat';import PropTypes from'prop-types';function isInvalid(num){return!isNumber(num)&&!num;}function isValid(num){return!isInvalid(num);}function isValidLatLngArray(arr){return filter(arr,isValid).length===arr.length;}function isInvalidLatLngArray(arr){return!isValidLatLngArray(arr);}function safeRemoveLayer(leafletMap,el){var _leafletMap$getPanes=leafletMap.getPanes(),overlayPane=_leafletMap$getPanes.overlayPane;if(overlayPane&&overlayPane.contains(el)){overlayPane.removeChild(el);}}function shouldIgnoreLocation(loc){return isInvalid(loc.lng)||isInvalid(loc.lat);}export default withLeaflet((_temp=_class=/*#__PURE__*/function(_MapLayer){_inherits(HeatmapLayer,_MapLayer);var _super=_createSuper(HeatmapLayer);function HeatmapLayer(){_classCallCheck(this,HeatmapLayer);return _super.apply(this,arguments);}_createClass(HeatmapLayer,[{key:\"createLeafletElement\",value:function createLeafletElement(){return null;}},{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;var canAnimate=this.props.leaflet.map.options.zoomAnimation&&L.Browser.any3d;var zoomClass=\"leaflet-zoom-\".concat(canAnimate?'animated':'hide');var mapSize=this.props.leaflet.map.getSize();var transformProp=L.DomUtil.testProp(['transformOrigin','WebkitTransformOrigin','msTransformOrigin']);this._el=L.DomUtil.create('canvas',zoomClass);this._el.style[transformProp]='50% 50%';this._el.width=mapSize.x;this._el.height=mapSize.y;var el=this._el;var Heatmap=L.Layer.extend({onAdd:function onAdd(leafletMap){return leafletMap.getPanes().overlayPane.appendChild(el);},addTo:function addTo(leafletMap){leafletMap.addLayer(_this);return _this;},onRemove:function onRemove(leafletMap){return safeRemoveLayer(leafletMap,el);}});this.leafletElement=new Heatmap();_get(_getPrototypeOf(HeatmapLayer.prototype),\"componentDidMount\",this).call(this);this._heatmap=simpleheat(this._el);this.reset();if(this.props.fitBoundsOnLoad){this.fitBounds();}this.attachEvents();this.updateHeatmapProps(this.getHeatmapProps(this.props));}},{key:\"getMax\",value:function getMax(props){return props.max||3.0;}},{key:\"getRadius\",value:function getRadius(props){return props.radius||30;}},{key:\"getMaxZoom\",value:function getMaxZoom(props){return props.maxZoom||18;}},{key:\"getMinOpacity\",value:function getMinOpacity(props){return props.minOpacity||0.01;}},{key:\"getBlur\",value:function getBlur(props){return props.blur||15;}},{key:\"getHeatmapProps\",value:function getHeatmapProps(props){return{minOpacity:this.getMinOpacity(props),maxZoom:this.getMaxZoom(props),radius:this.getRadius(props),blur:this.getBlur(props),max:this.getMax(props),gradient:props.gradient};}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var currentProps=this.props;var nextHeatmapProps=this.getHeatmapProps(nextProps);this.updateHeatmapGradient(nextHeatmapProps.gradient);var hasRadiusUpdated=nextHeatmapProps.radius!==currentProps.radius;var hasBlurUpdated=nextHeatmapProps.blur!==currentProps.blur;if(hasRadiusUpdated||hasBlurUpdated){this.updateHeatmapRadius(nextHeatmapProps.radius,nextHeatmapProps.blur);}if(nextHeatmapProps.max!==currentProps.max){this.updateHeatmapMax(nextHeatmapProps.max);}}/**\n   * Update various heatmap properties like radius, gradient, and max\n   */},{key:\"updateHeatmapProps\",value:function updateHeatmapProps(props){this.updateHeatmapRadius(props.radius,props.blur);this.updateHeatmapGradient(props.gradient);this.updateHeatmapMax(props.max);}/**\n   * Update the heatmap's radius and blur (blur is optional)\n   */},{key:\"updateHeatmapRadius\",value:function updateHeatmapRadius(radius,blur){if(radius){this._heatmap.radius(radius,blur);}}/**\n   * Update the heatmap's gradient\n   */},{key:\"updateHeatmapGradient\",value:function updateHeatmapGradient(gradient){if(gradient){this._heatmap.gradient(gradient);}}/**\n   * Update the heatmap's maximum\n   */},{key:\"updateHeatmapMax\",value:function updateHeatmapMax(maximum){if(maximum){this._heatmap.max(maximum);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){safeRemoveLayer(this.props.leaflet.map,this._el);}},{key:\"fitBounds\",value:function fitBounds(){var points=this.props.points;var lngs=map(points,this.props.longitudeExtractor);var lats=map(points,this.props.latitudeExtractor);var ne={lng:max(lngs),lat:max(lats)};var sw={lng:min(lngs),lat:min(lats)};if(shouldIgnoreLocation(ne)||shouldIgnoreLocation(sw)){return;}this.props.leaflet.map.fitBounds(L.latLngBounds(L.latLng(sw),L.latLng(ne)));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.props.leaflet.map.invalidateSize();if(this.props.fitBoundsOnUpdate){this.fitBounds();}this.reset();}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return true;}},{key:\"attachEvents\",value:function attachEvents(){var _this2=this;var leafletMap=this.props.leaflet.map;leafletMap.on('viewreset',function(){return _this2.reset();});leafletMap.on('moveend',function(){return _this2.reset();});if(leafletMap.options.zoomAnimation&&L.Browser.any3d){leafletMap.on('zoomanim',this._animateZoom,this);}}},{key:\"_animateZoom\",value:function _animateZoom(e){var scale=this.props.leaflet.map.getZoomScale(e.zoom);var offset=this.props.leaflet.map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this.props.leaflet.map._getMapPanePos());if(L.DomUtil.setTransform){L.DomUtil.setTransform(this._el,offset,scale);}else{this._el.style[L.DomUtil.TRANSFORM]=\"\".concat(L.DomUtil.getTranslateString(offset),\" scale(\").concat(scale,\")\");}}},{key:\"reset\",value:function reset(){var topLeft=this.props.leaflet.map.containerPointToLayerPoint([0,0]);L.DomUtil.setPosition(this._el,topLeft);var size=this.props.leaflet.map.getSize();if(this._heatmap._width!==size.x){this._el.width=this._heatmap._width=size.x;}if(this._heatmap._height!==size.y){this._el.height=this._heatmap._height=size.y;}if(this._heatmap&&!this._frame&&!this.props.leaflet.map._animating){this._frame=L.Util.requestAnimFrame(this.redraw,this);}this.redraw();}},{key:\"redraw\",value:function redraw(){var r=this._heatmap._r;var size=this.props.leaflet.map.getSize();var maxIntensity=this.props.max===undefined?1:this.getMax(this.props);var maxZoom=this.props.maxZoom===undefined?this.props.leaflet.map.getMaxZoom():this.getMaxZoom(this.props);var v=1/Math.pow(2,Math.max(0,Math.min(maxZoom-this.props.leaflet.map.getZoom(),12))/2);var cellSize=r/2;var panePos=this.props.leaflet.map._getMapPanePos();var offsetX=panePos.x%cellSize;var offsetY=panePos.y%cellSize;var getLat=this.props.latitudeExtractor;var getLng=this.props.longitudeExtractor;var getIntensity=this.props.intensityExtractor;var inBounds=function inBounds(p,bounds){return bounds.contains(p);};var filterUndefined=function filterUndefined(row){return filter(row,function(c){return c!==undefined;});};var roundResults=function roundResults(results){return reduce(results,function(result,row){return map(filterUndefined(row),function(cell){return[Math.round(cell[0]),Math.round(cell[1]),Math.min(cell[2],maxIntensity),cell[3]];}).concat(result);},[]);};var accumulateInGrid=function accumulateInGrid(points,leafletMap,bounds){return reduce(points,function(grid,point){var latLng=[getLat(point),getLng(point)];if(isInvalidLatLngArray(latLng)){//skip invalid points\nreturn grid;}var p=leafletMap.latLngToContainerPoint(latLng);if(!inBounds(p,bounds)){return grid;}var x=Math.floor((p.x-offsetX)/cellSize)+2;var y=Math.floor((p.y-offsetY)/cellSize)+2;grid[y]=grid[y]||[];var cell=grid[y][x];var alt=getIntensity(point);var k=alt*v;if(!cell){grid[y][x]=[p.x,p.y,k,1];}else{cell[0]=(cell[0]*cell[2]+p.x*k)/(cell[2]+k);// x\ncell[1]=(cell[1]*cell[2]+p.y*k)/(cell[2]+k);// y\ncell[2]+=k;// accumulated intensity value\ncell[3]+=1;}return grid;},[]);};var getBounds=function getBounds(){return new L.Bounds(L.point([-r,-r]),size.add([r,r]));};var getDataForHeatmap=function getDataForHeatmap(points,leafletMap){return roundResults(accumulateInGrid(points,leafletMap,getBounds(leafletMap)));};var data=getDataForHeatmap(this.props.points,this.props.leaflet.map);this._heatmap.clear();this._heatmap.data(data).draw(this.getMinOpacity(this.props));this._frame=null;if(this.props.onStatsUpdate&&this.props.points&&this.props.points.length>0){this.props.onStatsUpdate(reduce(data,function(stats,point){stats.max=point[3]>stats.max?point[3]:stats.max;stats.min=point[3]<stats.min?point[3]:stats.min;return stats;},{min:Infinity,max:-Infinity}));}}},{key:\"render\",value:function render(){return null;}}]);return HeatmapLayer;}(MapLayer),_class.propTypes={points:PropTypes.array.isRequired,longitudeExtractor:PropTypes.func.isRequired,latitudeExtractor:PropTypes.func.isRequired,intensityExtractor:PropTypes.func.isRequired,fitBoundsOnLoad:PropTypes.bool,fitBoundsOnUpdate:PropTypes.bool,onStatsUpdate:PropTypes.func,/* props controlling heatmap generation */max:PropTypes.number,radius:PropTypes.number,maxZoom:PropTypes.number,minOpacity:PropTypes.number,blur:PropTypes.number,gradient:PropTypes.object},_temp));","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/HeatmapLayer.js"],"names":["React","map","reduce","filter","min","max","isNumber","L","MapLayer","withLeaflet","simpleheat","PropTypes","isInvalid","num","isValid","isValidLatLngArray","arr","length","isInvalidLatLngArray","safeRemoveLayer","leafletMap","el","getPanes","overlayPane","contains","removeChild","shouldIgnoreLocation","loc","lng","lat","canAnimate","props","leaflet","options","zoomAnimation","Browser","any3d","zoomClass","mapSize","getSize","transformProp","DomUtil","testProp","_el","create","style","width","x","height","y","Heatmap","Layer","extend","onAdd","appendChild","addTo","addLayer","onRemove","leafletElement","_heatmap","reset","fitBoundsOnLoad","fitBounds","attachEvents","updateHeatmapProps","getHeatmapProps","radius","maxZoom","minOpacity","blur","getMinOpacity","getMaxZoom","getRadius","getBlur","getMax","gradient","nextProps","currentProps","nextHeatmapProps","updateHeatmapGradient","hasRadiusUpdated","hasBlurUpdated","updateHeatmapRadius","updateHeatmapMax","maximum","points","lngs","longitudeExtractor","lats","latitudeExtractor","ne","sw","latLngBounds","latLng","invalidateSize","fitBoundsOnUpdate","on","_animateZoom","e","scale","getZoomScale","zoom","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","setTransform","TRANSFORM","getTranslateString","topLeft","containerPointToLayerPoint","setPosition","size","_width","_height","_frame","_animating","Util","requestAnimFrame","redraw","r","_r","maxIntensity","undefined","v","Math","pow","getZoom","cellSize","panePos","offsetX","offsetY","getLat","getLng","getIntensity","intensityExtractor","inBounds","p","bounds","filterUndefined","row","c","roundResults","results","result","cell","round","concat","accumulateInGrid","grid","point","latLngToContainerPoint","floor","alt","k","getBounds","Bounds","add","getDataForHeatmap","data","clear","draw","onStatsUpdate","stats","Infinity","propTypes","array","isRequired","func","bool","number","object"],"mappings":"q+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAOC,CAAAA,CAAP,KAAc,SAAd,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,eAAtC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAuCA,QAASC,CAAAA,SAAT,CAAmBC,GAAnB,CAAyC,CACvC,MAAO,CAACP,QAAQ,CAACO,GAAD,CAAT,EAAkB,CAACA,GAA1B,CACD,CAED,QAASC,CAAAA,OAAT,CAAiBD,GAAjB,CAAuC,CACrC,MAAO,CAACD,SAAS,CAACC,GAAD,CAAjB,CACD,CAED,QAASE,CAAAA,kBAAT,CAA4BC,GAA5B,CAAyD,CACvD,MAAOb,CAAAA,MAAM,CAACa,GAAD,CAAMF,OAAN,CAAN,CAAqBG,MAArB,GAAgCD,GAAG,CAACC,MAA3C,CACD,CAED,QAASC,CAAAA,oBAAT,CAA8BF,GAA9B,CAA2D,CACzD,MAAO,CAACD,kBAAkB,CAACC,GAAD,CAA1B,CACD,CAED,QAASG,CAAAA,eAAT,CAAyBC,UAAzB,CAA0CC,EAA1C,CAAoD,CAClD,yBAAwBD,UAAU,CAACE,QAAX,EAAxB,CAAQC,WAAR,sBAAQA,WAAR,CACA,GAAIA,WAAW,EAAIA,WAAW,CAACC,QAAZ,CAAqBH,EAArB,CAAnB,CAA6C,CAC3CE,WAAW,CAACE,WAAZ,CAAwBJ,EAAxB,EACD,CACF,CAED,QAASK,CAAAA,oBAAT,CAA8BC,GAA9B,CAAoD,CAClD,MAAOf,CAAAA,SAAS,CAACe,GAAG,CAACC,GAAL,CAAT,EAAsBhB,SAAS,CAACe,GAAG,CAACE,GAAL,CAAtC,CACD,CAED,cAAepB,CAAAA,WAAW,qRAkBxB,+BAAuB,CACrB,MAAO,KAAP,CACD,CApBuB,iCAsBxB,4BAA0B,gBACxB,GAAMqB,CAAAA,UAAU,CAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBgC,OAAvB,CAA+BC,aAA/B,EAAgD3B,CAAC,CAAC4B,OAAF,CAAUC,KAA7E,CACA,GAAMC,CAAAA,SAAS,wBAAmBP,UAAU,CAAG,UAAH,CAAgB,MAA7C,CAAf,CACA,GAAMQ,CAAAA,OAAO,CAAG,KAAKP,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBsC,OAAvB,EAAhB,CACA,GAAMC,CAAAA,aAAa,CAAGjC,CAAC,CAACkC,OAAF,CAAUC,QAAV,CACpB,CAAC,iBAAD,CAAoB,uBAApB,CAA6C,mBAA7C,CADoB,CAAtB,CAIA,KAAKC,GAAL,CAAWpC,CAAC,CAACkC,OAAF,CAAUG,MAAV,CAAiB,QAAjB,CAA2BP,SAA3B,CAAX,CACA,KAAKM,GAAL,CAASE,KAAT,CAAeL,aAAf,EAAgC,SAAhC,CACA,KAAKG,GAAL,CAASG,KAAT,CAAiBR,OAAO,CAACS,CAAzB,CACA,KAAKJ,GAAL,CAASK,MAAT,CAAkBV,OAAO,CAACW,CAA1B,CAEA,GAAM5B,CAAAA,EAAE,CAAG,KAAKsB,GAAhB,CAEA,GAAMO,CAAAA,OAAO,CAAG3C,CAAC,CAAC4C,KAAF,CAAQC,MAAR,CAAe,CAC7BC,KAAK,CAAE,eAACjC,UAAD,QAAgBA,CAAAA,UAAU,CAACE,QAAX,GAAsBC,WAAtB,CAAkC+B,WAAlC,CAA8CjC,EAA9C,CAAhB,EADsB,CAE7BkC,KAAK,CAAE,eAACnC,UAAD,CAAgB,CACrBA,UAAU,CAACoC,QAAX,CAAoB,KAApB,EACA,MAAO,CAAA,KAAP,CACD,CAL4B,CAM7BC,QAAQ,CAAE,kBAACrC,UAAD,QAAgBD,CAAAA,eAAe,CAACC,UAAD,CAAaC,EAAb,CAA/B,EANmB,CAAf,CAAhB,CASA,KAAKqC,cAAL,CAAsB,GAAIR,CAAAA,OAAJ,EAAtB,CACA,kFACA,KAAKS,QAAL,CAAgBjD,UAAU,CAAC,KAAKiC,GAAN,CAA1B,CACA,KAAKiB,KAAL,GAEA,GAAI,KAAK7B,KAAL,CAAW8B,eAAf,CAAgC,CAC9B,KAAKC,SAAL,GACD,CACD,KAAKC,YAAL,GACA,KAAKC,kBAAL,CAAwB,KAAKC,eAAL,CAAqB,KAAKlC,KAA1B,CAAxB,EACD,CAxDuB,sBA0DxB,gBAAOA,KAAP,CAAc,CACZ,MAAOA,CAAAA,KAAK,CAAC1B,GAAN,EAAa,GAApB,CACD,CA5DuB,yBA8DxB,mBAAU0B,KAAV,CAAiB,CACf,MAAOA,CAAAA,KAAK,CAACmC,MAAN,EAAgB,EAAvB,CACD,CAhEuB,0BAkExB,oBAAWnC,KAAX,CAAkB,CAChB,MAAOA,CAAAA,KAAK,CAACoC,OAAN,EAAiB,EAAxB,CACD,CApEuB,6BAsExB,uBAAcpC,KAAd,CAAqB,CACnB,MAAOA,CAAAA,KAAK,CAACqC,UAAN,EAAoB,IAA3B,CACD,CAxEuB,uBA0ExB,iBAAQrC,KAAR,CAAe,CACb,MAAOA,CAAAA,KAAK,CAACsC,IAAN,EAAc,EAArB,CACD,CA5EuB,+BA8ExB,yBAAgBtC,KAAhB,CAAuB,CACrB,MAAO,CACLqC,UAAU,CAAE,KAAKE,aAAL,CAAmBvC,KAAnB,CADP,CAELoC,OAAO,CAAE,KAAKI,UAAL,CAAgBxC,KAAhB,CAFJ,CAGLmC,MAAM,CAAE,KAAKM,SAAL,CAAezC,KAAf,CAHH,CAILsC,IAAI,CAAE,KAAKI,OAAL,CAAa1C,KAAb,CAJD,CAKL1B,GAAG,CAAE,KAAKqE,MAAL,CAAY3C,KAAZ,CALA,CAML4C,QAAQ,CAAE5C,KAAK,CAAC4C,QANX,CAAP,CAQD,CAvFuB,yCAyFxB,mCAA0BC,SAA1B,CAAmD,CACjD,GAAMC,CAAAA,YAAY,CAAG,KAAK9C,KAA1B,CACA,GAAM+C,CAAAA,gBAAgB,CAAG,KAAKb,eAAL,CAAqBW,SAArB,CAAzB,CAEA,KAAKG,qBAAL,CAA2BD,gBAAgB,CAACH,QAA5C,EAEA,GAAMK,CAAAA,gBAAgB,CAAGF,gBAAgB,CAACZ,MAAjB,GAA4BW,YAAY,CAACX,MAAlE,CACA,GAAMe,CAAAA,cAAc,CAAGH,gBAAgB,CAACT,IAAjB,GAA0BQ,YAAY,CAACR,IAA9D,CAEA,GAAIW,gBAAgB,EAAIC,cAAxB,CAAwC,CACtC,KAAKC,mBAAL,CAAyBJ,gBAAgB,CAACZ,MAA1C,CAAkDY,gBAAgB,CAACT,IAAnE,EACD,CAED,GAAIS,gBAAgB,CAACzE,GAAjB,GAAyBwE,YAAY,CAACxE,GAA1C,CAA+C,CAC7C,KAAK8E,gBAAL,CAAsBL,gBAAgB,CAACzE,GAAvC,EACD,CAEF,CAED;AACF;AACA,KA9G0B,kCA+GxB,4BAAmB0B,KAAnB,CAAkC,CAChC,KAAKmD,mBAAL,CAAyBnD,KAAK,CAACmC,MAA/B,CAAuCnC,KAAK,CAACsC,IAA7C,EACA,KAAKU,qBAAL,CAA2BhD,KAAK,CAAC4C,QAAjC,EACA,KAAKQ,gBAAL,CAAsBpD,KAAK,CAAC1B,GAA5B,EACD,CAED;AACF;AACA,KAvH0B,mCAwHxB,6BAAoB6D,MAApB,CAAoCG,IAApC,CAAyD,CACvD,GAAIH,MAAJ,CAAY,CACV,KAAKP,QAAL,CAAcO,MAAd,CAAqBA,MAArB,CAA6BG,IAA7B,EACD,CACF,CAED;AACF;AACA,KAhI0B,qCAiIxB,+BAAsBM,QAAtB,CAA8C,CAC5C,GAAIA,QAAJ,CAAc,CACZ,KAAKhB,QAAL,CAAcgB,QAAd,CAAuBA,QAAvB,EACD,CACF,CAED;AACF;AACA,KAzI0B,gCA0IxB,0BAAiBS,OAAjB,CAAwC,CACtC,GAAIA,OAAJ,CAAa,CACX,KAAKzB,QAAL,CAActD,GAAd,CAAkB+E,OAAlB,EACD,CACF,CA9IuB,oCAgJxB,+BAA6B,CAC3BjE,eAAe,CAAC,KAAKY,KAAL,CAAWC,OAAX,CAAmB/B,GAApB,CAAyB,KAAK0C,GAA9B,CAAf,CACD,CAlJuB,yBAoJxB,oBAAkB,CAChB,GAAM0C,CAAAA,MAAM,CAAG,KAAKtD,KAAL,CAAWsD,MAA1B,CACA,GAAMC,CAAAA,IAAI,CAAGrF,GAAG,CAACoF,MAAD,CAAS,KAAKtD,KAAL,CAAWwD,kBAApB,CAAhB,CACA,GAAMC,CAAAA,IAAI,CAAGvF,GAAG,CAACoF,MAAD,CAAS,KAAKtD,KAAL,CAAW0D,iBAApB,CAAhB,CACA,GAAMC,CAAAA,EAAE,CAAG,CAAE9D,GAAG,CAAEvB,GAAG,CAACiF,IAAD,CAAV,CAAkBzD,GAAG,CAAExB,GAAG,CAACmF,IAAD,CAA1B,CAAX,CACA,GAAMG,CAAAA,EAAE,CAAG,CAAE/D,GAAG,CAAExB,GAAG,CAACkF,IAAD,CAAV,CAAkBzD,GAAG,CAAEzB,GAAG,CAACoF,IAAD,CAA1B,CAAX,CAEA,GAAI9D,oBAAoB,CAACgE,EAAD,CAApB,EAA4BhE,oBAAoB,CAACiE,EAAD,CAApD,CAA0D,CACxD,OACD,CAED,KAAK5D,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuB6D,SAAvB,CAAiCvD,CAAC,CAACqF,YAAF,CAAerF,CAAC,CAACsF,MAAF,CAASF,EAAT,CAAf,CAA6BpF,CAAC,CAACsF,MAAF,CAASH,EAAT,CAA7B,CAAjC,EACD,CAhKuB,kCAkKxB,6BAA2B,CACzB,KAAK3D,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuB6F,cAAvB,GACA,GAAI,KAAK/D,KAAL,CAAWgE,iBAAf,CAAkC,CAChC,KAAKjC,SAAL,GACD,CACD,KAAKF,KAAL,GACD,CAxKuB,qCA0KxB,gCAAiC,CAC/B,MAAO,KAAP,CACD,CA5KuB,4BA8KxB,uBAAqB,iBACnB,GAAMxC,CAAAA,UAAe,CAAG,KAAKW,KAAL,CAAWC,OAAX,CAAmB/B,GAA3C,CACAmB,UAAU,CAAC4E,EAAX,CAAc,WAAd,CAA2B,iBAAM,CAAA,MAAI,CAACpC,KAAL,EAAN,EAA3B,EACAxC,UAAU,CAAC4E,EAAX,CAAc,SAAd,CAAyB,iBAAM,CAAA,MAAI,CAACpC,KAAL,EAAN,EAAzB,EACA,GAAIxC,UAAU,CAACa,OAAX,CAAmBC,aAAnB,EAAoC3B,CAAC,CAAC4B,OAAF,CAAUC,KAAlD,CAAyD,CACvDhB,UAAU,CAAC4E,EAAX,CAAc,UAAd,CAA0B,KAAKC,YAA/B,CAA6C,IAA7C,EACD,CACF,CArLuB,4BAwLxB,sBAAaC,CAAb,CAAwC,CACtC,GAAMC,CAAAA,KAAK,CAAG,KAAKpE,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBmG,YAAvB,CAAoCF,CAAC,CAACG,IAAtC,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,KAAKvE,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CACIsG,gBADJ,CACqBL,CAAC,CAACM,MADvB,EAEIC,WAFJ,CAEgB,CAACN,KAFjB,EAGIO,QAHJ,CAGa,KAAK3E,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuB0G,cAAvB,EAHb,CAAf,CAKA,GAAIpG,CAAC,CAACkC,OAAF,CAAUmE,YAAd,CAA4B,CAC1BrG,CAAC,CAACkC,OAAF,CAAUmE,YAAV,CAAuB,KAAKjE,GAA5B,CAAiC2D,MAAjC,CAAyCH,KAAzC,EACD,CAFD,IAEO,CACL,KAAKxD,GAAL,CAASE,KAAT,CAAetC,CAAC,CAACkC,OAAF,CAAUoE,SAAzB,YACOtG,CAAC,CAACkC,OAAF,CAAUqE,kBAAV,CAA6BR,MAA7B,CADP,mBACqDH,KADrD,MAED,CACF,CArMuB,qBAuMxB,gBAAc,CACZ,GAAMY,CAAAA,OAAO,CAAG,KAAKhF,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuB+G,0BAAvB,CAAkD,CAAC,CAAD,CAAI,CAAJ,CAAlD,CAAhB,CACAzG,CAAC,CAACkC,OAAF,CAAUwE,WAAV,CAAsB,KAAKtE,GAA3B,CAAgCoE,OAAhC,EAEA,GAAMG,CAAAA,IAAI,CAAG,KAAKnF,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBsC,OAAvB,EAAb,CAEA,GAAI,KAAKoB,QAAL,CAAcwD,MAAd,GAAyBD,IAAI,CAACnE,CAAlC,CAAqC,CACnC,KAAKJ,GAAL,CAASG,KAAT,CAAiB,KAAKa,QAAL,CAAcwD,MAAd,CAAuBD,IAAI,CAACnE,CAA7C,CACD,CACD,GAAI,KAAKY,QAAL,CAAcyD,OAAd,GAA0BF,IAAI,CAACjE,CAAnC,CAAsC,CACpC,KAAKN,GAAL,CAASK,MAAT,CAAkB,KAAKW,QAAL,CAAcyD,OAAd,CAAwBF,IAAI,CAACjE,CAA/C,CACD,CAED,GAAI,KAAKU,QAAL,EAAiB,CAAC,KAAK0D,MAAvB,EAAiC,CAAC,KAAKtF,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBqH,UAA7D,CAAyE,CACvE,KAAKD,MAAL,CAAc9G,CAAC,CAACgH,IAAF,CAAOC,gBAAP,CAAwB,KAAKC,MAA7B,CAAqC,IAArC,CAAd,CACD,CAED,KAAKA,MAAL,GACD,CAzNuB,sBA2NxB,iBAAe,CACb,GAAMC,CAAAA,CAAC,CAAG,KAAK/D,QAAL,CAAcgE,EAAxB,CACA,GAAMT,CAAAA,IAAI,CAAG,KAAKnF,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBsC,OAAvB,EAAb,CAEA,GAAMqF,CAAAA,YAAY,CAAG,KAAK7F,KAAL,CAAW1B,GAAX,GAAmBwH,SAAnB,CACK,CADL,CAEK,KAAKnD,MAAL,CAAY,KAAK3C,KAAjB,CAF1B,CAIA,GAAMoC,CAAAA,OAAO,CAAG,KAAKpC,KAAL,CAAWoC,OAAX,GAAuB0D,SAAvB,CACM,KAAK9F,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBsE,UAAvB,EADN,CAEM,KAAKA,UAAL,CAAgB,KAAKxC,KAArB,CAFtB,CAIA,GAAM+F,CAAAA,CAAC,CAAG,EAAIC,IAAI,CAACC,GAAL,CACZ,CADY,CAEZD,IAAI,CAAC1H,GAAL,CAAS,CAAT,CAAY0H,IAAI,CAAC3H,GAAL,CAAS+D,OAAO,CAAG,KAAKpC,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuBgI,OAAvB,EAAnB,CAAqD,EAArD,CAAZ,EAAwE,CAF5D,CAAd,CAKA,GAAMC,CAAAA,QAAQ,CAAGR,CAAC,CAAG,CAArB,CACA,GAAMS,CAAAA,OAAO,CAAG,KAAKpG,KAAL,CAAWC,OAAX,CAAmB/B,GAAnB,CAAuB0G,cAAvB,EAAhB,CACA,GAAMyB,CAAAA,OAAO,CAAGD,OAAO,CAACpF,CAAR,CAAYmF,QAA5B,CACA,GAAMG,CAAAA,OAAO,CAAGF,OAAO,CAAClF,CAAR,CAAYiF,QAA5B,CACA,GAAMI,CAAAA,MAAM,CAAG,KAAKvG,KAAL,CAAW0D,iBAA1B,CACA,GAAM8C,CAAAA,MAAM,CAAG,KAAKxG,KAAL,CAAWwD,kBAA1B,CACA,GAAMiD,CAAAA,YAAY,CAAG,KAAKzG,KAAL,CAAW0G,kBAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACpH,QAAP,CAAgBmH,CAAhB,CAAf,EAAjB,CAEA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,QAAS3I,CAAAA,MAAM,CAAC2I,GAAD,CAAM,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKlB,SAAV,EAAP,CAAf,EAAxB,CAEA,GAAMmB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QAAa/I,CAAAA,MAAM,CAAC+I,OAAD,CAAU,SAACC,MAAD,CAASJ,GAAT,QAChD7I,CAAAA,GAAG,CAAC4I,eAAe,CAACC,GAAD,CAAhB,CAAuB,SAACK,IAAD,QAAU,CAClCpB,IAAI,CAACqB,KAAL,CAAWD,IAAI,CAAC,CAAD,CAAf,CADkC,CAElCpB,IAAI,CAACqB,KAAL,CAAWD,IAAI,CAAC,CAAD,CAAf,CAFkC,CAGlCpB,IAAI,CAAC3H,GAAL,CAAS+I,IAAI,CAAC,CAAD,CAAb,CAAkBvB,YAAlB,CAHkC,CAIlCuB,IAAI,CAAC,CAAD,CAJ8B,CAAV,EAAvB,CAAH,CAKGE,MALH,CAKUH,MALV,CADgD,EAAV,CAOtC,EAPsC,CAAnB,EAArB,CAUA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACjE,MAAD,CAASjE,UAAT,CAAqBwH,MAArB,QAAgC1I,CAAAA,MAAM,CAACmF,MAAD,CAAS,SAACkE,IAAD,CAAOC,KAAP,CAAiB,CACvF,GAAM3D,CAAAA,MAAM,CAAG,CAACyC,MAAM,CAACkB,KAAD,CAAP,CAAgBjB,MAAM,CAACiB,KAAD,CAAtB,CAAf,CACA,GAAItI,oBAAoB,CAAC2E,MAAD,CAAxB,CAAkC,CAAE;AAClC,MAAO0D,CAAAA,IAAP,CACD,CAED,GAAMZ,CAAAA,CAAC,CAAGvH,UAAU,CAACqI,sBAAX,CAAkC5D,MAAlC,CAAV,CAEA,GAAI,CAAC6C,QAAQ,CAACC,CAAD,CAAIC,MAAJ,CAAb,CAA0B,CACxB,MAAOW,CAAAA,IAAP,CACD,CAED,GAAMxG,CAAAA,CAAC,CAAGgF,IAAI,CAAC2B,KAAL,CAAW,CAACf,CAAC,CAAC5F,CAAF,CAAMqF,OAAP,EAAkBF,QAA7B,EAAyC,CAAnD,CACA,GAAMjF,CAAAA,CAAC,CAAG8E,IAAI,CAAC2B,KAAL,CAAW,CAACf,CAAC,CAAC1F,CAAF,CAAMoF,OAAP,EAAkBH,QAA7B,EAAyC,CAAnD,CAEAqB,IAAI,CAACtG,CAAD,CAAJ,CAAUsG,IAAI,CAACtG,CAAD,CAAJ,EAAW,EAArB,CACA,GAAMkG,CAAAA,IAAI,CAAGI,IAAI,CAACtG,CAAD,CAAJ,CAAQF,CAAR,CAAb,CAEA,GAAM4G,CAAAA,GAAG,CAAGnB,YAAY,CAACgB,KAAD,CAAxB,CACA,GAAMI,CAAAA,CAAC,CAAGD,GAAG,CAAG7B,CAAhB,CAEA,GAAI,CAACqB,IAAL,CAAW,CACTI,IAAI,CAACtG,CAAD,CAAJ,CAAQF,CAAR,EAAa,CAAC4F,CAAC,CAAC5F,CAAH,CAAM4F,CAAC,CAAC1F,CAAR,CAAW2G,CAAX,CAAc,CAAd,CAAb,CACD,CAFD,IAEO,CACLT,IAAI,CAAC,CAAD,CAAJ,CAAU,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAoBR,CAAC,CAAC5F,CAAF,CAAM6G,CAA3B,GAAiCT,IAAI,CAAC,CAAD,CAAJ,CAAUS,CAA3C,CAAV,CAAyD;AACzDT,IAAI,CAAC,CAAD,CAAJ,CAAU,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAoBR,CAAC,CAAC1F,CAAF,CAAM2G,CAA3B,GAAiCT,IAAI,CAAC,CAAD,CAAJ,CAAUS,CAA3C,CAAV,CAAyD;AACzDT,IAAI,CAAC,CAAD,CAAJ,EAAWS,CAAX,CAAc;AACdT,IAAI,CAAC,CAAD,CAAJ,EAAW,CAAX,CACD,CAED,MAAOI,CAAAA,IAAP,CACD,CA/B8D,CA+B5D,EA/B4D,CAAtC,EAAzB,CAiCA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAM,IAAItJ,CAAAA,CAAC,CAACuJ,MAAN,CAAavJ,CAAC,CAACiJ,KAAF,CAAQ,CAAC,CAAC9B,CAAF,CAAK,CAACA,CAAN,CAAR,CAAb,CAAgCR,IAAI,CAAC6C,GAAL,CAAS,CAACrC,CAAD,CAAIA,CAAJ,CAAT,CAAhC,CAAN,EAAlB,CAEA,GAAMsC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAC3E,MAAD,CAASjE,UAAT,QAAwB4H,CAAAA,YAAY,CAC1DM,gBAAgB,CACdjE,MADc,CAEdjE,UAFc,CAGdyI,SAAS,CAACzI,UAAD,CAHK,CAD0C,CAApC,EAA1B,CAQA,GAAM6I,CAAAA,IAAI,CAAGD,iBAAiB,CAAC,KAAKjI,KAAL,CAAWsD,MAAZ,CAAoB,KAAKtD,KAAL,CAAWC,OAAX,CAAmB/B,GAAvC,CAA9B,CAEA,KAAK0D,QAAL,CAAcuG,KAAd,GACA,KAAKvG,QAAL,CAAcsG,IAAd,CAAmBA,IAAnB,EAAyBE,IAAzB,CAA8B,KAAK7F,aAAL,CAAmB,KAAKvC,KAAxB,CAA9B,EAEA,KAAKsF,MAAL,CAAc,IAAd,CAEA,GAAI,KAAKtF,KAAL,CAAWqI,aAAX,EAA4B,KAAKrI,KAAL,CAAWsD,MAAvC,EAAiD,KAAKtD,KAAL,CAAWsD,MAAX,CAAkBpE,MAAlB,CAA2B,CAAhF,CAAmF,CACjF,KAAKc,KAAL,CAAWqI,aAAX,CACElK,MAAM,CAAC+J,IAAD,CAAO,SAACI,KAAD,CAAQb,KAAR,CAAkB,CAC7Ba,KAAK,CAAChK,GAAN,CAAYmJ,KAAK,CAAC,CAAD,CAAL,CAAWa,KAAK,CAAChK,GAAjB,CAAuBmJ,KAAK,CAAC,CAAD,CAA5B,CAAkCa,KAAK,CAAChK,GAApD,CACAgK,KAAK,CAACjK,GAAN,CAAYoJ,KAAK,CAAC,CAAD,CAAL,CAAWa,KAAK,CAACjK,GAAjB,CAAuBoJ,KAAK,CAAC,CAAD,CAA5B,CAAkCa,KAAK,CAACjK,GAApD,CACA,MAAOiK,CAAAA,KAAP,CACD,CAJK,CAIH,CAAEjK,GAAG,CAAEkK,QAAP,CAAiBjK,GAAG,CAAE,CAACiK,QAAvB,CAJG,CADR,EAOD,CACF,CA7TuB,sBAgUxB,iBAAwB,CACtB,MAAO,KAAP,CACD,CAlUuB,0BAA4B9J,QAA5B,SACjB+J,SADiB,CACL,CACjBlF,MAAM,CAAE1E,SAAS,CAAC6J,KAAV,CAAgBC,UADP,CAEjBlF,kBAAkB,CAAE5E,SAAS,CAAC+J,IAAV,CAAeD,UAFlB,CAGjBhF,iBAAiB,CAAE9E,SAAS,CAAC+J,IAAV,CAAeD,UAHjB,CAIjBhC,kBAAkB,CAAE9H,SAAS,CAAC+J,IAAV,CAAeD,UAJlB,CAKjB5G,eAAe,CAAElD,SAAS,CAACgK,IALV,CAMjB5E,iBAAiB,CAAEpF,SAAS,CAACgK,IANZ,CAOjBP,aAAa,CAAEzJ,SAAS,CAAC+J,IAPR,CAQjB,0CACArK,GAAG,CAAEM,SAAS,CAACiK,MATE,CAUjB1G,MAAM,CAAEvD,SAAS,CAACiK,MAVD,CAWjBzG,OAAO,CAAExD,SAAS,CAACiK,MAXF,CAYjBxG,UAAU,CAAEzD,SAAS,CAACiK,MAZL,CAajBvG,IAAI,CAAE1D,SAAS,CAACiK,MAbC,CAcjBjG,QAAQ,CAAEhE,SAAS,CAACkK,MAdH,CADK,QAA1B","sourcesContent":["import React from 'react';\nimport map from 'lodash.map';\nimport reduce from 'lodash.reduce';\nimport filter from 'lodash.filter';\nimport min from 'lodash.min';\nimport max from 'lodash.max';\nimport isNumber from 'lodash.isnumber';\nimport L from 'leaflet';\nimport { MapLayer, withLeaflet } from 'react-leaflet';\nimport simpleheat from 'simpleheat';\nimport PropTypes from 'prop-types';\n\nexport type LngLat = {\n  lng: number;\n  lat: number;\n}\n\nexport type Point = {\n  x: number;\n  y: number;\n}\n\nexport type Bounds = {\n  contains: (latLng: LngLat) => boolean;\n}\n\nexport type Pane = {\n  appendChild: (element: Object) => void;\n}\n\nexport type Panes = {\n  overlayPane: Pane;\n}\n\nexport type Map = {\n  layerPointToLatLng: (lngLat: Point) => LngLat;\n  latLngToLayerPoint: (lngLat: LngLat) => Point;\n  on: (event: string, handler: () => void) => void;\n  getBounds: () => Bounds;\n  getPanes: () => Panes;\n  invalidateSize: () => void;\n  options: Object;\n}\n\nexport type LeafletZoomEvent = {\n  zoom: number;\n  center: Object;\n}\n\nfunction isInvalid(num: number): boolean {\n  return !isNumber(num) && !num;\n}\n\nfunction isValid(num: number): boolean {\n  return !isInvalid(num);\n}\n\nfunction isValidLatLngArray(arr: Array<number>): boolean {\n  return filter(arr, isValid).length === arr.length;\n}\n\nfunction isInvalidLatLngArray(arr: Array<number>): boolean {\n  return !isValidLatLngArray(arr);\n}\n\nfunction safeRemoveLayer(leafletMap: Map, el): void {\n  const { overlayPane } = leafletMap.getPanes();\n  if (overlayPane && overlayPane.contains(el)) {\n    overlayPane.removeChild(el);\n  }\n}\n\nfunction shouldIgnoreLocation(loc: LngLat): boolean {\n  return isInvalid(loc.lng) || isInvalid(loc.lat);\n}\n\nexport default withLeaflet(class HeatmapLayer extends MapLayer {\n  static propTypes = {\n    points: PropTypes.array.isRequired,\n    longitudeExtractor: PropTypes.func.isRequired,\n    latitudeExtractor: PropTypes.func.isRequired,\n    intensityExtractor: PropTypes.func.isRequired,\n    fitBoundsOnLoad: PropTypes.bool,\n    fitBoundsOnUpdate: PropTypes.bool,\n    onStatsUpdate: PropTypes.func,\n    /* props controlling heatmap generation */\n    max: PropTypes.number,\n    radius: PropTypes.number,\n    maxZoom: PropTypes.number,\n    minOpacity: PropTypes.number,\n    blur: PropTypes.number,\n    gradient: PropTypes.object\n  };\n\n  createLeafletElement() {\n    return null;\n  }\n\n  componentDidMount(): void {\n    const canAnimate = this.props.leaflet.map.options.zoomAnimation && L.Browser.any3d;\n    const zoomClass = `leaflet-zoom-${canAnimate ? 'animated' : 'hide'}`;\n    const mapSize = this.props.leaflet.map.getSize();\n    const transformProp = L.DomUtil.testProp(\n      ['transformOrigin', 'WebkitTransformOrigin', 'msTransformOrigin']\n    );\n\n    this._el = L.DomUtil.create('canvas', zoomClass);\n    this._el.style[transformProp] = '50% 50%';\n    this._el.width = mapSize.x;\n    this._el.height = mapSize.y;\n\n    const el = this._el;\n\n    const Heatmap = L.Layer.extend({\n      onAdd: (leafletMap) => leafletMap.getPanes().overlayPane.appendChild(el),\n      addTo: (leafletMap) => {\n        leafletMap.addLayer(this);\n        return this;\n      },\n      onRemove: (leafletMap) => safeRemoveLayer(leafletMap, el)\n    });\n\n    this.leafletElement = new Heatmap();\n    super.componentDidMount();\n    this._heatmap = simpleheat(this._el);\n    this.reset();\n\n    if (this.props.fitBoundsOnLoad) {\n      this.fitBounds();\n    }\n    this.attachEvents();\n    this.updateHeatmapProps(this.getHeatmapProps(this.props));\n  }\n\n  getMax(props) {\n    return props.max || 3.0;\n  }\n\n  getRadius(props) {\n    return props.radius || 30;\n  }\n\n  getMaxZoom(props) {\n    return props.maxZoom || 18;\n  }\n\n  getMinOpacity(props) {\n    return props.minOpacity || 0.01;\n  }\n\n  getBlur(props) {\n    return props.blur || 15;\n  }\n\n  getHeatmapProps(props) {\n    return {\n      minOpacity: this.getMinOpacity(props),\n      maxZoom: this.getMaxZoom(props),\n      radius: this.getRadius(props),\n      blur: this.getBlur(props),\n      max: this.getMax(props),\n      gradient: props.gradient\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Object): void {\n    const currentProps = this.props;\n    const nextHeatmapProps = this.getHeatmapProps(nextProps);\n\n    this.updateHeatmapGradient(nextHeatmapProps.gradient);\n\n    const hasRadiusUpdated = nextHeatmapProps.radius !== currentProps.radius;\n    const hasBlurUpdated = nextHeatmapProps.blur !== currentProps.blur;\n\n    if (hasRadiusUpdated || hasBlurUpdated) {\n      this.updateHeatmapRadius(nextHeatmapProps.radius, nextHeatmapProps.blur);\n    }\n\n    if (nextHeatmapProps.max !== currentProps.max) {\n      this.updateHeatmapMax(nextHeatmapProps.max);\n    }\n\n  }\n\n  /**\n   * Update various heatmap properties like radius, gradient, and max\n   */\n  updateHeatmapProps(props: Object) {\n    this.updateHeatmapRadius(props.radius, props.blur);\n    this.updateHeatmapGradient(props.gradient);\n    this.updateHeatmapMax(props.max);\n  }\n\n  /**\n   * Update the heatmap's radius and blur (blur is optional)\n   */\n  updateHeatmapRadius(radius: number, blur: ?number): void {\n    if (radius) {\n      this._heatmap.radius(radius, blur);\n    }\n  }\n\n  /**\n   * Update the heatmap's gradient\n   */\n  updateHeatmapGradient(gradient: Object): void {\n    if (gradient) {\n      this._heatmap.gradient(gradient);\n    }\n  }\n\n  /**\n   * Update the heatmap's maximum\n   */\n  updateHeatmapMax(maximum: number): void {\n    if (maximum) {\n      this._heatmap.max(maximum);\n    }\n  }\n\n  componentWillUnmount(): void {\n    safeRemoveLayer(this.props.leaflet.map, this._el);\n  }\n\n  fitBounds(): void {\n    const points = this.props.points;\n    const lngs = map(points, this.props.longitudeExtractor);\n    const lats = map(points, this.props.latitudeExtractor);\n    const ne = { lng: max(lngs), lat: max(lats) };\n    const sw = { lng: min(lngs), lat: min(lats) };\n\n    if (shouldIgnoreLocation(ne) || shouldIgnoreLocation(sw)) {\n      return;\n    }\n\n    this.props.leaflet.map.fitBounds(L.latLngBounds(L.latLng(sw), L.latLng(ne)));\n  }\n\n  componentDidUpdate(): void {\n    this.props.leaflet.map.invalidateSize();\n    if (this.props.fitBoundsOnUpdate) {\n      this.fitBounds();\n    }\n    this.reset();\n  }\n\n  shouldComponentUpdate(): boolean {\n    return true;\n  }\n\n  attachEvents(): void {\n    const leafletMap: Map = this.props.leaflet.map;\n    leafletMap.on('viewreset', () => this.reset());\n    leafletMap.on('moveend', () => this.reset());\n    if (leafletMap.options.zoomAnimation && L.Browser.any3d) {\n      leafletMap.on('zoomanim', this._animateZoom, this);\n    }\n  }\n\n\n  _animateZoom(e: LeafletZoomEvent): void {\n    const scale = this.props.leaflet.map.getZoomScale(e.zoom);\n    const offset = this.props.leaflet.map\n                      ._getCenterOffset(e.center)\n                      ._multiplyBy(-scale)\n                      .subtract(this.props.leaflet.map._getMapPanePos());\n\n    if (L.DomUtil.setTransform) {\n      L.DomUtil.setTransform(this._el, offset, scale);\n    } else {\n      this._el.style[L.DomUtil.TRANSFORM] =\n          `${L.DomUtil.getTranslateString(offset)} scale(${scale})`;\n    }\n  }\n\n  reset(): void {\n    const topLeft = this.props.leaflet.map.containerPointToLayerPoint([0, 0]);\n    L.DomUtil.setPosition(this._el, topLeft);\n\n    const size = this.props.leaflet.map.getSize();\n\n    if (this._heatmap._width !== size.x) {\n      this._el.width = this._heatmap._width = size.x;\n    }\n    if (this._heatmap._height !== size.y) {\n      this._el.height = this._heatmap._height = size.y;\n    }\n\n    if (this._heatmap && !this._frame && !this.props.leaflet.map._animating) {\n      this._frame = L.Util.requestAnimFrame(this.redraw, this);\n    }\n\n    this.redraw();\n  }\n\n  redraw(): void {\n    const r = this._heatmap._r;\n    const size = this.props.leaflet.map.getSize();\n\n    const maxIntensity = this.props.max === undefined\n                            ? 1\n                            : this.getMax(this.props);\n\n    const maxZoom = this.props.maxZoom === undefined\n                        ? this.props.leaflet.map.getMaxZoom()\n                        : this.getMaxZoom(this.props);\n\n    const v = 1 / Math.pow(\n      2,\n      Math.max(0, Math.min(maxZoom - this.props.leaflet.map.getZoom(), 12)) / 2\n    );\n\n    const cellSize = r / 2;\n    const panePos = this.props.leaflet.map._getMapPanePos();\n    const offsetX = panePos.x % cellSize;\n    const offsetY = panePos.y % cellSize;\n    const getLat = this.props.latitudeExtractor;\n    const getLng = this.props.longitudeExtractor;\n    const getIntensity = this.props.intensityExtractor;\n\n    const inBounds = (p, bounds) => bounds.contains(p);\n\n    const filterUndefined = (row) => filter(row, c => c !== undefined);\n\n    const roundResults = (results) => reduce(results, (result, row) =>\n      map(filterUndefined(row), (cell) => [\n        Math.round(cell[0]),\n        Math.round(cell[1]),\n        Math.min(cell[2], maxIntensity),\n        cell[3]\n      ]).concat(result),\n      []\n    );\n\n    const accumulateInGrid = (points, leafletMap, bounds) => reduce(points, (grid, point) => {\n      const latLng = [getLat(point), getLng(point)];\n      if (isInvalidLatLngArray(latLng)) { //skip invalid points\n        return grid;\n      }\n\n      const p = leafletMap.latLngToContainerPoint(latLng);\n\n      if (!inBounds(p, bounds)) {\n        return grid;\n      }\n\n      const x = Math.floor((p.x - offsetX) / cellSize) + 2;\n      const y = Math.floor((p.y - offsetY) / cellSize) + 2;\n\n      grid[y] = grid[y] || [];\n      const cell = grid[y][x];\n\n      const alt = getIntensity(point);\n      const k = alt * v;\n\n      if (!cell) {\n        grid[y][x] = [p.x, p.y, k, 1];\n      } else {\n        cell[0] = (cell[0] * cell[2] + p.x * k) / (cell[2] + k); // x\n        cell[1] = (cell[1] * cell[2] + p.y * k) / (cell[2] + k); // y\n        cell[2] += k; // accumulated intensity value\n        cell[3] += 1;\n      }\n\n      return grid;\n    }, []);\n\n    const getBounds = () => new L.Bounds(L.point([-r, -r]), size.add([r, r]));\n\n    const getDataForHeatmap = (points, leafletMap) => roundResults(\n        accumulateInGrid(\n          points,\n          leafletMap,\n          getBounds(leafletMap)\n        )\n      );\n\n    const data = getDataForHeatmap(this.props.points, this.props.leaflet.map);\n\n    this._heatmap.clear();\n    this._heatmap.data(data).draw(this.getMinOpacity(this.props));\n\n    this._frame = null;\n\n    if (this.props.onStatsUpdate && this.props.points && this.props.points.length > 0) {\n      this.props.onStatsUpdate(\n        reduce(data, (stats, point) => {\n          stats.max = point[3] > stats.max ? point[3] : stats.max;\n          stats.min = point[3] < stats.min ? point[3] : stats.min;\n          return stats;\n        }, { min: Infinity, max: -Infinity })\n      );\n    }\n  }\n\n\n  render(): React.Element {\n    return null;\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}