{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\src\\\\components\\\\Charts\\\\TimeLineChart.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeLineChart = function TimeLineChart(props) {\n  var i = 0;\n  var labels = [];\n  var dataValue = [];\n\n  while (i < props.data.length) {\n    labels[i] = props.data[i].id;\n    dataValue[i] = props.data[i].counter;\n    i++;\n  }\n\n  var data = {\n    labels: labels,\n    datasets: [{\n      label: 'Tweets',\n      data: dataValue,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      width: 100,\n      height: 400,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TimeLineChart;\nexport default TimeLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeLineChart\");","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/src/components/Charts/TimeLineChart.js"],"names":["React","Line","TimeLineChart","props","i","labels","dataValue","data","length","id","counter","datasets","label","fill","borderColor","tension","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAU;AAC5B,MAAIC,CAAC,GAAC,CAAN;AACA,MAAIC,MAAM,GAAC,EAAX;AACA,MAAIC,SAAS,GAAC,EAAd;;AAGA,SAAMF,CAAC,GAACD,KAAK,CAACI,IAAN,CAAWC,MAAnB,EAA0B;AACtBH,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAUD,KAAK,CAACI,IAAN,CAAWH,CAAX,EAAcK,EAAxB;AACAH,IAAAA,SAAS,CAACF,CAAD,CAAT,GAAaD,KAAK,CAACI,IAAN,CAAWH,CAAX,EAAcM,OAA3B;AACAN,IAAAA,CAAC;AAEJ;;AAED,MAAMG,IAAI,GAAG;AACTF,IAAAA,MAAM,EAAGA,MADA;AAEXM,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,KAAK,EAAE,QADE;AAETL,MAAAA,IAAI,EAAED,SAFG;AAGTO,MAAAA,IAAI,EAAE,KAHG;AAITC,MAAAA,WAAW,EAAE,mBAJJ;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAD;AAFC,GAAb;AAWA,sBACI;AAAA,2BACI,QAAC,IAAD;AACX,MAAA,IAAI,EAAGR,IADI;AAEX,MAAA,KAAK,EAAE,GAFI;AAGX,MAAA,MAAM,EAAE,GAHG;AAIX,MAAA,OAAO,EAAE;AAAES,QAAAA,mBAAmB,EAAE;AAAvB;AAJE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAlCD;;KAAMd,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\n\r\nconst TimeLineChart = (props) =>{\r\n    var i=0\r\n    var labels=[]\r\n    var dataValue=[]\r\n    \r\n    \r\n    while(i<props.data.length){\r\n        labels[i]=props.data[i].id\r\n        dataValue[i]=props.data[i].counter\r\n        i++\r\n        \r\n    }\r\n    \r\n    const data = {\r\n        labels:  labels,\r\n      datasets: [{\r\n        label: 'Tweets',\r\n        data: dataValue,\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1\r\n      }]\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            <Line\r\n\tdata= {data}\r\n\twidth={100}\r\n\theight={400}\r\n\toptions={{ maintainAspectRatio: false }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeLineChart"]},"metadata":{},"sourceType":"module"}