{"ast":null,"code":"import _classCallCheck from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\WordCloud.js\";\nimport React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport Filters from './Filters/WordChartFilters';\nimport PreLoader from \"./preloader\";\nimport stopWords from \"../stopwords.json\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar WordCloud = /*#__PURE__*/function (_React$Component) {\n  _inherits(WordCloud, _React$Component);\n\n  var _super = _createSuper(WordCloud);\n\n  function WordCloud(props) {\n    var _this;\n\n    _classCallCheck(this, WordCloud);\n\n    _this = _super.call(this, props);\n\n    _this.handleQuery = function (temp) {\n      _this.setState({\n        data: temp.data\n      });\n\n      _this.state.data = temp.data;\n      _this.state.flagWord = temp.typeWord;\n\n      if (_this.state.flagWord === 0 || _this.state.flagWord === '0') {\n        _this.queryText();\n      } else if (_this.state.flagWord === 1 || _this.state.flagWord === '1') {\n        _this.queryTag();\n      } else {\n        _this.queryHashtag();\n      }\n\n      _this.state.flag = 1;\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryTag = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var flag = false;\n\n      while (i < _this.state.data.length) {\n        j = 0;\n\n        if (_this.state.data[i].tags !== undefined) {\n          while (j < _this.state.data[i].tags.tag_me.length) {\n            temp = _this.state.data[i].tags.tag_me[j].split(' : ')[0];\n            k = 0;\n            flag = false;\n\n            while (k < arrayWords.length) {\n              if (arrayWords[k] === temp) {\n                flag = true;\n                break;\n              }\n\n              k++;\n            }\n\n            if (flag === true) {\n              words[k].value++;\n            } else {\n              arrayWords.push(temp);\n              words.push({\n                text: temp,\n                value: 1\n              });\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryHashtag = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = [{\n        text: null,\n        value: 0\n      }];\n      var temp = null;\n      var arrayWords = [];\n      var flag = false;\n\n      while (i < _this.state.data.length) {\n        j = 0;\n\n        if (_this.state.data[i].twitter_entities.hashtags !== undefined) {\n          while (j < _this.state.data[i].twitter_entities.hashtags.length) {\n            temp = _this.state.data[i].twitter_entities.hashtags[j];\n            k = 0;\n            flag = false;\n\n            while (k < arrayWords.length) {\n              if (arrayWords[k] === temp) {\n                flag = true;\n                break;\n              }\n\n              k++;\n            }\n\n            if (flag === true) {\n              words[k].value++;\n            } else {\n              arrayWords.push(temp);\n              words.push({\n                text: temp,\n                value: 1\n              });\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.words = words;\n\n      _this.setState({\n        words: words\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.queryText = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var words = {\n        text: null,\n        value: 0\n      };\n      var temp = null;\n      var arrayWords = [];\n      var flag = false;\n\n      while (i < _this.state.data.length) {\n        j = 0; //check spacy not null\n\n        if (_this.state.data[i].spacy !== undefined) {\n          while (j < _this.state.data[i].spacy.processed_text.length) {\n            temp = _this.state.data[i].spacy.processed_text[j].split(\" \")[0]; //check word\n\n            if (_this.checkWord(temp) === false && _this.state.data[i].spacy.processed_text[j].split(\" \")[3] !== 'CCONJ') {\n              k = 0;\n              flag = false; //check if the word has already been counted  \n\n              if (arrayWords[temp] === undefined) {\n                words.text = temp;\n                words.value = 1;\n                arrayWords[temp] = _.cloneDeep(words);\n              } else {\n                arrayWords[temp].value++;\n              }\n            }\n\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      console.log(arrayWords);\n      _this.state.words = arrayWords;\n\n      _this.setState({\n        words: arrayWords\n      });\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.checkWord = function (temp) {\n      //check if is a character\n      if (temp.length === 1) {\n        return true;\n      } //check if string is a tag \n\n\n      if (temp[0] === '@') {\n        return true;\n      } //check if string is a number\n\n\n      if (!isNaN(temp)) {\n        return true;\n      } //chek if word is a stopword\n\n\n      var i = 0; //'zr' is the last word of stopwords.json\n\n      while (stopWords[i] !== 'zr') {\n        if (temp === stopWords[i]) {\n          return true;\n        }\n\n        i++;\n      } //Check if word startsm with https\n\n\n      var pattern = new RegExp('^(https?|ftp)://');\n\n      if (pattern.test(temp)) {\n        return true;\n      } //Check if word is an emoji\n\n\n      var regexExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\n      if (regexExp.test(temp)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.state = {\n      data: [],\n      words: [{\n        text: null,\n        value: null\n      }],\n      flag: 0,\n      flagWord: 0\n    };\n    return _this;\n  }\n\n  _createClass(WordCloud, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.db !== this.props.db) {\n        this.setState({\n          flag: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var renderContent = function renderContent() {\n        return /*#__PURE__*/_jsxDEV(Filters, {\n          parentCallback: _this2.handleQuery.bind(_this2),\n          db: _this2.props.db,\n          tweetsData: _this2.props.allTweetsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 19\n        }, _this2);\n      };\n\n      var body;\n      var temp = renderContent();\n      var filters;\n\n      if (temp !== null) {\n        filters = temp;\n      } else {\n        filters = /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 19\n        }, this);\n      }\n\n      if (this.state.flag > 0) {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CloudChart\",\n              id: \"wordChart\",\n              children: /*#__PURE__*/_jsxDEV(ReactWordcloud, {\n                words: this.state.words,\n                options: {\n                  fontFamily: 'monospace',\n                  rotations: 1,\n                  rotationAngles: [0],\n                  fontSizes: [20, 60]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this);\n      } else {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main users chart-page\",\n          id: \"skip-target\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CrowdPulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Word Cloud - \", this.props.mongodb, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 13\n            }, this), filters, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 13\n            }, this), body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"footer\",\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container footer--flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-start\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2021 \\xA9 Giovanni Tempesta \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return WordCloud;\n}(React.Component);\n\nexport default WordCloud;","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/src/components/WordCloud.js"],"names":["React","ReactWordcloud","Filters","PreLoader","stopWords","_","WordCloud","props","handleQuery","temp","setState","data","state","flagWord","typeWord","queryText","queryTag","queryHashtag","flag","i","j","k","words","text","value","arrayWords","length","tags","undefined","tag_me","split","push","twitter_entities","hashtags","spacy","processed_text","checkWord","cloneDeep","console","log","isNaN","pattern","RegExp","test","regexExp","prevProps","db","renderContent","bind","allTweetsData","body","filters","fontFamily","rotations","rotationAngles","fontSizes","mongodb","background","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport Filters from './Filters/WordChartFilters'\r\nimport PreLoader from \"./preloader\";\r\nimport stopWords from \"../stopwords.json\"\r\nimport _ from \"lodash\"; \r\n\r\nclass WordCloud extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          data:[],\r\n          words:[{\r\n            text:null,\r\n            value:null\r\n          }],\r\n          flag:0,\r\n          flagWord:0\r\n\r\n      }\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n    \r\n  handleQuery = (temp) =>{\r\n\r\n    this.setState({data:temp.data})\r\n    this.state.data = temp.data\r\n    this.state.flagWord = temp.typeWord;\r\n    \r\n    if(this.state.flagWord===0||this.state.flagWord==='0'){\r\n      this.queryText();\r\n    }else if(this.state.flagWord===1||this.state.flagWord==='1'){\r\n      this.queryTag();\r\n    }else{\r\n      this.queryHashtag();\r\n    }\r\n    this.state.flag=1;\r\n    this.setState({flag:1});\r\n    \r\n\r\n\r\n  }\r\n\r\n  queryTag = () =>{\r\n\r\n    var i = 0\r\n    var j = 0\r\n    var k = 0\r\n   \r\n    var words=[{\r\n        text:null,\r\n        value:0\r\n    }]\r\n\r\n    var temp = null\r\n\r\n    var arrayWords = []\r\n\r\n    var flag = false\r\n\r\n    \r\n    \r\n    while(i<this.state.data.length){\r\n      j=0;\r\n      if(this.state.data[i].tags!==undefined){\r\n        \r\n        while(j<this.state.data[i].tags.tag_me.length){\r\n          \r\n          temp=this.state.data[i].tags.tag_me[j].split(' : ')[0]\r\n          k=0;\r\n          flag=false;\r\n          while(k<arrayWords.length){\r\n            if(arrayWords[k]===temp){\r\n              flag=true;\r\n              break\r\n            }\r\n            k++\r\n          }\r\n    \r\n          if(flag===true){\r\n            words[k].value++\r\n          }else{\r\n            arrayWords.push(temp)\r\n            words.push({\r\n              text:temp,\r\n              value:1\r\n            })            \r\n      \r\n\r\n            \r\n          }    \r\n          j++;\r\n      \r\n        }\r\n      }\r\n\r\n    i++\r\n    }\r\n    \r\n    \r\n    this.state.words=words\r\n    this.setState({words:words})\r\n    \r\n    this.setState({flag:1})\r\n    \r\n\r\n  }\r\n\r\n  queryHashtag = () =>{\r\n\r\n    var i = 0\r\n    var j = 0\r\n    var k = 0\r\n   \r\n    var words=[{\r\n        text:null,\r\n        value:0\r\n    }]\r\n\r\n    var temp = null;\r\n\r\n    var arrayWords = [];\r\n\r\n    var flag = false;\r\n\r\n    \r\n\r\n    \r\n     \r\n    while(i<this.state.data.length){\r\n      j=0;\r\n\r\n      if(this.state.data[i].twitter_entities.hashtags!==undefined){\r\n        \r\n        while(j<this.state.data[i].twitter_entities.hashtags.length){\r\n          \r\n          temp=this.state.data[i].twitter_entities.hashtags[j]\r\n          k=0;\r\n          flag=false;\r\n          while(k<arrayWords.length){\r\n            if(arrayWords[k]===temp){\r\n              flag=true\r\n              break\r\n            }\r\n            k++\r\n          }\r\n    \r\n          if(flag===true){\r\n            words[k].value++\r\n          }else{\r\n            arrayWords.push(temp)\r\n            words.push({\r\n              text:temp,\r\n              value:1\r\n            })            \r\n\r\n            \r\n          }    \r\n          j++;\r\n      \r\n        }\r\n      }\r\n     \r\n     i++\r\n     \r\n    }\r\n    \r\n    this.state.words=words\r\n    this.setState({words:words})\r\n    \r\n    this.setState({flag:1})\r\n\r\n  }\r\n\r\n\r\n \r\n      queryText = () =>{\r\n\r\n        var i = 0\r\n        var j = 0\r\n        var k = 0\r\n       \r\n        var words={\r\n            text:null,\r\n            value:0\r\n        }\r\n\r\n        var temp = null\r\n\r\n        var arrayWords = []\r\n\r\n        var flag = false\r\n\r\n        \r\n\r\n       \r\n        while(i<this.state.data.length){\r\n          j=0;\r\n          //check spacy not null\r\n          if(this.state.data[i].spacy!==undefined){\r\n            while(j<this.state.data[i].spacy.processed_text.length){\r\n              temp=this.state.data[i].spacy.processed_text[j].split(\" \")[0];\r\n              //check word\r\n             if(this.checkWord(temp)===false&&this.state.data[i].spacy.processed_text[j].split(\" \")[3]!=='CCONJ'\r\n              ){\r\n                k=0;\r\n                flag = false;\r\n\r\n\r\n                //check if the word has already been counted  \r\n                if(arrayWords[temp]===undefined){\r\n                  words.text = temp;\r\n                  words.value = 1;\r\n                  arrayWords[temp] = _.cloneDeep(words)\r\n                }else{\r\n                  arrayWords[temp].value++\r\n                }\r\n\r\n  \r\n\r\n                \r\n\r\n              }               \r\n               \r\n              j++;\r\n            }\r\n          }\r\n\r\n         i++\r\n         \r\n        }\r\n        console.log(arrayWords)\r\n        this.state.words=arrayWords;\r\n        this.setState({words:arrayWords});\r\n        \r\n        this.setState({flag:1});\r\n\r\n      }\r\n   \r\n      checkWord = (temp) => {\r\n        \r\n        //check if is a character\r\n        if(temp.length===1){\r\n          return true;\r\n        }\r\n        //check if string is a tag \r\n        if(temp[0]==='@'){\r\n          return true\r\n        }\r\n    \r\n        //check if string is a number\r\n        if(!isNaN(temp)){\r\n          return true\r\n        }\r\n\r\n        //chek if word is a stopword\r\n        var i =0;\r\n        //'zr' is the last word of stopwords.json\r\n        while(stopWords[i]!=='zr'){\r\n          if(temp===stopWords[i]){\r\n            return true;\r\n          }\r\n          i++;\r\n        }\r\n\r\n        //Check if word startsm with https\r\n        \r\n        var pattern = new RegExp('^(https?|ftp)://');\r\n          if(pattern.test(temp)){\r\n          return true;\r\n        }\r\n\r\n        //Check if word is an emoji\r\n\r\n        const regexExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\r\n\r\n        if(regexExp.test(temp)){\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n        \r\n      }\r\n    \r\n      render () {\r\n        const renderContent = () => {\r\n          \r\n           return <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>;\r\n         \r\n          }\r\n        \r\n        var body;      \r\n        var temp = renderContent();\r\n        var filters;\r\n        \r\n        if(temp!==null){\r\n          filters=temp;\r\n        }else{\r\n          filters=<PreLoader/>\r\n        }\r\n        if(this.state.flag>0){\r\n          body =<div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"CloudChart\" id=\"wordChart\">\r\n            <ReactWordcloud words={this.state.words}       options={{\r\n              fontFamily: 'monospace',\r\n              rotations: 1,\r\n              rotationAngles: [0],\r\n              fontSizes: [20, 60],\r\n            }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Word Cloud - {this.props.mongodb} </h3>\r\n            <br/>\r\n            {filters}\r\n            \r\n            <br/>\r\n\r\n            {body}\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default WordCloud"]},"metadata":{},"sourceType":"module"}