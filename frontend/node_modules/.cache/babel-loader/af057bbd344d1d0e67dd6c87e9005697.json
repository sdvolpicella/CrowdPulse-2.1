{"ast":null,"code":"import _classCallCheck from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\39333\\\\desktop\\\\crowdpulse2.0-main\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchFilters.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport axios from 'axios'; //https://www.npmjs.com/package/react-tag-autocomplete\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchFilters = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchFilters, _React$Component);\n\n  var _super = _createSuper(SearchFilters);\n\n  function SearchFilters(props) {\n    var _this;\n\n    _classCallCheck(this, SearchFilters);\n\n    _this = _super.call(this, props);\n\n    _this.getTags = function () {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var data = _this.props.allTags.data;\n      var temp;\n      var tempSuggestion = [];\n      var strings = [];\n\n      while (i < data.length) {\n        j = 0;\n\n        if (data[i]._id !== undefined && data[i]._id !== null) {\n          while (j < data[i]._id.tag_me.length) {\n            temp = data[i]._id.tag_me[j].split(\" : \");\n\n            if (strings.indexOf(temp[0]) > -1) {} else {\n              tempSuggestion[k] = {\n                id: temp[1],\n                name: temp[0]\n              };\n              strings.push(temp[0]);\n            }\n\n            k++;\n            j++;\n          }\n        }\n\n        i++;\n      }\n\n      _this.state.suggestions = tempSuggestion;\n\n      _this.setState({\n        suggestions: tempSuggestion\n      });\n\n      _this.reactTags = /*#__PURE__*/React.createRef();\n    };\n\n    _this.sendData = function (tags) {\n      _this.props.parentCallback(tags);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tags: [],\n      suggestions: []\n    };\n\n    _this.getTags();\n\n    return _this;\n  }\n\n  _createClass(SearchFilters, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.mongodb !== this.props.mongodb) {\n        this.getTags();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var tags = this.state.tags.slice(0);\n      tags.splice(i, 1);\n      this.setState({\n        tags: tags\n      });\n      this.sendData(tags);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(tag) {\n      var tags = [].concat(this.state.tags, tag);\n      this.setState({\n        tags: tags\n      });\n      this.sendData(tags);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        ref: this.reactTags,\n        tags: this.state.tags,\n        suggestions: this.state.suggestions,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        allowNew: true,\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchFilters;\n}(React.Component);\n\nexport default SearchFilters;","map":{"version":3,"sources":["C:/Users/39333/desktop/crowdpulse2.0-main/frontend/src/components/Filters/SearchFilters.js"],"names":["React","ReactTags","axios","SearchFilters","props","getTags","i","j","k","data","allTags","temp","tempSuggestion","strings","length","_id","undefined","tag_me","split","indexOf","id","name","push","state","suggestions","setState","reactTags","createRef","sendData","tags","parentCallback","bind","prevProps","mongodb","slice","splice","tag","concat","onDelete","onAddition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactTags from 'react-tag-autocomplete'\nimport './css/searchbar.css';\nimport axios from 'axios';\n\n\n//https://www.npmjs.com/package/react-tag-autocomplete\nclass SearchFilters extends React.Component {\n  constructor (props) {\n    super(props)\n    this.sendData = this.sendData.bind(this)\n    this.state = {\n      tags: [     \n      ],\n      suggestions: [\n       \n      ]\n    }\n  \n    this.getTags();\n         \n  }\n\n  getTags = () =>{\n    \n\n    var i = 0;\n    var j = 0;\n    var k =0;\n    const data = this.props.allTags.data;\n    \n    var temp ;\n    var tempSuggestion = [];\n    var strings = [];\n\n\n    while(i<data.length){\n      j=0;\n      \n      if(data[i]._id!==undefined&&data[i]._id!==null){\n        \n        while(j<data[i]._id.tag_me.length){\n          \n          temp=data[i]._id.tag_me[j].split(\" : \")\n\n          if(strings.indexOf(temp[0])>-1){\n\n          }else{\n            tempSuggestion[k] = {\n              id:temp[1],\n              name: temp[0]\n            };\n            strings.push(temp[0])\n          }\n\n\n          k++;\n          j++;\n        }\n      }\n        i++;  \n    }\n    \n    \n    this.state.suggestions = tempSuggestion\n    this.setState({suggestions: tempSuggestion})\n\n    \n   \n     \n \n\n\nthis.reactTags = React.createRef()\n\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.mongodb!==this.props.mongodb){\n      this.getTags();\n    }\n    \n  }\n\n\n  \n\n  sendData = (tags) =>{\n    this.props.parentCallback(tags);\n  }\n\n  onDelete (i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    this.setState({ tags })\n    this.sendData(tags)\n  }\n\n  onAddition (tag) {\n    const tags = [].concat(this.state.tags, tag)\n    this.setState({ tags })\n    this.sendData(tags)\n  }\n\n  render () {\n    return (\n     \n      <ReactTags\n        ref={this.reactTags}\n        tags={this.state.tags}\n        suggestions={this.state.suggestions}\n        onDelete={this.onDelete.bind(this)}\n        onAddition={this.onAddition.bind(this)} \n        allowNew={true}\n        classNames=\"search\"\n        />\n     \n\n    )\n  }\n}\n\n\nexport default SearchFilters"]},"metadata":{},"sourceType":"module"}