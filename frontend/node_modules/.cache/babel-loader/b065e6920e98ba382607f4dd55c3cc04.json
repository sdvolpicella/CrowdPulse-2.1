{"ast":null,"code":"import _classCallCheck from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\src\\\\components\\\\TimeLines.js\";\nimport Filters from './Filters/TimeLinesFilters';\nimport React from 'react';\nimport TimeLineChart from './Charts/TimeLineChart';\nimport PreLoader from \"./preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TweetList = /*#__PURE__*/function (_React$Component) {\n  _inherits(TweetList, _React$Component);\n\n  var _super = _createSuper(TweetList);\n\n  function TweetList(props) {\n    var _this;\n\n    _classCallCheck(this, TweetList);\n\n    _this = _super.call(this, props);\n\n    _this.handleQuery = function (data) {\n      _this.setState({\n        data: data\n      });\n\n      _this.state.data = data;\n      _this.state.totalTweets = data.length;\n\n      _this.query();\n\n      _this.setState({\n        flag: 1\n      });\n    };\n\n    _this.query = function () {\n      var dataGroupByDates = [{\n        id: null,\n        counter: null\n      }];\n      var i = 0;\n      var j = 0;\n\n      if (_this.state.data.length !== 0) {\n        var dt = _this.state.data[0].created_at.substring(0, 10);\n\n        dataGroupByDates[0].id = dt;\n\n        while (i < _this.state.data.length) {\n          if (dataGroupByDates[j].id === _this.state.data[i].created_at.substring(0, 10)) {\n            dataGroupByDates[j].counter++;\n          } else {\n            j++;\n            dataGroupByDates.push({\n              id: _this.state.data[i].created_at.substring(0, 10),\n              counter: 0\n            });\n          }\n\n          i++;\n        }\n      }\n\n      _this.setState({\n        dataGroupByDates: dataGroupByDates\n      });\n\n      _this.state.dataGroupByDates = dataGroupByDates;\n    };\n\n    _this.state = {\n      totalTweets: 0,\n      flagType: 0,\n      counter: [],\n      data: [],\n      dataGroupByDates: [],\n      flag: 0\n    };\n    return _this;\n  }\n\n  _createClass(TweetList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.db !== this.props.db) {\n        this.setState({\n          flag: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var body;\n\n      if (this.state.flag > 0) {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: /*#__PURE__*/_jsxDEV(TimeLineChart, {\n                data: this.state.dataGroupByDates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this);\n      } else {\n        body = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main users chart-page\",\n          id: \"skip-target\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"CrowdPulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Time Line - \", this.props.db, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Filters, {\n              parentCallback: this.handleQuery.bind(this),\n              db: this.props.db\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), body]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"footer\",\n          style: {\n            background: 'blue'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container footer--flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-start\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2021 \\xA9 Giovanni Tempesta \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return TweetList;\n}(React.Component);\n\nexport default TweetList;","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/src/components/TimeLines.js"],"names":["Filters","React","TimeLineChart","PreLoader","TweetList","props","handleQuery","data","setState","state","totalTweets","length","query","flag","dataGroupByDates","id","counter","i","j","dt","created_at","substring","push","flagType","prevProps","db","body","bind","background","Component"],"mappings":"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","sourcesContent":["import Filters from './Filters/TimeLinesFilters';\r\nimport React from 'react';\r\nimport TimeLineChart from './Charts/TimeLineChart';\r\nimport PreLoader from \"./preloader\";\r\n\r\n\r\nclass TweetList extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n          totalTweets: 0,\r\n          flagType: 0,\r\n          counter : [],\r\n          data: [],\r\n          dataGroupByDates:[],\r\n          flag:0\r\n\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if(prevProps.db!==this.props.db){\r\n        this.setState({flag:0})\r\n      }\r\n      \r\n    }\r\n\r\n    handleQuery = (data) => {\r\n    \r\n      this.setState({data:data})\r\n      this.state.data = data\r\n      this.state.totalTweets = data.length\r\n      this.query()\r\n      this.setState({flag:1})\r\n    \r\n    }\r\n  \r\n\r\n      query = () =>{\r\n        var dataGroupByDates=[{\r\n          id:null,\r\n          counter:null\r\n        }]\r\n\r\n        var i = 0\r\n        var j = 0\r\n        \r\n        if(this.state.data.length!==0){\r\n          var dt = this.state.data[0].created_at.substring(0, 10)\r\n          dataGroupByDates[0].id=dt\r\n\r\n          while(i<this.state.data.length){\r\n\r\n            if(dataGroupByDates[j].id===this.state.data[i].created_at.substring(0, 10)){\r\n              dataGroupByDates[j].counter++\r\n            }else{\r\n                j++\r\n                dataGroupByDates.push({\r\n                  id :this.state.data[i].created_at.substring(0, 10),\r\n                  counter:0\r\n                })\r\n           \r\n            }\r\n            i++\r\n          }\r\n          \r\n        }\r\n\r\n        this.setState({dataGroupByDates : dataGroupByDates})\r\n        this.state.dataGroupByDates=dataGroupByDates\r\n        \r\n      }\r\n   \r\n    \r\n      render () {\r\n        var body;\r\n\r\n        if(this.state.flag>0){\r\n          body=            <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"chart\">\r\n              <TimeLineChart data={this.state.dataGroupByDates}/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }else{\r\n          body=\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n            <div className=\"chart\"> <PreLoader/></div>\r\n          </div>\r\n          </div>\r\n        }\r\n          return(\r\n        <div className=\"main-wrapper\">\r\n        {/* ! Main */}\r\n        <main className=\"main users chart-page\" id=\"skip-target\">\r\n          <div className=\"container\">\r\n            <h1>CrowdPulse</h1>\r\n            <br/>\r\n            <h3>Time Line - {this.props.db} </h3>\r\n            <br/>\r\n           <Filters  parentCallback = {this.handleQuery.bind(this)} db={this.props.db} /> \r\n            <br/>\r\n            {body}\r\n\r\n          </div>\r\n        </main>\r\n        {/* ! Footer */}\r\n        <footer className=\"footer\" style={{ background: 'blue' }}>\r\n          <div className=\"container footer--flex\">\r\n            <div className=\"footer-start\">\r\n              <p>2021 © Giovanni Tempesta </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\nexport default TweetList"]},"metadata":{},"sourceType":"module"}