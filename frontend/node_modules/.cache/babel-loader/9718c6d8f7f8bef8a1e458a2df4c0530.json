{"ast":null,"code":"import React from\"react\";import{Pie}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";var PieChart=function PieChart(props){var negative=props.negative;var positive=props.positive;var neutral=props.neutral;var data2=[negative,neutral,positive];var total=data2.reduce(function(accumulator,currentValue){return accumulator+currentValue;});var labels=data2.map(function(value){return(value/total*100).toFixed(2)+'%';});var data={labels:['Negative = '+labels[0],'Neutral = '+labels[1],'Positive = '+labels[2]],datasets:[{label:'Sentiment',data:[negative,neutral,positive],backgroundColor:['rgb(255, 99, 132)','rgb(54, 162, 235)','rgb(255, 205, 86)'],hoverOffset:4}]};var option={tooltips:{callbacks:{label:function label(tooltipItem,data){var dataset=data.datasets[tooltipItem.datasetIndex];var meta=dataset._meta[Object.keys(dataset._meta)[0]];var total=meta.total;var currentValue=dataset.data[tooltipItem.index];var percentage=parseFloat((currentValue/total*100).toFixed(2));return currentValue+' ('+percentage+'%)';},title:function title(tooltipItem,data){return data.labels[tooltipItem[0].index];}}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Pie,{data:data,width:100,height:400})});};export default PieChart;","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Charts/PieChart.js"],"names":["React","Pie","PieChart","props","negative","positive","neutral","data2","total","reduce","accumulator","currentValue","labels","map","value","toFixed","data","datasets","label","backgroundColor","hoverOffset","option","tooltips","callbacks","tooltipItem","dataset","datasetIndex","meta","_meta","Object","keys","index","percentage","parseFloat","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,KAAkB,iBAAlB,C,2CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAU,CACzB,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAArB,CACA,GAAIC,CAAAA,QAAQ,CAAGF,KAAK,CAACE,QAArB,CACA,GAAIC,CAAAA,OAAO,CAAGH,KAAK,CAACG,OAApB,CACA,GAAIC,CAAAA,KAAK,CAAG,CAACH,QAAD,CAAWE,OAAX,CAAoBD,QAApB,CAAZ,CAGA,GAAIG,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAa,SAACC,WAAD,CAAcC,YAAd,QAA+BD,CAAAA,WAAW,CAAGC,YAA7C,EAAb,CAAZ,CAEA,GAAIC,CAAAA,MAAM,CAAGL,KAAK,CAACM,GAAN,CAAU,SAAAC,KAAK,QAAI,CAACA,KAAK,CAAGN,KAAR,CAAgB,GAAjB,EAAsBO,OAAtB,CAA8B,CAA9B,EAAmC,GAAvC,EAAf,CAAb,CAEA,GAAOC,CAAAA,IAAI,CAAG,CACZJ,MAAM,CAAE,CACN,cAAgBA,MAAM,CAAC,CAAD,CADhB,CAEN,aAAgBA,MAAM,CAAC,CAAD,CAFhB,CAGN,cAAgBA,MAAM,CAAC,CAAD,CAHhB,CADI,CAMZK,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,WADE,CAETF,IAAI,CAAE,CAACZ,QAAD,CAAWE,OAAX,CAAoBD,QAApB,CAFG,CAITc,eAAe,CAAE,CACf,mBADe,CAEf,mBAFe,CAGf,mBAHe,CAJR,CASTC,WAAW,CAAE,CATJ,CAAD,CANE,CAAd,CAkBA,GAAMC,CAAAA,MAAM,CAAG,CACbC,QAAQ,CAAE,CACRC,SAAS,CAAE,CACTL,KAAK,CAAE,eAASM,WAAT,CAAsBR,IAAtB,CAA4B,CACjC,GAAIS,CAAAA,OAAO,CAAGT,IAAI,CAACC,QAAL,CAAcO,WAAW,CAACE,YAA1B,CAAd,CACA,GAAIC,CAAAA,IAAI,CAAGF,OAAO,CAACG,KAAR,CAAcC,MAAM,CAACC,IAAP,CAAYL,OAAO,CAACG,KAApB,EAA2B,CAA3B,CAAd,CAAX,CACA,GAAIpB,CAAAA,KAAK,CAAGmB,IAAI,CAACnB,KAAjB,CACA,GAAIG,CAAAA,YAAY,CAAGc,OAAO,CAACT,IAAR,CAAaQ,WAAW,CAACO,KAAzB,CAAnB,CACA,GAAIC,CAAAA,UAAU,CAAGC,UAAU,CAAC,CAACtB,YAAY,CAACH,KAAb,CAAmB,GAApB,EAAyBO,OAAzB,CAAiC,CAAjC,CAAD,CAA3B,CACA,MAAOJ,CAAAA,YAAY,CAAG,IAAf,CAAsBqB,UAAtB,CAAmC,IAA1C,CACD,CARQ,CASTE,KAAK,CAAE,eAASV,WAAT,CAAsBR,IAAtB,CAA4B,CACjC,MAAOA,CAAAA,IAAI,CAACJ,MAAL,CAAYY,WAAW,CAAC,CAAD,CAAX,CAAeO,KAA3B,CAAP,CACD,CAXQ,CADH,CADG,CAAf,CAkBE,mBACI,kCACI,KAAC,GAAD,EACV,IAAI,CAAIf,IADE,CAEX,KAAK,CAAE,GAFI,CAGX,MAAM,CAAE,GAHG,EADJ,EADJ,CAUH,CAzDD,CA2DA,cAAed,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport {Pie} from 'react-chartjs-2';\n\n\nconst PieChart = (props) =>{\n  var negative = props.negative\n  var positive = props.positive\n  var neutral = props.neutral\n  var data2 = [negative, neutral, positive]\n\n  \n  let total = data2.reduce((accumulator, currentValue) => accumulator + currentValue);\n    \n  var labels = data2.map(value => (value / total * 100).toFixed(2) + '%');\n\n  const  data = {\n    labels: [\n      'Negative = ' + labels[0],\n      'Neutral = '  + labels[1],\n      'Positive = ' + labels[2]\n    ],\n    datasets: [{\n      label: 'Sentiment',\n      data: [negative, neutral, positive],\n      \n      backgroundColor: [\n        'rgb(255, 99, 132)',\n        'rgb(54, 162, 235)',\n        'rgb(255, 205, 86)'\n      ],\n      hoverOffset: 4\n    }]\n  }\n  const option = {\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          var dataset = data.datasets[tooltipItem.datasetIndex];\n          var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          var total = meta.total;\n          var currentValue = dataset.data[tooltipItem.index];\n          var percentage = parseFloat((currentValue/total*100).toFixed(2));\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function(tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        }\n      }\n    }\n  }\n\n    return(\n        <div>\n            <Pie\n\t data = {data}\n\twidth={100}\n\theight={400}\n            />\n        </div>\n    )\n    \n}\n\nexport default PieChart"]},"metadata":{},"sourceType":"module"}