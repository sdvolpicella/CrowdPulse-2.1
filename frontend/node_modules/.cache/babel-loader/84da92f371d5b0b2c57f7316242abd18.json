{"ast":null,"code":"import _classCallCheck from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Giovanni\\\\wa\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchFilters.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport axios from 'axios'; //https://www.npmjs.com/package/react-tag-autocomplete\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchFilters = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchFilters, _React$Component);\n\n  var _super = _createSuper(SearchFilters);\n\n  function SearchFilters(props) {\n    var _this;\n\n    _classCallCheck(this, SearchFilters);\n\n    _this = _super.call(this, props);\n\n    _this.sendData = function (tags) {\n      _this.props.parentCallback(tags);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tags: [],\n      suggestions: []\n    };\n    console.log(\"call filtro\");\n    axios.get('/tweet/getTags', {\n      params: {\n        db: _this.props.db\n      }\n    }).then(function (response) {\n      var i = 0;\n      var j = 0;\n      var k = 0;\n      var data = response.data;\n      var temp;\n      var tempSuggestion = [];\n      var strings = [];\n      console.log(data[0]);\n      console.log(data[0].uniqueValues);\n\n      while (i < data[0].uniqueValues.length) {\n        j = 0;\n\n        if (data[0].uniqueValues[i] !== undefined && data[0].uniqueValues[i] !== null) {\n          while (j < data[0].uniqueValues[i].tag_me.length) {\n            temp = data[0].uniqueValues[i].tag_me[j].split(\" : \");\n            tempSuggestion[k] = {\n              id: temp[1],\n              name: temp[0]\n            };\n            k++;\n            j++;\n          }\n        }\n\n        i++;\n      } //this.state.suggestions = tempSuggestion\n\n\n      _this.setState({\n        suggestions: tempSuggestion\n      });\n    }).catch(function (error) {\n      console.log('error: ', error);\n    });\n    _this.reactTags = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(SearchFilters, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.db !== this.props.db) {\n        axios.get('/tweet/getTags', {\n          params: {\n            db: this.props.db\n          }\n        }).then(function (response) {\n          var i = 0;\n          var j = 0;\n          var k = 0;\n          var data = response.data;\n          var temp;\n          var tempSuggestion = [];\n\n          while (i < data.length) {\n            j = 0;\n\n            if (data[i].uniqueValues !== undefined && data[i].uniqueValues !== null) {\n              while (j < data[i].uniqueValues.tag_me.length) {\n                temp = data[i].uniqueValues.tag_me[j].split(\" : \");\n                tempSuggestion[k] = {\n                  id: temp[1],\n                  name: temp[0]\n                };\n                k++;\n                j++;\n              }\n            }\n\n            i++;\n          } //this.state.suggestions = tempSuggestion\n\n\n          _this2.setState({\n            suggestions: tempSuggestion\n          });\n        }).catch(function (error) {\n          console.log('error: ', error);\n        });\n        this.reactTags = /*#__PURE__*/React.createRef();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var tags = this.state.tags.slice(0);\n      tags.splice(i, 1);\n      this.setState({\n        tags: tags\n      });\n      this.sendData(tags);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(tag) {\n      var tags = [].concat(this.state.tags, tag);\n      this.setState({\n        tags: tags\n      });\n      this.sendData(tags);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        ref: this.reactTags,\n        tags: this.state.tags,\n        suggestions: this.state.suggestions,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchFilters;\n}(React.Component);\n\nexport default SearchFilters;","map":{"version":3,"sources":["C:/Users/Giovanni/wa/CrowdPulse/frontend/src/components/Filters/SearchFilters.js"],"names":["React","ReactTags","axios","SearchFilters","props","sendData","tags","parentCallback","bind","state","suggestions","console","log","get","params","db","then","response","i","j","k","data","temp","tempSuggestion","strings","uniqueValues","length","undefined","tag_me","split","id","name","setState","catch","error","reactTags","createRef","prevProps","slice","splice","tag","concat","onDelete","onAddition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//https://www.npmjs.com/package/react-tag-autocomplete\r\nclass SearchFilters extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n      tags: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n  \r\n    console.log(\"call filtro\")\r\n\r\n    axios.get('/tweet/getTags', {\r\n      params: {\r\n        db: this.props.db\r\n      }\r\n    })\r\n        .then((response) => {\r\n          var i = 0\r\n          var j = 0\r\n          var k =0\r\n          const data = response.data\r\n             \r\n          var temp \r\n          var tempSuggestion = []\r\n          var strings = []\r\n          \r\n          console.log(data[0])\r\n\r\n          console.log(data[0].uniqueValues)\r\n          while(i<data[0].uniqueValues.length){\r\n            j=0\r\n            \r\n            if(data[0].uniqueValues[i]!==undefined&&data[0].uniqueValues[i]!==null){\r\n              \r\n              while(j<data[0].uniqueValues[i].tag_me.length){\r\n                \r\n                temp=data[0].uniqueValues[i].tag_me[j].split(\" : \")\r\n\r\n\r\n                tempSuggestion[k] = {\r\n                  id:temp[1],\r\n                  name: temp[0]\r\n                }\r\n\r\n                k++\r\n                j++\r\n              }\r\n            }\r\n              i++\r\n          }\r\n          \r\n          \r\n          //this.state.suggestions = tempSuggestion\r\n          this.setState({suggestions: tempSuggestion})\r\n         \r\n           \r\n      })\r\n      .catch((error) => {\r\n          console.log('error: ', error)\r\n      });\r\n    \r\n      \r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.db!==this.props.db){\r\n      axios.get('/tweet/getTags', {\r\n        params: {\r\n          db: this.props.db\r\n        }\r\n      })\r\n          .then((response) => {\r\n            var i = 0\r\n            var j = 0\r\n            var k =0\r\n            const data = response.data\r\n               \r\n            var temp \r\n            var tempSuggestion = []\r\n            \r\n            while(i<data.length){\r\n              j=0\r\n              if(data[i].uniqueValues!==undefined&&data[i].uniqueValues!==null){\r\n                while(j<data[i].uniqueValues.tag_me.length){\r\n                  temp=data[i].uniqueValues.tag_me[j].split(\" : \")\r\n                  \r\n                  tempSuggestion[k] = {\r\n                    id:temp[1],\r\n                    name: temp[0]\r\n                  }\r\n                  k++\r\n                  j++\r\n                }\r\n              }\r\n                i++\r\n            }\r\n            \r\n            \r\n            //this.state.suggestions = tempSuggestion\r\n            this.setState({suggestions: tempSuggestion})\r\n           \r\n             \r\n        })\r\n        .catch((error) => {\r\n            console.log('error: ', error)\r\n        });\r\n      \r\n        \r\n  \r\n      this.reactTags = React.createRef()\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  sendData = (tags) =>{\r\n    this.props.parentCallback(tags);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const tags = this.state.tags.slice(0)\r\n    tags.splice(i, 1)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  onAddition (tag) {\r\n    const tags = [].concat(this.state.tags, tag)\r\n    this.setState({ tags })\r\n    this.sendData(tags)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        ref={this.reactTags}\r\n        tags={this.state.tags}\r\n        suggestions={this.state.suggestions}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchFilters"]},"metadata":{},"sourceType":"module"}