{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/Giovanni/wa/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nvar calculateRange = function calculateRange(data, rowsPerPage) {\n  var range = [];\n  var num = Math.ceil(data.length / rowsPerPage);\n  var i = 1;\n\n  for (var _i = 1; _i <= num; _i++) {\n    range.push(_i);\n  }\n\n  return range;\n};\n\nvar sliceData = function sliceData(data, page, rowsPerPage) {\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\n};\n\nvar useTable = function useTable(data, page, rowsPerPage) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableRange = _useState2[0],\n      setTableRange = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      slice = _useState4[0],\n      setSlice = _useState4[1];\n\n  useEffect(function () {\n    var range = calculateRange(data, rowsPerPage);\n    setTableRange(_toConsumableArray(range));\n    var slice = sliceData(data, page, rowsPerPage);\n    setSlice(_toConsumableArray(slice));\n  }, [data, setTableRange, page, setSlice]);\n  return {\n    slice: slice,\n    range: tableRange\n  };\n};\n\n_s(useTable, \"6WC9h+Gz2mUecmNIQPN7Q27vSx4=\");\n\nexport default useTable;","map":{"version":3,"sources":["C:/Users/Giovanni/wa/CrowdPulse/frontend/src/hooks/useTable.js"],"names":["useState","useEffect","calculateRange","data","rowsPerPage","range","num","Math","ceil","length","i","push","sliceData","page","slice","useTable","tableRange","setTableRange","setSlice"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,WAAP,EAAuB;AAC5C,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,MAAL,GAAcL,WAAxB,CAAZ;AACA,MAAIM,CAAC,GAAG,CAAR;;AACA,OAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAIJ,GAArB,EAA0BI,EAAC,EAA3B,EAA+B;AAC7BL,IAAAA,KAAK,CAACM,IAAN,CAAWD,EAAX;AACD;;AACD,SAAOL,KAAP;AACD,CARD;;AAUA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACT,IAAD,EAAOU,IAAP,EAAaT,WAAb,EAA6B;AAC7C,SAAOD,IAAI,CAACW,KAAL,CAAW,CAACD,IAAI,GAAG,CAAR,IAAaT,WAAxB,EAAqCS,IAAI,GAAGT,WAA5C,CAAP;AACD,CAFD;;AAIA,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACZ,IAAD,EAAOU,IAAP,EAAaT,WAAb,EAA6B;AAAA;;AAC5C,kBAAoCJ,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOgB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA0BjB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcI,QAAd;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMI,KAAK,GAAGH,cAAc,CAACC,IAAD,EAAOC,WAAP,CAA5B;AACAa,IAAAA,aAAa,oBAAKZ,KAAL,EAAb;AAEA,QAAMS,KAAK,GAAGF,SAAS,CAACT,IAAD,EAAOU,IAAP,EAAaT,WAAb,CAAvB;AACAc,IAAAA,QAAQ,oBAAKJ,KAAL,EAAR;AACD,GANQ,EAMN,CAACX,IAAD,EAAOc,aAAP,EAAsBJ,IAAtB,EAA4BK,QAA5B,CANM,CAAT;AAQA,SAAO;AAAEJ,IAAAA,KAAK,EAALA,KAAF;AAAST,IAAAA,KAAK,EAAEW;AAAhB,GAAP;AACD,CAbD;;GAAMD,Q;;AAeN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default useTable;"]},"metadata":{},"sourceType":"module"}