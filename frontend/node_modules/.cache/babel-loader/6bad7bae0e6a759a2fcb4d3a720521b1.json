{"ast":null,"code":"import _classCallCheck from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\giovt\\\\Desktop\\\\crowdpulse old\\\\CrowdPulse\\\\frontend\\\\src\\\\components\\\\Filters\\\\SearchUser.js\";\nimport React from 'react';\nimport ReactTags from 'react-tag-autocomplete';\nimport './css/searchbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SearchUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchUser, _React$Component);\n\n  var _super = _createSuper(SearchUser);\n\n  function SearchUser(props) {\n    var _this;\n\n    _classCallCheck(this, SearchUser);\n\n    _this = _super.call(this, props);\n\n    _this.getUser = function () {\n      var i = 0;\n      console.log(_this.props.allUser.data); //const data = this.props.users.data;\n\n      var strings = [];\n      var tempSuggestion = []; //console.log(\"hashtags\"+data[0])\n\n      _this.state.suggestions = tempSuggestion;\n\n      _this.setState({\n        suggestions: tempSuggestion\n      });\n\n      _this.reactTags = /*#__PURE__*/React.createRef();\n    };\n\n    _this.sendData = function (users) {\n      _this.props.parentCallback(users);\n    };\n\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_this));\n    _this.state = {\n      users: [],\n      suggestions: []\n    };\n\n    _this.getUser();\n\n    return _this;\n  }\n\n  _createClass(SearchUser, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.mongodb !== this.props.mongodb) {\n        this.getHashtags();\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(i) {\n      var users = this.state.users.slice(0);\n      users.splice(i, 1);\n      this.setState({\n        users: users\n      });\n      this.sendData(users);\n    }\n  }, {\n    key: \"onAddition\",\n    value: function onAddition(user) {\n      var users = [].concat(this.state.users, user);\n      this.setState({\n        users: users\n      });\n      this.sendData(users);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(ReactTags, {\n        placeholderText: \"Add new Username\",\n        ref: this.reactTags,\n        tags: this.state.users,\n        suggestions: this.state.users,\n        onDelete: this.onDelete.bind(this),\n        onAddition: this.onAddition.bind(this),\n        allowNew: true,\n        classNames: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SearchUser;\n}(React.Component);\n\nexport default SearchUser;","map":{"version":3,"sources":["C:/Users/giovt/Desktop/crowdpulse old/CrowdPulse/frontend/src/components/Filters/SearchUser.js"],"names":["React","ReactTags","SearchUser","props","getUser","i","console","log","allUser","data","strings","tempSuggestion","state","suggestions","setState","reactTags","createRef","sendData","users","parentCallback","bind","prevProps","mongodb","getHashtags","slice","splice","user","concat","onDelete","onAddition","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,qBAAP;;;IAKMC,U;;;;;AACJ,sBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAcpBC,OAdoB,GAcV,YAAM;AACd,UAAIC,CAAC,GAAG,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAA/B,EAFc,CAGd;;AACA,UAAIC,OAAO,GAAG,EAAd;AAEA,UAAIC,cAAc,GAAG,EAArB,CANc,CAOd;;AAGA,YAAKC,KAAL,CAAWC,WAAX,GAAyBF,cAAzB;;AACA,YAAKG,QAAL,CAAc;AAACD,QAAAA,WAAW,EAAEF;AAAd,OAAd;;AAGJ,YAAKI,SAAL,gBAAiBf,KAAK,CAACgB,SAAN,EAAjB;AACG,KA7BmB;;AAAA,UAwCpBC,QAxCoB,GAwCT,UAACC,KAAD,EAAU;AACnB,YAAKf,KAAL,CAAWgB,cAAX,CAA0BD,KAA1B;AACD,KA1CmB;;AAElB,UAAKD,QAAL,GAAgB,MAAKA,QAAL,CAAcG,IAAd,+BAAhB;AACA,UAAKR,KAAL,GAAa;AACTM,MAAAA,KAAK,EAAE,EADE;AAGXL,MAAAA,WAAW,EAAE;AAHF,KAAb;;AAQA,UAAKT,OAAL;;AAXkB;AAYnB;;;;WAoBD,4BAAmBiB,SAAnB,EAA8B;AAC5B,UAAGA,SAAS,CAACC,OAAV,KAAoB,KAAKnB,KAAL,CAAWmB,OAAlC,EAA0C;AACxC,aAAKC,WAAL;AACD;AAEF;;;WAOD,kBAAUlB,CAAV,EAAa;AACX,UAAMa,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAX,CAAiBM,KAAjB,CAAuB,CAAvB,CAAd;AACAN,MAAAA,KAAK,CAACO,MAAN,CAAapB,CAAb,EAAgB,CAAhB;AACA,WAAKS,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAALA;AAAF,OAAd;AACA,WAAKD,QAAL,CAAcC,KAAd;AACD;;;WAED,oBAAYQ,IAAZ,EAAkB;AAChB,UAAMR,KAAK,GAAG,GAAGS,MAAH,CAAU,KAAKf,KAAL,CAAWM,KAArB,EAA4BQ,IAA5B,CAAd;AACA,WAAKZ,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAALA;AAAF,OAAd;AACA,WAAKD,QAAL,CAAcC,KAAd;AACD;;;WAED,kBAAU;AACR,0BAEE,QAAC,SAAD;AACE,QAAA,eAAe,EAAC,kBADlB;AAEE,QAAA,GAAG,EAAE,KAAKH,SAFZ;AAGE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWM,KAHnB;AAIE,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWM,KAJ1B;AAKE,QAAA,QAAQ,EAAE,KAAKU,QAAL,CAAcR,IAAd,CAAmB,IAAnB,CALZ;AAME,QAAA,UAAU,EAAE,KAAKS,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CANd;AAOE,QAAA,QAAQ,EAAE,IAPZ;AAQE,QAAA,UAAU,EAAC;AARb;AAAA;AAAA;AAAA;AAAA,cAFF;AAeD;;;;EA1EsBpB,KAAK,CAAC8B,S;;AA8E/B,eAAe5B,UAAf","sourcesContent":["import React from 'react'\r\nimport ReactTags from 'react-tag-autocomplete'\r\nimport './css/searchbar.css';\r\n\r\n\r\n\r\n\r\nclass SearchUser extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.state = {\r\n        users: [     \r\n      ],\r\n      suggestions: [\r\n       \r\n      ]\r\n    }\r\n     \r\n    this.getUser();\r\n  }\r\n\r\n  getUser = () => {\r\n    var i = 0;\r\n    console.log(this.props.allUser.data)\r\n    //const data = this.props.users.data;\r\n    var strings = [];\r\n   \r\n    var tempSuggestion = []\r\n    //console.log(\"hashtags\"+data[0])\r\n\r\n\r\n    this.state.suggestions = tempSuggestion\r\n    this.setState({suggestions: tempSuggestion})\r\n   \r\n\r\nthis.reactTags = React.createRef()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.mongodb!==this.props.mongodb){\r\n      this.getHashtags();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  sendData = (users) =>{\r\n    this.props.parentCallback(users);\r\n  }\r\n\r\n  onDelete (i) {\r\n    const users = this.state.users.slice(0)\r\n    users.splice(i, 1)\r\n    this.setState({ users })\r\n    this.sendData(users)\r\n  }\r\n\r\n  onAddition (user) {\r\n    const users = [].concat(this.state.users, user)\r\n    this.setState({ users })\r\n    this.sendData(users)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n     \r\n      <ReactTags\r\n        placeholderText=\"Add new Username\"\r\n        ref={this.reactTags}\r\n        tags={this.state.users}\r\n        suggestions={this.state.users}\r\n        onDelete={this.onDelete.bind(this)}\r\n        onAddition={this.onAddition.bind(this)} \r\n        allowNew={true}\r\n        classNames=\"search\"\r\n        />\r\n     \r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchUser"]},"metadata":{},"sourceType":"module"}