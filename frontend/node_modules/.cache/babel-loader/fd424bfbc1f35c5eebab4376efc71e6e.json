{"ast":null,"code":"import _classCallCheck from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import Filters from'./Filters/Filters';import React from'react';import{Map,TileLayer,Marker,Popup}from'react-leaflet';import PreLoader from\"./preloader\";import HeatmapLayer from'../HeatmapLayer';import citta from\"../it.json\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Maps=/*#__PURE__*/function(_React$Component){_inherits(Maps,_React$Component);var _super=_createSuper(Maps);function Maps(props){var _this;_classCallCheck(this,Maps);_this=_super.call(this,props);_this.handleQuery=function(data){_this.setState({data:data});_this.state.data=data;_this.query();_this.setState({flag:1});};_this.query=function(){var i=0;var j=0;var markers=[];var heatPoints=[];var flag=false;_this.state.counter=0;while(i<_this.state.data.length){if(_this.state.data[i].geo!==undefined){_this.state.counter++;if(_this.state.data[i].geo.coordinates!==undefined){markers.push({lat:_this.state.data[i].geo.coordinates.latitude,lng:_this.state.data[i].geo.coordinates.longitude,text:_this.state.data[i].raw_text,author:_this.state.data[i].author_username});heatPoints.push([_this.state.data[i].geo.coordinates.latitude,_this.state.data[i].geo.coordinates.longitude,100]);}else{j=0;flag=false;//Get coordinates from city name\n//Tollegno is the last city of the file \"it.json\"\nwhile(citta[j].city!=='Tollegno'){if(citta[j].city===_this.state.data[i].geo.user_location){flag=true;break;}j++;}if(flag===true){markers.push({lat:citta[j].lat,lng:citta[j].lng,text:_this.state.data[i].raw_text,author:_this.state.data[i].author_username});heatPoints.push([citta[j].lat,citta[j].lng,100]);}}i++;}else{i++;}}_this.setState({markers:markers});_this.state.markers=markers;_this.setState({heatPoints:heatPoints});_this.state.heatPoints=heatPoints;};_this.displayMap=function(){_this.state.content=0;_this.setState({content:0});};_this.displayHeatMap=function(){_this.state.content=1;_this.setState({content:1});};_this.state={data:[],markers:[],flag:0,heatPoints:[],content:0,counter:0};return _this;}_createClass(Maps,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.db!==this.props.db){this.setState({flag:0});}}},{key:\"render\",value:function render(){var _this2=this;var body;if(this.state.flag>0){if(this.state.content===0){body=/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart\",id:\"mapCanvas\",children:/*#__PURE__*/_jsxs(Map,{center:[41.29246,13.5736108],zoom:5,scrollWheelZoom:false,children:[this.state.markers.map(function(city,idx){return/*#__PURE__*/_jsx(Marker,{position:[city.lat,city.lng],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"b\",{children:[city.author,\", \",city.text]})})},idx);}),/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"})]})})})})});}else{body=/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart\",id:\"mapCanvas\",children:/*#__PURE__*/_jsxs(Map,{center:[41.29246,13.5736108],zoom:5,children:[/*#__PURE__*/_jsx(HeatmapLayer,{points:this.state.heatPoints,longitudeExtractor:function longitudeExtractor(m){return m[1];},latitudeExtractor:function latitudeExtractor(m){return m[0];},intensityExtractor:function intensityExtractor(m){return parseFloat(m[2]);}}),/*#__PURE__*/_jsx(TileLayer,{url:\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"})]})})})})});}}else{body=/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart\",children:[\" \",/*#__PURE__*/_jsx(PreLoader,{})]})})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"main-wrapper\",children:[/*#__PURE__*/_jsx(\"main\",{className:\"main users chart-page\",id:\"skip-target\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CrowdPulse\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Maps - \",this.props.mongodb,\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Filters,{parentCallback:this.handleQuery.bind(this),db:this.props.db,tweetsData:this.props.allTweetsData}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"button activeButton\",onClick:function onClick(){_this2.displayMap();},children:\" Map\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button activeButton\",onClick:function onClick(){_this2.displayHeatMap();},children:\" Heat Map\"}),/*#__PURE__*/_jsxs(\"b\",{children:[\"Tweet Geolocalizzati : \",this.state.counter]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),body]})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",style:{background:'blue'},children:/*#__PURE__*/_jsx(\"div\",{className:\"container footer--flex\",children:/*#__PURE__*/_jsx(\"div\",{className:\"footer-start\",children:/*#__PURE__*/_jsx(\"p\",{children:\"2021 \\xA9 Giovanni Tempesta \"})})})})]});}}]);return Maps;}(React.Component);export default Maps;","map":{"version":3,"sources":["C:/Users/39333/Desktop/CrowdPulse2.0-main/frontend/src/components/Maps.js"],"names":["Filters","React","Map","TileLayer","Marker","Popup","PreLoader","HeatmapLayer","citta","Maps","props","handleQuery","data","setState","state","query","flag","i","j","markers","heatPoints","counter","length","geo","undefined","coordinates","push","lat","latitude","lng","longitude","text","raw_text","author","author_username","city","user_location","displayMap","content","displayHeatMap","prevProps","db","body","map","idx","m","parseFloat","mongodb","bind","allTweetsData","background","Component"],"mappings":"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","sourcesContent":["import Filters from './Filters/Filters'\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport PreLoader from \"./preloader\";\nimport HeatmapLayer from '../HeatmapLayer';\n\nimport citta from \"../it.json\" \n\n \n\n\nclass Maps extends React.Component {\n  constructor(props){\n    super(props)\n    \n\n    this.state = {\n      data:[],\n      markers : [],\n      flag:0,\n      heatPoints:[],\n      content:0,\n      counter:0,\n\n    }\n    \n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.db!==this.props.db){\n      this.setState({flag:0})\n    }\n    \n  }\n\n  handleQuery = (data) => {\n    \n    this.setState({data:data})\n    this.state.data = data\n    this.query()\n    this.setState({flag:1})\n  \n  }\n\n      query = () => {\n        var i = 0;\n        var j =0;\n        var markers = [];\n        var heatPoints = [];\n        var flag=false;\n        this.state.counter=0;\n        \n        while(i<this.state.data.length){\n          if(this.state.data[i].geo!==undefined){\n            \n            this.state.counter++;\n\n            if(this.state.data[i].geo.coordinates!==undefined){\n\n              markers.push({\n                lat:this.state.data[i].geo.coordinates.latitude,\n                lng:this.state.data[i].geo.coordinates.longitude,\n                text:this.state.data[i].raw_text,\n                author:this.state.data[i].author_username\n              })\n\n              heatPoints.push([this.state.data[i].geo.coordinates.latitude,this.state.data[i].geo.coordinates.longitude,100]);\n             \n            }else{\n\n              \n              j=0;\n              flag=false;\n              //Get coordinates from city name\n              //Tollegno is the last city of the file \"it.json\"\n              while(citta[j].city!=='Tollegno'){\n                if(citta[j].city === this.state.data[i].geo.user_location){\n                  flag=true;\n                  break;\n                }\n                j++;\n              }\n              \n              if(flag===true){\n                markers.push({\n                  lat:citta[j].lat,\n                  lng:citta[j].lng,\n                  text:this.state.data[i].raw_text,\n                  author:this.state.data[i].author_username\n                })\n  \n                heatPoints.push([citta[j].lat,citta[j].lng,100]);\n              }\n\n   \n\n            }\n            \n            i++\n          }else{\n            i++\n          }\n        }\n        \n        this.setState({markers:markers})\n        this.state.markers=markers\n        this.setState({heatPoints:heatPoints});\n        this.state.heatPoints=heatPoints;\n\n      \n        \n        \n        \n      }\n\n    displayMap = () =>{\n      this.state.content=0;\n      this.setState({content:0});\n    }\n\n    displayHeatMap = () =>{\n      this.state.content=1;\n      this.setState({content:1});\n    }\n    \n      render () {\n        var body;\n\n        if(this.state.flag>0){\n\n          if(this.state.content===0){\n            body=\n            <>\n \n \n            \n            <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"chart\" id=\"mapCanvas\">\n              <Map center={[41.29246 ,13.5736108]} zoom={5} scrollWheelZoom={false}>\n              {this.state.markers.map((city, idx) => (\n              <Marker\n                position={[city.lat, city.lng]}\n                \n                key={idx}\n              >\n                <Popup>\n                  <b>\n                    {city.author}, {city.text}\n                  </b>\n                </Popup>\n              </Marker>))}\n                  <TileLayer\n                      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n \n              </Map>\n              </div>\n            </div>\n \n          </div>\n\n          </>\n          }else{\n            body=\n            <>\n \n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"chart\" id=\"mapCanvas\">\n              <Map center={[41.29246 ,13.5736108]} zoom={5}>\n           <HeatmapLayer\n             points={this.state.heatPoints}\n             longitudeExtractor={m => m[1]}\n             latitudeExtractor={m => m[0]}\n             intensityExtractor={m => parseFloat(m[2])} />\n           <TileLayer\n             url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n           />\n         </Map>\n              </div>\n            </div>\n \n          </div>\n          </>\n          }\n\n\n        }else{\n          body=\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n            <div className=\"chart\"> <PreLoader/></div>\n          </div>\n          </div>\n        }\n          return(\n        <div className=\"main-wrapper\">\n        {/* ! Main */}\n        <main className=\"main users chart-page\" id=\"skip-target\">\n          <div className=\"container\">\n            <h1>CrowdPulse</h1>\n            <br/>\n            <h3>Maps - {this.props.mongodb} </h3>\n            <br/>\n            <Filters parentCallback = {this.handleQuery.bind(this)} db = {this.props.db}  tweetsData={this.props.allTweetsData}/>\n            <br/>\n            <button className='button activeButton' onClick={() => {this.displayMap()}} > Map</button>\n            <button className='button activeButton' onClick={() => {this.displayHeatMap()}} > Heat Map</button>\n            <b>Tweet Geolocalizzati : {this.state.counter}</b>\n            <br/><br/><br/>\n            {body}\n\n          </div>\n        </main>\n        {/* ! Footer */}\n        <footer className=\"footer\" style={{ background: 'blue' }}>\n          <div className=\"container footer--flex\">\n            <div className=\"footer-start\">\n              <p>2021 © Giovanni Tempesta </p>\n            </div>\n          </div>\n        </footer>\n      </div>\n      )\n      }\n\n}\nexport default Maps"]},"metadata":{},"sourceType":"module"}